<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>BINTOC( ) Function</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">BINTOC( ) Function</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Converts a numeric value to a binary character representation.</p>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
BINTOC(<span class="parameter">nExpression </span>[, <span class="parameter">eFlags</span>])</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">
          <span class="parameter">nExpression</span>
        </span></dt><dd>
          <p>Specifies the value to convert. For <span class="parameter">eFlags</span> settings 1, 2 or 4, this value is an integer. Otherwise, the expression data type is based on the <span class="parameter">eFlags</span> setting.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">eFlags</span>
        </span></dt><dd>
          <p>Specifies the length in characters of the returned character string. </p>
          <p>
            <span class="parameter">eFlags</span> determines the value you can specify for <span class="parameter">nExpression</span>. <span class="parameter">eFlags</span> can either be numeric or character. The following table lists the permissible values for <span class="parameter">eFlags</span> and the corresponding range of values for <span class="parameter">nExpression</span>:</p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  
                    <span class="parameter">eFlags</span>
                  
                </th>
                <th>
                  
                    <span class="parameter">nExpression</span> Range
                </th>
              </tr><tr>
              <td>
                <p>1</p>
              </td>
              <td>
                <p>–128 to 127</p>
              </td>
            </tr><tr>
              <td>
                <p>2</p>
              </td>
              <td>
                <p>–32,768 to 32,767</p>
              </td>
            </tr><tr>
              <td>
                <p>4</p>
              </td>
              <td>
                <p>–2,147,483,648 to 2,147,483,647</p>
                <p>This is default setting.</p>
              </td>
            </tr><tr>
              <td>
                <p>8</p>
              </td>
              <td>
                <p>The range of <span class="parameter">nExpression</span> depends on its type. Only numeric, float, double, and currency data types are supported with this option. See <span class="linkTerms"><a href="/html/67c1d841-7fa8-4e98-afaf-e4b167a52447.htm">Visual FoxPro Data and Field Types</a></span> for the ranges of the numeric, float, double, and currency data types. </p>
                <p>BINTOC( ) returns 8 bytes for this setting.</p>
              </td>
            </tr><tr>
              <td>
                <p>F</p>
              </td>
              <td>
                <p>
                  <span class="parameter">nExpression</span> is interpreted as a <span class="linkTerms"><a href="/html/fe695288-5d41-4425-84a2-0d0f40a40cb7.htm">Float Field Type</a></span> and BINTOC( ) returns 4 bytes.</p>
              </td>
            </tr><tr>
              <td>
                <p>B</p>
              </td>
              <td>
                <p>
                  <span class="parameter">nExpression</span> is interpreted as a <span class="linkTerms"><a href="/html/c3a10d85-d38a-4bee-b072-6f88d0a0775e.htm">Double Field Type</a></span> and BINTOC( ) returns 8 bytes.</p>
              </td>
            </tr><tr>
              <td>
                <p>R</p>
              </td>
              <td>
                <p>Reverses the resulting binary expression.</p>
              </td>
            </tr><tr>
              <td>
                <p>S</p>
              </td>
              <td>
                <p>Prevents the sign bit of number from being toggled (BITXOR).</p>
              </td>
            </tr></table></div>
          <p>If this parameter is omitted, BINTOC( ) returns a character string composed of four characters.</p>
        </dd></dl>
    
  <h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Character. BINTOC( ) returns a binary character expression.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>The <span class="parameter">eFlags</span> parameter can either be numeric or character. The 'R' and 'S' settings are additive while the others are mutually exclusive. Character settings can be passed in either upper or lower case (e.g., 'R' or 'r'). The following examples show various uses of the <span class="parameter">eFlags</span> parameter.</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>? BINTOC(1,1)
? BINTOC(1000,"2")&amp;&amp; same as BINTOC(1000,2)
? BINTOC($12.34,8)
? BINTOC(1, "4RS")&amp;&amp; same as BINTOC(1,"RS")
? BINTOC(-100, "Fr")</pre></td></tr></table></span></div>
      <p>You can use BINTOC( ) to reduce the size of indexes for numeric fields containing integer data by passing a numeric <span class="parameter">eFlags</span> parameter. For example, a numeric field named <code>nPartCode</code> might contain an integer value from 1 to 32,767, which corresponds to a parts classification code. BINTOC( ) lets you convert the value in the numeric field to a smaller character representation. For example, the following command creates an index with a two-character index key:</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>INDEX ON BINTOC(nPartCode,2) TAG PartCode</pre></td></tr></table></span></div>
      <p>When using BINTOC( ) for an 8 byte index creation, you should use 8 and not "B". For 4 byte results, you should use 4 if <span class="parameter">nExpression</span> is an integer type. Otherwise, you should use 'F' for floating point type.</p>
      <p>BINTOC( ) can also be used when working with Win32 API routines where you might need to convert to or from a Win32 struct member. When used for indexing, BINTOC( ) needs to properly handle negative numbers for the resulting binary expression. This is done by using a BITXOR operation on the high bit. This also means that the most significant byte is first. For Win32 API routines on an Intel platform, the architecture follows the little-endian rule where the least significant byte is stored first (memory location with lowest address). The 'R' and 'S' settings allow you to use BINTOC( ) to work more efficiently with routines that use structs.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/b1758fd8-354c-452d-a5f9-ca81292eb71e.htm">CTOBIN( ) Function</a></span><br /><span class="linkTerms"><a href="/html/cad2893d-9c63-4899-83d8-e5d58f79a414.htm">CREATEBINARY( ) Function</a></span><br /><span class="linkTerms"><a href="/html/e2e6eeaf-b170-4a8c-b826-c5127938d8d6.htm">Integer Field Type</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/da6b864f-f7c6-43a3-8218-20d56c7a4764.htm">Functions</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="BINTOC( ) Function">
<param name="ALink Name" value="BINTOC">
</OBJECT>
