<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>How to: Create Access and Assign Methods</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../local/drpdown.gif">
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../local/drpdown_orange.gif">
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../local/copycode.gif">
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../local/copycodeHighlight.gif">
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">How to: Create Access and Assign Methods</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoNoToggle" onclick="OpenSection(seeAlsoNoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>You can create Access and Assign methods for new custom properties, native Visual FoxPro properties, or existing custom properties. You can create them when adding or editing custom properties. For more information about Access and Assign methods, see <span class="linkTerms"><a href="/html/0f0717bb-ec5c-4d09-a80d-0afb19466c4b.htm">Access and Assign Methods</a></span>. For information about adding custom properties to forms, form sets, and classes, see <span class="linkTerms"><a href="/html/fae15519-7db5-4d62-866b-38e93719a545.htm">How to: Add Properties and Methods to a Form</a></span> and <span class="linkTerms"><a href="/html/7acdcaad-69f9-4ce1-8a4b-7e2150329c20.htm">How to: Add Properties to Classes</a></span>.</p>
    <p>You can create Access and Assign methods interactively in the Form Designer or Class Designer. To create Access and Assign methods for properties of forms and form sets, use the Form Designer. To create Access and Assign methods for properties of classes for controls and other objects, use the Class Designer. You can also create Access and Assign methods programmatically. </p>
  <h3 class="procedureSubHeading">To create an Access or Assign method when adding a new property</h3><div class="subSection"><ol><li>
        
          <p>In the <b>New Property</b> dialog box, select the <b>Access Method</b> box, the <b>Assign Method</b> box, or both. </p>
        
      </li><li>
        
          <p>When you are finished creating the property, click <b>Add</b>.</p>
        
      </li></ol></div><div id="sectionSection0" class="seeAlsoNoToggleSection">
      <p>When you create an Access or Assign method, the new method is added to the end of the properties list in the Properties window and appears with the suffix, <b>_access</b> or <b>_assign</b>.</p>
      <p>For more information, see <span class="linkTerms"><a href="/html/3e80df7d-e483-4f67-883f-92f3f9be314e.htm">New Property Dialog Box</a></span>.</p>
      <h3 class="procedureSubHeading">To create an Access or Assign method for a native Visual FoxPro property</h3><div class="subSection"><ol><li>
            
              <p>If you are in the <b>Form Designer</b>, on the <b>Form</b> menu, choose <b>New Method</b>. </p>
              <p>-OR-  </p>
              <p>If you are in the <b>Class Designer</b>, on the <b>Class</b> menu, choose <b>New Method</b>. </p>
            
          </li><li>
            
              <p>In the <b>Name</b> box of the <b>New Method</b> dialog box, type the name of the native Visual FoxPro property followed with the suffix <b>_ACCESS</b> or <b>_ASSIGN</b>. </p>
            
          </li><li>
            
              <p>When you are finished creating the method, click <b>Add</b>.</p>
            
          </li></ol></div>
      <p>For more information, see <span class="linkTerms"><a href="/html/5e3d2db2-214a-4c6f-9678-ca4356623419.htm">New Method Dialog Box</a></span></p>
      <h3 class="procedureSubHeading">To create an Access or Assign method for existing custom properties</h3><div class="subSection"><ol><li>
            
              <p>If you are in the <b>Form Designer</b>, on the <b>Form</b> menu, choose <b>Edit Property/Method</b>. </p>
              <p>-OR-  </p>
              <p>If you are in the <b>Class Designer</b>, on the <b>Class</b> menu, choose <b>Edit Property/Method</b>. </p>
            
          </li><li>
            
              <p>In the <b>Edit Property/Method</b> dialog box, select the property you want.</p>
            
          </li><li>
            
              <p>Select the <b>Access Method</b> box, the <b>Assign Method</b> box, or both.</p>
            
          </li><li>
            
              <p>Click <b>Apply</b>, and then <b>Close</b>.</p>
            
          </li></ol></div>
      <p>For more information, see <span class="linkTerms"><a href="/html/4da4f5d1-fa89-445e-9d0e-b03ee7e12f60.htm">Edit Property/Method Dialog Box</a></span>.</p>
      <p>When you create an Access or Assign method for an existing custom property, the new method is added to the end of the properties list in the Properties window and appears with the suffix, <b>_access</b> or <b>_assign</b>.</p>
      <h3 class="procedureSubHeading">To create Access and Assign methods programmatically</h3><div class="subSection"><ul><li>
            
              <p>Use the <b>DEFINE CLASS</b> command and include the <b>PROCEDURE</b> clause.</p>
            
          </li></ul></div>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>In Assign methods, you must include a <b>PARAMETERS</b> or <b>LPARAMETERS</b> statement so that when you attempt to assign a value to a property at run time, Visual FoxPro can accept the value and pass it to the Assign method.</p>
      </td></tr></table></div>
      <p>For more information, see <span class="linkTerms"><a href="/html/42b84eb0-a6fc-4ccd-abc2-1f9ffc853471.htm">DEFINE CLASS Command</a></span>.</p>
      <p>For example, the following code creates a class named MyClass with Access and Assign methods called MyProperty_ACCESS and MyProperty_ASSIGN for the custom property MyProperty. MyProperty_ACCESS responds to queries on the value of MyProperty, while MyProperty_ASSIGN responds to changes in the value of MyProperty.</p>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>The Assign method includes an <b>LPARAMETERS</b> statement so it can accept the value that is passed to it. </p>
      </td></tr></table></div>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>DEFINE CLASS MyClass AS Custom
   MyProperty = 100 
   PROCEDURE MyProperty_ACCESS 
      WAIT WINDOW 'This is the Access method';
         +  ' ' + PROGRAM( )
      RETURN THIS.MyProperty
   ENDPROC
   
   PROCEDURE MyProperty_ASSIGN 
      LPARAMETERS tAssign  
      WAIT WINDOW 'This is the Assign method';
          + ' ' + PROGRAM( )
   ENDPROC
ENDDEFINE</pre></td></tr></table></span></div>
      <p>The following code example creates a <b>Form</b> class named frmMyForm with an Assign method called Left_ASSIGN for the form's native <b>Left</b> property. Left_ASSIGN performs simple validation on the property value and runs when an attempt is made to assign a value to the property. If you attempt to change the <b>Left</b> property to a negative value, the Assign method displays a message and leaves the value unchanged. If you attempt to change the <b>Left</b> property to a nonnegative value, the method sets the property to the specified value.</p>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>The Assign method includes an <b>LPARAMETERS</b> statement so it can accept the value that is passed to it. </p>
      </td></tr></table></div>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>DEFINE CLASS frmMyForm AS Form
   PROCEDURE Left_ASSIGN 
      LPARAMETERS tAssign  
      DO CASE
         CASE tAssign &lt; 0 &amp;&amp; Value passed is negative.
            WAIT WINDOW 'Value must be greater than 0'
         OTHERWISE  &amp;&amp; Value passed is not negative.
            THIS.Left = tAssign
      ENDCASE
   ENDPROC
ENDDEFINE</pre></td></tr></table></span></div>
    </div><h1 class="heading">Creating THIS_ACCESS Methods</h1><div id="sectionSection1" class="seeAlsoNoToggleSection">
      <p>You can create <b>THIS_ACCESS</b> methods from the Form Designer, Class Designer, or programmatically.</p>
      <h3 class="procedureSubHeading">To create a THIS_ACCESS method</h3><div class="subSection"><ol><li>
            
              <p>On the <b>Form</b> menu in the <b>Form Designer</b> or on the <b>Class</b> Menu in the <b>Class Designer</b>, choose <b>New Method</b>.</p>
            
          </li><li>
            
              <p>In the <b>New Method</b> dialog box, type <b>THIS_ACCESS</b>.</p>
            
          </li><li>
            
              <p>Click <b>Add</b>. </p>
              <p>When created, the <b>THIS_ACCESS</b> method appears in the Properties window. To add code to the method, double-click the method in the Properties window. </p>
            
          </li></ol></div>
      <h3 class="procedureSubHeading">To create THIS_ACCESS methods programmatically</h3><div class="subSection"><ul><li>
            
              <p>Use the <b>DEFINE CLASS</b> command and include the <b>THIS_ACCESS</b> keyword. </p>
            
          </li></ul></div>
      <p>For more information, see <span class="linkTerms"><a href="/html/42b84eb0-a6fc-4ccd-abc2-1f9ffc853471.htm">DEFINE CLASS Command</a></span>.</p>
      <p>The following code example creates a <b>Form</b> class named MyForm with a <b>THIS_ACCESS</b> method, which contains an <b>LPARAMETER</b> statement with an object member name and some code to execute. The first line of code creates a form named oTempForm using the <b>CREATEOBJECT( ) </b>function. The second line of code attempts to assign a value to the form's <b>Caption</b> property. This action executes the <b>THIS_ACCESS</b> method and passes the name of the <b>Caption</b> property to the method. The <b>THIS_ACCESS</b> method displays the name of the object member, or 'Caption' in this example, using the question mark (<b>?</b>) command, and then returns an object reference for the form.</p>
      <p>The third line attempts to display the value of the form's <b>Caption</b> property using the <b>?</b> command. This action executes <b>THIS_ACCESS</b> again, passes the name of the <b>Caption</b> property to the method, displays 'Caption', and returns an object reference for the form. The value of the <b>Caption</b> property, 'abc', is then finally displayed. </p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>oTempForm = CREATEOBJECT('MyForm')  
oTempForm.Caption = 'abc'  
? oTempForm.Caption  
DEFINE CLASS MyForm AS Form
   PROCEDURE THIS_ACCESS
      LPARAMETER cMemberName  
      IF cMemberName = 'caption'
         ? cMemberName  
      ENDIF
      RETURN THIS
   ENDPROC
ENDDEFINE</pre></td></tr></table></span></div>
      <p>For more information, see <span class="linkTerms"><a href="/html/42b84eb0-a6fc-4ccd-abc2-1f9ffc853471.htm">DEFINE CLASS Command</a></span>.</p>
    </div><h1 class="heading"><span id="seeAlsoNoToggle">See Also</span></h1><div id="seeAlsoSection" class="seeAlsoNoToggleSection"><h4 class="subHeading">Tasks</h4><span class="linkTerms"><a href="/html/7acdcaad-69f9-4ce1-8a4b-7e2150329c20.htm">How to: Add Properties to Classes</a></span><br /><h4 class="subHeading">Concepts</h4><span class="linkTerms"><a href="/html/7f106091-a2c8-42aa-a8b5-dbeecb1f9502.htm">Working with Classes in Visual FoxPro</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="How to: Create Access and Assign Methods">
</OBJECT>
