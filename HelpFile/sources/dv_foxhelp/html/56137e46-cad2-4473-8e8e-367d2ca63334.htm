<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>UPDATE - SQL Command</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">UPDATE - SQL Command</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Updates records in a table with new values.</p>
    <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
      <p>The SQL <b>UPDATE</b> command can update records for a single table only.</p>
    </td></tr></table></div>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
UPDATE <span class="parameter">Target</span>
   SET <span class="parameter">Column_Name1</span> = <span class="parameter">eExpression1</span> [, <span class="parameter">Column_Name2</span> = <span class="parameter">eExpression2</span> ...]
   [FROM [FORCE] <span class="parameter">Table_List_Item</span> [[, ...] | [JOIN [ <span class="parameter">Table_List_Item</span>]]]
   WHERE <span class="parameter">FilterCondition1</span> [AND | OR <span class="parameter">FilterCondition2</span> ...]</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">UPDATE <span class="parameter">Target</span></span></dt><dd>
          <p>Specifies a target table, cursor, table or cursor alias, or file to update. You can include multiple sources of data for the update operation in the <b>FROM</b> clause. <span class="parameter">Target</span> can have the following syntaxes:</p>
          <ul><li>
              <p>[<span class="parameter">DatabaseName</span>!]<span class="parameter">TableName</span></p>
              <p>
                <span class="parameter">DatabaseName</span>! specifies the name of a database containing the table if the table is in a noncurrent database. If the table is in a noncurrent database, you must include the name of the database. Use an exclamation point (!) as a delimiter immediately following the database name and preceding the table name.  </p>
              <p>
                <span class="parameter">TableName</span> specifies the name of a table for the update operation. </p>
            </li><li>
              <p>
                <span class="parameter">Alias</span>
              </p>
              <p>
                <span class="parameter">Alias</span> specifies an alias that matches a table in the <b>FROM</b> clause or a cursor in the current data session for the update operation. </p>
            </li><li>
              <p>
                <span class="parameter">FileName</span>
              </p>
              <p>
                <span class="parameter">FileName</span> specifies the name of a file for the update operation.  </p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">SET <span class="parameter">Column_Name1</span>= <span class="parameter">eExpression1 </span>[, <span class="parameter">Column_Name2 </span>= <span class="parameter">eExpression2 </span>...] </span></dt><dd>
          <p>Specifies the columns in the table to update and their new values. If you omit the <b>WHERE</b> clause, every row in the table is updated with the same value.</p>
          <p>If you want to use an object property in an expression, you need to specify a memory variable and then use that variable in the expression. For example, you can specify <code>x = oColField("iid").Value</code> and then use the <b>SET</b> clause <code>set iid = x</code> in your <b>UPDATE - SQL</b> command. If you use the object property, that is objectname.property, directly in the expression, the command uses it as an alias and fails.</p>
          <p>You can include one subquery in the <b>SET</b> clause to specify an expression. If the subquery does not return any results, it returns <b>NULL</b>. For syntax and information about subqueries, see <span class="linkTerms"><a href="/html/4c5507da-5215-4dbe-94d0-3a8e67e17a54.htm">SELECT - SQL Command - FROM Clause</a></span>.</p>
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
            <p>If you use a subquery in the <b>SET</b> clause, you cannot use subqueries in the <b>WHERE</b> clause. A subquery in the <b>SET</b> clause must meet exactly the same requirements as subqueries used in comparison operations. </p>
          </td></tr></table></div>
        </dd></dl><dl><dt><span class="nonLinkTerms">[FROM [FORCE] <span class="parameter">Table_List_Item</span>[[, ...] | [JOIN [ <span class="parameter">Table_List_Item</span>]]] </span></dt><dd>
          <p>Specifies one or more tables containing the data for the update operation. </p>
          <p>The <b>FROM</b> clause has the same syntax as in the SQL <b>SELECT</b> command except for the following restrictions:   </p>
          <ul><li>
              <p>The target table or cursor cannot be included in an <b>OUTER</b> join as a secondary table or cursor. </p>
            </li><li>
              <p>It should be possible to evaluate all other <b>JOIN</b> operations before performing a <b>JOIN</b> operation on the target table. </p>
            </li><li>
              <p>The target cursor cannot be the result from a subquery.</p>
            </li></ul>
          <p>For more information, see <span class="linkTerms"><a href="/html/815f7265-4dfd-40b9-8f19-0673b5a48847.htm">SELECT - SQL Command</a></span>.   </p>
          <p>
            <b>FORCE</b> specifies that the tables in the table list are joined in the order they appear in the <b>FROM</b> clause.    </p>
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
            <p>If <b>FORCE</b> is omitted, Visual FoxPro attempts to optimize the update operation. However, the update operation might be executed faster by including the <b>FORCE</b> keyword to disable Visual FoxPro update optimization.</p>
          </td></tr></table></div>
          <p>
            <span class="parameter">Table_List_Item</span> can have the following syntaxes:   </p>
          <ul><li>
              <p>[<span class="parameter">DatabaseName</span>!]<span class="parameter">Table</span> [[AS] <span class="parameter">Local_Alias</span>]  </p>
              <p>
                <span class="parameter">DatabaseName</span>! specifies the name of a database containing the table if the table is in a noncurrent database. If the table is in a noncurrent database, you must include the name of database. Use an exclamation point (!) as a delimiter immediately following the database name and preceding the table name.   </p>
              <p>
                <span class="parameter">Table</span> specifies the name of the table or cursor you want to update data from. If no table is open, Visual FoxPro displays the Open dialog box so you can specify the file location. After the table opens, it remains open when the query is complete.   </p>
              <p>
                <span class="parameter">Local_Alias</span> specifies a temporary name for the table specified in <span class="parameter">Table</span>. If you specify a local alias, you must use the local alias instead of the table name in the <b>UPDATE</b> statement. The alias can represent a table or a cursor.   </p>
              <p>JOIN provides the capability for specifying one or more secondary tables. There is no hard coded limit on the number of tables, aliases, or <b>JOIN</b> clauses per <b>UPDATE</b> statement. </p>
            </li><li>
              <p>(<span class="parameter">Subquery</span>) AS <span class="parameter">Subquery_Alias</span></p>
              <p>A subquery specifies a <b>SELECT</b> statement within another <b>SELECT</b> statement. For more information about subqueries in <b>SELECT</b> statements, see the <b>FROM</b> clause in <span class="linkTerms"><a href="/html/815f7265-4dfd-40b9-8f19-0673b5a48847.htm">SELECT - SQL Command</a></span>.</p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">WHERE <span class="parameter">FilterCondition1 </span>[AND | OR <span class="parameter">FilterCondition2 </span>...]] </span></dt><dd>
          <p>Specifies one or more filter conditions that records must meet to be updated with new values. There is no limit to the number of filter conditions in the <b>WHERE</b> clause. </p>
          <p>To reverse the value of a logical expression, use the <b>NOT</b> operator. To check for an empty field, use the <b>EMPTY( )</b> function. For more information, see <span class="linkTerms"><a href="/html/714bd634-6f29-4024-856b-7b669f0a4350.htm">EMPTY( ) Function</a></span>. </p>
        </dd></dl>
    
  <h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>To determine the number of records updated, check the value of the <b>_TALLY</b> system variable immediately after executing the SQL <b>UPDATE</b> command. For more information, see <span class="linkTerms"><a href="/html/81e37e7a-1e31-4e4e-9ec8-c77593f1499e.htm">_TALLY System Variable</a></span>.</p>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Tip </th></tr><tr><td>
        <p>When updating multiple records in a table opened for shared access, SQL <b>UPDATE</b> uses record locking, unlike the <b>REPLACE</b> command. This reduces record contention in multiuser situations but might reduce performance. For maximum performance, open the table for exclusive use or use the <b>FLOCK( )</b> function to lock the table. For more information, see <span class="linkTerms"><a href="/html/76c905e2-77c6-4c45-8f9b-bad3c021c590.htm">FLOCK( ) Function</a></span>.</p>
      </td></tr></table></div>
      <p>In the SET clause, Visual FoxPro processes assignment sequentially. If you issue the command, <code>UPDATE table1 SET field1 = field2, field2=field1</code>, the values of the two fields are not swapped, rather the values of F1 and F2 are the same.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0)" tabindex="0"><img id="sectionToggle0" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Legacy Code Examples</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style="display: none;">
    <sections xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <h3 class="subHeading" xmlns="">Example 1</h3><div class="subSection" xmlns="">
          <p>The following example uses the <b>OPEN DATABASE</b> command to open the Visual FoxPro sample database and <b>USE</b> command to open the open the Customer table in TestData.dbc. The SQL <b>UPDATE</b> statement updates all the values in the MaxOrdAmt field to "25".</p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CLOSE DATABASES
OPEN DATABASE (HOME(2) + 'Data\TestData')
USE Customer     
UPDATE Customer SET MaxOrdAmt = 25
BROWSE FIELDS Company, MaxOrdAmt</pre></td></tr></table></span></div>
          <p>For more information, see <span class="linkTerms"><a href="/html/10572691-e780-4704-b1aa-c6e64d1cc2e5.htm">USE Command</a></span> and <span class="linkTerms"><a href="/html/8f9cae61-2a9a-4893-8325-40426b907de8.htm">BROWSE Command</a></span>.</p>
        </div>
      <h3 class="subHeading" xmlns="">Example 2</h3><div class="subSection" xmlns="">
          <p>The following example uses <b>OPEN DATABASE</b> command to open the Visual FoxPro sample database, TestData.dbc. The SQL <b>SELECT</b> command retrieves data from the Products table in TestData.dbc, stores it in a table, MyProductsList, and displays the new table. </p>
          <p>The <b>CREATE CURSOR</b> command creates the MyUpdateTable with a Prod_Unit field containing an integer value of 10 and displays the table. </p>
          <p>The SQL <b>UPDATE</b> command updates the In_Stock field for MyProductsList with the value from MyUpdateTable for the product name, "Chai". The SQL <b>SELECT</b> command returns and displays a query for MyProductsList showing the updated In_Stock field for the product, "Chai".</p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CLOSE DATABASES
OPEN DATABASE (HOME(2) + 'Data\TestData')
SELECT in_stock, prod_name ;
    FROM Products ;
    INTO TABLE MyProductsList.dbf 
BROWSE 
CREATE CURSOR MyUpdateTable (prod_unit I(10))
INSERT INTO MyUpdateTable (prod_unit) VALUES (10)
BROWSE
UPDATE MyProductsList ;
    SET MyProductsList.in_stock = MyUpdateTable.prod_unit ;
    FROM MyUpdateTable ;
    WHERE MyProductsList.prod_name = "Chai"
SELECT * FROM MyProductsList</pre></td></tr></table></span></div>
          <p>For more information, see <span class="linkTerms"><a href="/html/167e24f6-0e6f-4cc1-a1a9-dffc9491d85a.htm">OPEN DATABASE Command</a></span>, <span class="linkTerms"><a href="/html/8f9cae61-2a9a-4893-8325-40426b907de8.htm">BROWSE Command</a></span>, <span class="linkTerms"><a href="/html/203ecbbd-12ae-4caa-94b6-d3077eb685ba.htm">CREATE CURSOR - SQL Command</a></span>, and <span class="linkTerms"><a href="/html/f9d15b20-eb9d-4c37-8d4a-d9d02c01eb56.htm">INSERT - SQL Command</a></span>.</p>
        </div>
    </sections></div><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1)" tabindex="0"><img id="sectionToggle1" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Code Examples</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style="display: none;">
    <sections xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      <h3 class="subHeading" xmlns="">Example 3</h3><div class="subSection" xmlns="">
          <p>The following example shows a subquery used as an expression in the SET clause of the UPDATE statement. The query updates all records in the products table. If there is no matching productID in the mfg_msrp table, the field unitprice is set to NULL.</p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>UPDATE products ;
   SET unitprice = ;
       (SELECT (msrp*.90) ;
          FROM mfg_msrp ;
         WHERE mfg_msrp.productID = products.productID ;
           AND mfg_msrp.discontinued = .f.) </pre></td></tr></table></span></div>
        </div>
      <h3 class="subHeading" xmlns="">Example 4</h3><div class="subSection" xmlns="">
          <p>The following example shows a correlated update which only touches records that match the filter conditions in the WHERE clause.</p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>UPDATE products ;
   SET unitprice = mfg_msrp.msrp*.90 ;
  FROM mfg_msrp ;
 WHERE mfg_msrp.productID = products.productID;
   AND mfg_msrp.discontinued = .f.</pre></td></tr></table></span></div>
        </div>
      <h3 class="subHeading" xmlns="">Example 5</h3><div class="subSection" xmlns="">
          <p>The following an example of a correlated update in which the update results include only the first match found for a record. Other matches for the record are ignored. The example code specifies two cursors. The first is the target for the updates. The second is the source of the updates and contains two changes for the first record in the target cursor and one update that does not match any records in the target cursor. In the results, the value of the first record shows the first match of .50 and not 10.00, the value of the second match.</p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CLOSE DATABASES ALL 
CREATE CURSOR MyProducts (ProdID I , ProdCategory I NULL, MSRP Y NULL) 
INSERT INTO MyProducts VALUES (1,9,1.00)
INSERT INTO MyProducts VALUES (2,8,2.00)
INSERT INTO MyProducts VALUES (3,7,3.00)
  
CREATE CURSOR MyUpdates (ProdID I , MSRP Y) 
INSERT INTO MyUpdates VALUES (1,.50) &amp;&amp; Matches and updates.
INSERT INTO MyUpdates VALUES (2,20.00) &amp;&amp; Matches and updates.
INSERT INTO MyUpdates VALUES (4,40.00) &amp;&amp; No match
INSERT INTO MyUpdates VALUES (1,10.00)&amp;&amp; 2nd match but no update.
<b>UPDATE MyProducts SET MSRP=MyUpdates.MSRP FROM MyUpdates WHERE MyProducts.ProdID=MyUpdates.ProdID </b>
SELECT MyProducts 
BROWSE</pre></td></tr></table></span></div>
        </div>
    </sections></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/f31dbf64-3691-4ab0-a6b0-7ed1b3a42208.htm">DELETE - SQL Command</a></span><br /><span class="linkTerms"><a href="/html/17c2b362-8646-41fc-a66d-6c80cf201b0d.htm">SQL Commands and Functions</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/1b0b5237-6e5d-43cd-b3a6-6ebe7a470a0e.htm">Commands (Visual FoxPro)</a></span><br /><span class="linkTerms"><a href="/html/1b0b5237-6e5d-43cd-b3a6-6ebe7a470a0e.htm">Commands (Visual FoxPro)</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="UPDATE - SQL Command">
<param name="ALink Name" value="UPDATE - SQL">
<param name="ALink Name" value="UPDATE">
</OBJECT>
