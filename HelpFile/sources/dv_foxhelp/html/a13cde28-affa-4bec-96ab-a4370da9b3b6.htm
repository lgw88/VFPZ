<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>TRANSFORM( ) Function</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">TRANSFORM( ) Function</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Returns a character string from an expression in a format determined by a format code.</p>
    <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
      <p>Using <b>TRANSFORM( )</b> with a large negative number that contains a decimal might result in numeric overflow when that number is passed in as a memory variable. You should use the <b>STR( )</b> function instead with such numbers.</p>
    </td></tr></table></div>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
TRANSFORM(<span class="parameter">eExpression</span>, [<span class="parameter">cFormatCodes</span>])</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">
          <span class="parameter">eExpression</span>
        </span></dt><dd>
          <p>Specifies the expression to format.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">cFormatCodes</span>
        </span></dt><dd>
          <p>Specifies one or more format codes that determine how to format the expression. </p>
        </dd></dl>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>The following table lists the available format codes for <span class="parameter">cFormatCodes</span>.</p>
      </td></tr></table></div>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              
                <span class="parameter">cFormatCodes</span>
              
            </th>
            <th>
              Description
            </th>
          </tr><tr>
          <td>
            <p>@B</p>
          </td>
          <td>
            <p>Left-justifies <b>Numeric</b> data within the display region.</p>
          </td>
        </tr><tr>
          <td>
            <p>@C</p>
          </td>
          <td>
            <p>Appends a CR to positive <b>Currency</b> or <b>Numeric</b> values to indicate a credit.</p>
          </td>
        </tr><tr>
          <td>
            <p>@D</p>
          </td>
          <td>
            <p>Converts <b>Date</b> and <b>DateTime</b> values to the current <b>SET DATE</b> format.</p>
          </td>
        </tr><tr>
          <td>
            <p>@E</p>
          </td>
          <td>
            <p>Converts <b>Date</b> and <b>DateTime</b> values to a BRITISH date format.</p>
          </td>
        </tr><tr>
          <td>
            <p>@L</p>
          </td>
          <td>
            <p>Pads numeric data with leading zeroes.</p>
          </td>
        </tr><tr>
          <td>
            <p>@R</p>
          </td>
          <td>
            <p>The transformation uses a format mask. The mask characters are not stored to the transformed value. Use only with character or numeric data. Mask characters include:</p>
            <ul><li>
                <p>9 or #   Represents a character or number.</p>
              </li><li>
                <p>!   Converts lower-case letters to uppercase letters.</p>
              </li></ul>
            <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
              <p>Visual FoxPro does not display specified mask characters that exceed the converted string length of the passed expression.</p>
            </td></tr></table></div>
          </td>
        </tr><tr>
          <td>
            <p>@T</p>
          </td>
          <td>
            <p>Trims leading and trailing spaces from character values.</p>
          </td>
        </tr><tr>
          <td>
            <p>@X</p>
          </td>
          <td>
            <p>Appends DB to negative currency or numeric values to indicate a debit.</p>
          </td>
        </tr><tr>
          <td>
            <p>@YL</p>
          </td>
          <td>
            <p>Use Long Date system setting.</p>
          </td>
        </tr><tr>
          <td>
            <p>@YS</p>
          </td>
          <td>
            <p>Use Short Date system setting.</p>
          </td>
        </tr><tr>
          <td>
            <p>@Z</p>
          </td>
          <td>
            <p>If 0, converts currency or numeric values to spaces.</p>
          </td>
        </tr><tr>
          <td>
            <p>@(</p>
          </td>
          <td>
            <p>Encloses negative currency or numeric values in parentheses.</p>
          </td>
        </tr><tr>
          <td>
            <p>@^</p>
          </td>
          <td>
            <p>Converts currency or numeric values to scientific notation.</p>
          </td>
        </tr><tr>
          <td>
            <p>@0</p>
          </td>
          <td>
            <p>Converts numeric or currency values to their hexadecimal equivalents. The numeric or currency value must be positive and less than 4,294,967,296.</p>
          </td>
        </tr><tr>
          <td>
            <p>@!</p>
          </td>
          <td>
            <p>Converts an entire character string to uppercase.</p>
          </td>
        </tr><tr>
          <td>
            <p>@$</p>
          </td>
          <td>
            <p>Adds the current currency symbol specified by <b>SET</b><b> </b><b>CURRENCY</b> to currency and numeric values. By default, the symbol is placed immediately before or after the value. However, the currency symbol and its placement (specified with <b>SET CURRENCY</b>), the separator character (specified with <b>SET SEPARATOR</b>) and the decimal character (specified with <b>SET POINT</b>) can all be changed.</p>
          </td>
        </tr><tr>
          <td>
            <p>X</p>
          </td>
          <td>
            <p>Specifies the width of character values. For example, if <span class="parameter">cFormatCodes</span> is 'XX', 2 characters are returned.</p>
          </td>
        </tr><tr>
          <td>
            <p>Y</p>
          </td>
          <td>
            <p>Converts logical True (.T.) and False (.F.) values to Y and N, respectively.</p>
          </td>
        </tr><tr>
          <td>
            <p>!</p>
          </td>
          <td>
            <p>Converts a lowercase character to uppercase in the corresponding position in a character string.</p>
          </td>
        </tr><tr>
          <td>
            <p>.</p>
          </td>
          <td>
            <p>Specifies the decimal point position in currency and numeric values.</p>
          </td>
        </tr><tr>
          <td>
            <p>,</p>
          </td>
          <td>
            <p>Separates digits to the left of the decimal point in currency and numeric values.</p>
          </td>
        </tr><tr>
          <td>
            <p>9</p>
          </td>
          <td>
            <p>Specifies width of numeric values. </p>
            <p>For example, if <span class="parameter">cFormatCodes </span>is '999.99', the numeric characters are formatted with three characters to the left of the decimal point, and two characters to the right.</p>
            <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
              <p>When specifying <span class="parameter">cFormatCodes</span> for numeric values, the format code must be at least the size of the value you want to display. </p>
            </td></tr></table></div>
            <p>The following example shows the results when the format code is missing, less than, and equal to the size of the value you want to display.</p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CREATE CURSOR myCursor (col1 n(5,2))
INSERT INTO myCursor VALUES (-555.5) 
* No format code and returns **.**
? TRANSFORM(myCursor.col1 )
* A format code 1 less than value returns ***.**
? TRANSFORM(myCursor.col1,'999.99' )
* A format code same size as value returns -556.00
? TRANSFORM(myCursor.col1,'9999.99' )</pre></td></tr></table></span></div>
            <p>When the expression value is longer than the width of the numeric field, Visual FoxPro forces the value to fit by performing the following steps:  </p>
            <ul><li>
                <p>Truncate decimal places and round the remaining decimal portion of the field.</p>
              </li><li>
                <p>If the value does not fit, store the field contents using scientific notation.</p>
              </li><li>
                <p>If the value still does not fit, replace the field contents with asterisks.</p>
              </li></ul>
          </td>
        </tr></table></div>
      <p>For more information about format codes, see <a href="/html/1547a42a-e88f-4549-a82c-231a921ec689.htm">InputMask Property</a> and <a href="/html/e1c96289-3368-4546-84ce-8b1bd6163e43.htm">Format Property</a>.</p>
      <p>If you omit <span class="parameter">cFormatCodes</span>, Visual FoxPro performs a default transformation on <span class="parameter">eExpression</span>. The following table describes the transformation performed for each data type <span class="parameter">eExpression</span> can assume.</p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              Data type
            </th>
            <th>
              Transformation description
            </th>
          </tr><tr>
          <td>
            <p>
              <b>Blob</b>
            </p>
          </td>
          <td>
            <p>Outputs character string representation of the binary value without the hexadecimal prefix. For example, the following line of code outputs the character string "FEOAF2": </p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>TRANSFORM(0hFE0AF2)</pre></td></tr></table></span></div>
            <p>For binary values, <b>TRANSFORM(</b> <b>)</b> disregards format codes except for those that restrict width. For example, the following lines of code output "FE0A":</p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>TRANSFORM(0hFE0AF2, "XXXX")
TRANSFORM(0hFE0AF2, "9999")
TRANSFORM(0hFE0AF2, "####")</pre></td></tr></table></span></div>
            <p>For those format codes that restrict width, the maximum output length is 255 characters.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Character</b>
            </p>
          </td>
          <td>
            <p>Performs no transformation.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Currency</b>
            </p>
          </td>
          <td>
            <p>Transformation is determined by the settings specified in the Regional tab of the Options dialog box.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Date</b>
            </p>
          </td>
          <td>
            <p>Performs a <b>DTOC( )</b> transformation on the date.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>DateTime</b>
            </p>
          </td>
          <td>
            <p>Performs a <b>TTOC( )</b> transformation on the date time.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>General</b>
            </p>
          </td>
          <td>
            <p>Returns "Gen" if the <b>General</b> field contains an object or "gen" if the <b>General</b> field does not contain an object.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Logical</b>
            </p>
          </td>
          <td>
            <p>Transforms logical True (.T.) and False (.F.) values to the character strings ".T." and ".F." respectively.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Memo</b>
            </p>
          </td>
          <td>
            <p>Performs no transformation.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Numeric</b> (includes <b>Double</b>, <b>Float</b>, or <b>Integer</b> data types)</p>
          </td>
          <td>
            <p>Removes trailing zeros from the decimal portion of a numeric value when all the numbers following the decimal point are zeros.</p>
            <p>If the numeric value is a whole number, a decimal point is not included in the transformed value, for example, 4.0 is transformed to 4. </p>
            <p>If the numeric value is less than one but greater than negative one, zero is included before the decimal point, for example, .4 is transformed to 0.4.</p>
          </td>
        </tr><tr>
          <td>
            <p>Object</p>
          </td>
          <td>
            <p>Returns the character string "(Object)".</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Varbinary</b>
            </p>
          </td>
          <td>
            <p>Outputs character string representation of the binary value without the hexadecimal prefix. For example, the following line of code outputs the character string "FEOAF2": </p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>TRANSFORM(0hFE0AF2)</pre></td></tr></table></span></div>
            <p>For binary values, <b>TRANSFORM( )</b> disregards format codes except for those that restrict width. For example, the following lines of code output "FE0A":</p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>TRANSFORM(0hFE0AF2, "XXXX")
TRANSFORM(0hFE0AF2, "9999")
TRANSFORM(0hFE0AF2, "####")</pre></td></tr></table></span></div>
          </td>
        </tr></table></div>
    
  <h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Character data type. <b>TRANSFORM( )</b> returns character string from an expression in a format determined by a format code.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>STORE 12.34 TO gnPrice
CLEAR
? TRANSFORM(gnPrice, '$$$$.99')  &amp;&amp; Displays $12.34
? TRANSFORM(_SCREEN)   &amp;&amp; Displays (Object)</pre></td></tr></table></span></div>
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/1876ad8e-9c6a-4310-962d-800591a10c3d.htm">DTOC( ) Function</a></span><br /><span class="linkTerms"><a href="/html/2854910f-6bc3-40a8-a32d-ad799b045205.htm">TTOC( ) Function</a></span><br /><span class="linkTerms"><a href="/html/1547a42a-e88f-4549-a82c-231a921ec689.htm">InputMask Property</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/da6b864f-f7c6-43a3-8218-20d56c7a4764.htm">Functions</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="TRANSFORM( ) Function">
<param name="ALink Name" value="TRANSFORM">
</OBJECT>
