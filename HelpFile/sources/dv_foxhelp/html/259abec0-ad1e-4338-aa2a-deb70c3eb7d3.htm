<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>SHOW GET Command</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">SHOW GET Command</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p> </p>
  <div id="sectionSection0" class="seeAlsoNoToggleSection">
      <p>Included for backward compatibility. Use the <a href="/html/05da5a09-23ab-46c7-b05a-e37f9666da02.htm">Refresh method</a> to redisplay a control after changing the control's properties.</p>
    </div>
<!-- VFPX FPW2.6 begin -->
	<p class="vfpx">This command is undocumented in the original VFP9 help file, <br />but the following documentation was found in the FoxPro for Windows 2.6 help, and may still be valid:<br /></p>
	<p />
	<p>Redisplays the @ ... GET object that represents the specified memory variable.</p>
	<div id="syntaxSection" class="section">
		<div id="syntaxCodeBlocks" class="code">
			<span codeLanguage="other">
				<table width="100%" cellspacing="0" cellpadding="0">
				<tr>
					<th align="left"></th>
				</tr>
				<tr>
					<td>
					<pre>SHOW GET <span class="parameter">var</span>
	[, <span class="parameter">expN1</span> [PROMPT <span class="parameter">expC</span>]]
	[ENABLE | DISABLE]
	[LEVEL <span class="parameter">expN2</span>]
	[COLOR SCHEME <span class="parameter">expN3</span> 
	| COLOR <span class="parameter">color pair list</span>]</pre>
					</td>
				<tr>
				</table>
			</span>
		</div>
	</div>
	<p />
	<h4 class="subHeading">Parameters</h4>
<span class="nonLinkTerms"><span class="parameter">var</span></span><br />
&nbsp;<span class="parameter">var</span> is the memory variable, array element or field specified when the control was created.<br />
<br />
&nbsp;In the following example, three radio buttons with the prompts Apples, Oranges and Lemons are created. In this example, <span class="parameter">var</span> is a memory variable named FRUIT that initializes the radio buttons (since FRUIT equals 2, the second button is initially selected). The button number is stored to FRUIT when you choose a button.<br />
<br />
&nbsp;CLEAR<br />
&nbsp;STORE 2 TO fruit<br />
&nbsp;@ 4,2 GET fruit PICTURE '@*R Apples;Oranges;Lemons'<br />
&nbsp;READ CYCLE<br />
<br />
<span class="nonLinkTerms"><span class="parameter">expN1</span></span> <br />
&nbsp;<span class="parameter">expN1</span> is the number of the button you want to redisplay within a set of invisible, radio, or push buttons. A button's number is determined by the order in which the button prompts are created. In the example above, Apples is created first and is button number one. The second button created is Oranges; it is button number two. The last button, Lemons, is button three. <br />
<br />
&nbsp;The following program creates the same buttons as in the previous example. However, when one of the radio buttons is chosen, the NOORANGE VALID routine is executed. The routine disables the Oranges button with SHOW GET and DISABLE.<br />
<br />
&nbsp;CLEAR<br />
&nbsp;STORE 2 TO fruit<br />
&nbsp;@ 4,2 GET fruit PICTURE '@*R Apples;Oranges;Lemons' VALID noorange()<br />
&nbsp;READ CYCLE<br />
<br />
&nbsp;FUNCTION noorange<br />
&nbsp;SHOW GET fruit,2 DISABLE  && Disables the second button<br />
&nbsp;_CUROBJ = 1<br />
&nbsp;RETURN .T.<br />
<br />
PROMPT <span class="parameter">expC</span><br />
&nbsp;You can replace the prompt for an individual push button, radio button or check box with another prompt by including PROMPT <span class="parameter">expC</span>. <span class="parameter">expC</span> replaces the original button or check box prompt. You can also change the button or check box attributes (which determine whether the control is enabled or disabled, what hot keys are assigned, and whether it is the default or Esc choice) by specifying the appropriate special characters with <span class="parameter">expC</span>.  <br />
&nbsp;SHOW GET is typically placed in a VALID routine for the check box, push button or radio button.&nbsp;<br />
<br />
&nbsp;In the following example, a check box is created. When the check box is chosen, the VALID clause routine Newprompt is executed. The routine changes the check box prompt and the hot key.<br />
<br />
&nbsp;CLEAR<br />
&nbsp;STORE 1 TO check<br />
&nbsp;@ 4,2 GET check FUNCTION '*C \&lt;Checked' SIZE 1,13 VALID NEWPROMPT()<br />
&nbsp;READ CYCLE<br />
<br />
&nbsp;FUNCTION newprompt<br />
&nbsp;IF check = 0<br />
&nbsp;&nbsp;SHOW GET check,1 PROMPT '\&lt;Unchecked'<br />
&nbsp;ELSE<br />
&nbsp;&nbsp;SHOW GET check,1 PROMPT '\&lt;Checked'<br />
&nbsp;ENDIF<br />
&nbsp;RETURN .T.<br />
<br />
&nbsp;In FoxPro for Windows and FoxPro for Macintosh, you can use PROMPT to specify picture files that are displayed on a picture check box, push button or radio button when it is enabled, selected and disabled. The PROMPT clause is ignored if picture files are specified in the PROMPT clause in FoxPro for MS-DOS.<br />
<br />
&nbsp;In FoxPro for Windows, the picture file can be a bitmap file with a .BMP extension. In FoxPro for Macintosh, you can use a picture file of PICT type or a .BMP bitmap file.<br />
<br />
&nbsp;Include a set of up to three picture files separated by commas in <span class="parameter">expC</span>. The first picture file is displayed on the picture check box, push button or radio button when it is enabled. The second picture file is displayed when the picture check box, push button or radio button is selected. The third picture file is displayed when the picture check box, push button or radio button is disabled.<br />
<br />
ENABLE | DISABLE<br />
&nbsp;Including ENABLE allows the specified control to be selected or chosen. Including DISABLE prevents the control from being selected or chosen and displays the control in disabled colors. <br />
<br />
LEVEL <span class="parameter">expN2</span><br />
&nbsp;You can nest READs by issuing @ ... GET and a READ in a routine called in an active READ. READs can be nested to five levels. <br />
<br />
&nbsp;If you don't include a LEVEL clause, SHOW GET defaults to the current READ level. Include a LEVEL clause to redisplay a control on a level other than the current level. The numeric expression <span class="parameter">expN2</span> can assume the value 1, 2, 3, 4 or 5, corresponding to the READ level of the control to redisplay. Use RDLEVEL() to return the current READ level. <br />
<br />
COLOR SCHEME <span class="parameter">expN3</span> | COLOR <span class="parameter">color pair list</span><br />
&nbsp;Controls can be redisplayed in the colors you specify. You can specify a color scheme or a color pair list. For more information about control colors, see @ ... GET and @ ... EDIT - Text Edit Regions.<br />
<br />
	<h1 class="heading">
	<span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1>
	<div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
<p><br />
Picture prompts are supported in FoxPro for Windows and FoxPro for Macintosh.<br />
<br />
SHOW GET redisplays a single control (a check box, field, invisible button, push or radio button, list, popup, spinner or text-editing region). When the value in an @ ... GET field changes (the cursor moves to a new record, for example), SHOW GET updates the value displayed in the @ ... GET field. When a control is redisplayed, it can be enabled or disabled. SHOW GET can also be used to redisplay an individual button within a set of invisible, radio or push buttons. You can also change the prompts of check boxes and buttons with SHOW GET.<br />
<br />
SHOW GET is typically used in a routine executed in a control-level VALID or WHEN clause or a READ-level ACTIVATE or DEACTIVATE clause.<br />
<br />
SHOW GET vs. SHOW GETS and SHOW OBJECT<br />
&nbsp;Individual controls are redisplayed with SHOW GET or SHOW OBJECT. All controls created with @ ... GET are redisplayed with SHOW GETS. SHOW GETS executes the READ LEVEL SHOW routine. SHOW GET and SHOW OBJECT don't.<br />
<br />
&nbsp;SHOW OBJECT is similar to SHOW GET except that SHOW OBJECT references controls by their object number, and SHOW GET references controls by <span class="parameter">var</span>, the memory variable, array element or field specified when the control is created.<br />
<br />
&nbsp;For more information on control numbering, see OBJNUM() or _CUROBJ.<br />
<br />
</p>
</div>
<!-- VFPX FPW2.6 end -->
<h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1>
<div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;">
<!-- VFPX FPW2.6 Footer begin -->
<h4 class="subHeading">Other Resources</h4>
<span class="linkTerms"><a href="/html/672125e7-29a8-4d49-b89d-de87f4db5f79.htm">Backward-Compatible Language Elements</a><img class="vfpxmark" src="../local/vfpXmark.gif"/></span><br />
<span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br />
<br />
<!-- VFPX FPW2.6 Footer end -->
</div>
</div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="SHOW GET Command">
<param name="ALink Name" value="SHOW GET">
</OBJECT>
