<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>FoxInfo Structure</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">FoxInfo Structure</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>The FoxInfo structure is used to communicate function names and parameter descriptions between Visual FoxPro and your FLL library. </p>
  <div id="sectionSection0" class="seeAlsoNoToggleSection">
      <p>The following code illustrates the syntax for a FoxInfo structure:</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>FoxInfo <i>arrayname</i>[ ] = {
   {<i>funcName1</i>, FPFI <i>function1</i>, <i>parmCount1</i>, <i>parmTypes1</i>}
   {<i>funcName2</i>, FPFI <i>function2</i>, <i>parmCount2</i>, <i>parmTypes2</i>}
      . . .
   {<i>funcNameN</i>, FPFI <i>functionN</i>, <i>parmCountN</i>, <i>parmTypesN</i>}
};</pre></td></tr></table></span></div>
      <p>The following table describes the parameters in this structure.</p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              Parameter
            </th>
            <th>
              Description
            </th>
          </tr><tr>
          <td>
            <p>
              <i>arrayname</i>
            </p>
          </td>
          <td>
            <p>Specifies a variable of type FoxInfo. </p>
            <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
              <p>You can include several FoxInfo structure lines in this array.</p>
            </td></tr></table></div>
          </td>
        </tr><tr>
          <td>
            <p>
              <i>funcName</i>
            </p>
          </td>
          <td>
            <p>Contains the name that the Visual FoxPro user calls to invoke your function.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <i>function</i>
            </p>
          </td>
          <td>
            <p>Specifies the address of your C language routine. This is the exact (case-sensitive) name you use to define your function.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <i>parmCount</i>
            </p>
          </td>
          <td>
            <p>Specifies the number of parameters described in the <i>parmTypes</i> string or one of the following flag values. The following list describes possible flag values:</p>
            <ul><li>
                <p>INTERNAL
</p>
                <p>Specifies that the function cannot be called directly from Visual FoxPro.
</p>
              </li><li>
                <p>CALLONLOAD
</p>
                <p>Specifies that the routine is to be called when the library is loaded. <b>CALLONLOAD</b> can't call any routine that returns results to Visual FoxPro.
</p>
              </li><li>
                <p>CALLONUNLOAD
</p>
                <p>Specifies that the routine is to be called when the library is unloaded or when the Visual FoxPro QUIT command is issued. <b>CALLONUNLOAD</b> cannot call any routine that returns results to Visual FoxPro.
</p>
              </li></ul>
          </td>
        </tr><tr>
          <td>
            <p>
              <i>parmTypes</i>
            </p>
          </td>
          <td>
            <p>Describes the data type of each parameter. </p>
            <p>The following lists the valid values for <i>parmTypes</i>.
</p>
            <ul><li>
                <p>" "
</p>
                <p>No parameter.
</p>
              </li><li>
                <p>"?"
</p>
                <p>Specifies that any type can be passed. In the body of the function, you'll need to check the type of the passed parameter.
</p>
              </li><li>
                <p>"C"
</p>
                <p>Specifies a <b>Character</b> type parameter.
</p>
              </li><li>
                <p>"D"
</p>
                <p>Specifies a <b>Date</b> type parameter.
</p>
              </li><li>
                <p>"I"
</p>
                <p>Specifies an <b>Integer</b> type parameter.
</p>
              </li><li>
                <p>"L"
</p>
                <p>Specifies a <b>Logical</b> type parameter.
</p>
              </li><li>
                <p>"N"
</p>
                <p>Specifies a <b>Numeric</b> type parameter.
</p>
              </li><li>
                <p>"R"
</p>
                <p>Reference.
</p>
              </li><li>
                <p>"T"
</p>
                <p>Specifies a <b>DateTime</b> type parameter.
</p>
              </li><li>
                <p>"Y"
</p>
                <p>Specifies a <b>Currency</b> type parameter
</p>
              </li><li>
                <p>"O"
</p>
                <p>Specifies an Object type parameter
</p>
              </li></ul>
          </td>
        </tr></table></div>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>Include a type value for each parameter passed to the library. To indicate that a parameter is optional, precede it with a period (.). Only trailing parameters can be omitted.</p>
      </td></tr></table></div>
      <p>For example, suppose you create a function that accepts a character and a numeric parameter. When you specify <i>parmType</i>, use "CN".</p>
      <p>The following example FoxInfo structure defines a library with one function, which is internally named <code>dates</code> and externally accessed as <code>DATES</code>. The structure accepts one <b>Character</b> type parameter:</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>FoxInfo myFoxInfo[] = {
   { "DATES", (FPFI) dates, 1, "C" }
};</pre></td></tr></table></span></div>
      <p>After you compile your FLL library with this FoxInfo structure and load it in Visual FoxPro using the <b>SET LIBRARY</b> command, you can call this function in Visual FoxPro with the following line of code:</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>=DATES("01/01/95")</pre></td></tr></table></span></div>
    </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Tasks</h4><span class="linkTerms"><a href="/html/9f65d44f-5cd5-407e-bd20-c6a8ca584db9.htm">How to: Add Visual FoxPro API Calls</a></span><br /><h4 class="subHeading">Concepts</h4><span class="linkTerms"><a href="/html/7c00ef9f-63ed-43bf-b71f-54e98d8a9caf.htm">Creating Visual FoxPro Dynamic-Link Libraries</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/8c8b7a75-75ae-4a31-95ce-5b1ea7fc7a7d.htm">API Library Construction</a></span><br /><span class="linkTerms"><a href="/html/566a1828-db5f-432f-8940-c4dd53c08920.htm">Accessing the Visual FoxPro API</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="FoxInfo Structure">
</OBJECT>
