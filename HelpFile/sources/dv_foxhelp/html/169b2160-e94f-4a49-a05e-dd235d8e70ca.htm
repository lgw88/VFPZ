<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>ASCAN( ) Function</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">ASCAN( ) Function</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Searches an array for an element containing the same data and data type as an expression.</p>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
ASCAN(<span class="parameter">ArrayName</span>, <span class="parameter">eExpression</span> [, <span class="parameter">nStartElement</span> [, <span class="parameter">nElementsSearched</span> [, <span class="parameter">nSearchColumn</span> [, <span class="parameter">nFlags</span> ]]]])</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">
          <span class="parameter">ArrayName</span>
        </span></dt><dd>
          <p>Specifies the name of the array to search.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">eExpression</span>
        </span></dt><dd>
          <p>Specifies the general expression to search for.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">nStartElement</span>
        </span></dt><dd>
          <p>Specifies the element number at which the search begins. The element number you specify is included in the search. If you omit <span class="parameter">nStartElement</span> or if you pass negative value on its place, the entire array is searched by default. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">nElementsSearched</span>
        </span></dt><dd>
          <p>Specifies the number of elements that are searched. If you omit <span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span> or if you pass negative value on its place, the search begins with the first array element and continues to the last array element if you do not specify <span class="parameter">nSearchColumn</span>. </p>
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
            <p>You can refer to an element in a two-dimensional variable array in one of two ways. The first method uses two subscripts to specify the row and column position of the element in the array; the other method uses an element number. This function and others that manipulate two-dimensional arrays require element numbers (<span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span>). Use AELEMENT( ) to return the element number from row and column subscripts in a two-dimensional array.</p>
          </td></tr></table></div>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">nSearchColumn</span>
        </span></dt>
		<dd>
          <p>Specifies the array column to search. This is often useful in arrays created by functions such as AFIELDS( ).</p>
		  
          <p>You can use 0 or a negative number for <span class="parameter">nSearchColumn</span> to impose a search of the entire array. If you use a value greater than 0 for <span class="parameter">nSearchColumn</span>, ASCAN( ) treats the specified column as a one-dimensional array, using each data row as an element in the search. For instance, the following example searches only the third and fourth elements of column 2 instead of the entire array.   </p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>? ASCAN(abc,"M",3,2,2)</pre></td></tr></table></span></div>
          <p>Visual FoxPro generates an error if <span class="parameter">nSearchColumn</span> is a number larger than the number of available columns. </p>
		  
		  <!-- VFPX -->
        <div class="alert">
		  <table width="100%" cellspacing="0" cellpadding="0">
		    <tr><th align="left"><img class="note" alt="Note" src="../local/vfpXmark.gif"></img>Tips</th></tr><tr>
			<td><p>	
If the <span class="parameter">nSearchColumn parameter</span> is used then <span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span> parameters cannot be omitted. Use –1 as the replacement value.
<br />
          <div class="code">
			 <pre>? ASCAN(abc,"HELLO",-1,-1,2,15) && Search the whole column 2 of two-dimensional array</pre>
		  </div>
			</p>
            </td>
			</tr>
		  </table>
		</div>		  
<!-- VFPX -->
		  
        </dd>
		</dl>
		<dl>
		<dt>
		<span class="nonLinkTerms">
          <span class="parameter">nFlags</span>
        </span></dt><dd>
          <p>Specifies additional search criteria to apply to the scan function. Default scans are case-sensitive.</p>
          <p>The number you specify in <span class="parameter">nFlags</span> provides a bit-value that determines the case sensitivity or exactness setting of a scan according to the following table:   </p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  
                    <span class="parameter">NFlag</span>
                  
                </th>
                <th>
                  Bit
                </th>
                <th>
                  Description
                </th>
              </tr><tr>
              <td>
                <p>0</p>
              </td>
              <td>
                <p>0000</p>
              </td>
              <td>
                <p>Behavior existing in Visual FoxPro 6 or earlier</p>
              </td>
            </tr><tr>
              <td>
                <p>1</p>
              </td>
              <td>
                <p>0001</p>
              </td>
              <td>
                <p>Case Insensitive</p>
              </td>
            </tr><tr>
              <td>
                <p>2</p>
              </td>
              <td>
                <p>0010</p>
              </td>
              <td>
                <p>Current behavior existing in the previous version of Visual FoxPro</p>
              </td>
            </tr><tr>
              <td>
                <p>3</p>
              </td>
              <td>
                <p>0011</p>
              </td>
              <td>
                <p>Case Insensitive</p>
              </td>
            </tr><tr>
              <td>
                <p>4</p>
              </td>
              <td>
                <p>0100</p>
              </td>
              <td>
                <p>Exact OFF</p>
              </td>
            </tr><tr>
              <td>
                <p>5</p>
              </td>
              <td>
                <p>0101</p>
              </td>
              <td>
                <p>Case Insensitive; Exact OFF</p>
              </td>
            </tr><tr>
              <td>
                <p>6</p>
              </td>
              <td>
                <p>0110</p>
              </td>
              <td>
                <p>Exact ON</p>
              </td>
            </tr><tr>
              <td>
                <p>7</p>
              </td>
              <td>
                <p>0111</p>
              </td>
              <td>
                <p>Case Insensitive; Exact ON</p>
              </td>
            </tr><tr>
              <td>
                <p>8</p>
              </td>
              <td>
                <p>1000</p>
              </td>
              <td>
                <p>Return row number</p>
              </td>
            </tr><tr>
              <td>
                <p>9</p>
              </td>
              <td>
                <p>1001</p>
              </td>
              <td>
                <p>Case Insensitive; return row number</p>
              </td>
            </tr><tr>
              <td>
                <p>10</p>
              </td>
              <td>
                <p>1010</p>
              </td>
              <td>
                <p>Return row number</p>
              </td>
            </tr><tr>
              <td>
                <p>11</p>
              </td>
              <td>
                <p>1011</p>
              </td>
              <td>
                <p>Case Insensitive; return row number</p>
              </td>
            </tr><tr>
              <td>
                <p>12</p>
              </td>
              <td>
                <p>1100</p>
              </td>
              <td>
                <p>Return row number; Exact OFF</p>
              </td>
            </tr><tr>
              <td>
                <p>13</p>
              </td>
              <td>
                <p>1101</p>
              </td>
              <td>
                <p>Case Insensitive; Return row number; Exact OFF</p>
              </td>
            </tr><tr>
              <td>
                <p>14</p>
              </td>
              <td>
                <p>1110</p>
              </td>
              <td>
                <p>Return row number; Exact ON</p>
              </td>
            </tr><tr>
              <td>
                <p>15</p>
              </td>
              <td>
                <p>1111</p>
              </td>
              <td>
                <p>Case Insensitive; Return row number; Exact ON</p>
              </td>
            </tr></table></div>
        </dd></dl>
      <p>The bit values are as follows:</p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              Bit
            </th>
            <th>
              Description
            </th>
          </tr><tr>
          <td>
            <p>0</p>
          </td>
          <td>
            <p>Case Insensitive bit </p>
          </td>
        </tr><tr>
          <td>
            <p>1</p>
          </td>
          <td>
            <p>Exactness ON bit (Only effective if bit 2 is set)</p>
          </td>
        </tr><tr>
          <td>
            <p>2</p>
          </td>
          <td>
            <p>Override system Exact setting bit</p>
          </td>
        </tr><tr>
          <td>
            <p>3</p>
          </td>
          <td>
            <p>Return row number if 2D array</p>
          </td>
        </tr></table></div>
      <p>
        <span class="parameter">nFlags</span> applies only to the ASCAN( ) function and does not affect settings for SET EXACT.</p>
    
  <h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Numeric</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>If a match is found, ASCAN( ) returns the number of the element containing the expression. If a match cannot be found, ASCAN( ) returns 0.</p>
      <p>The criteria for a successful match of character data are determined by the setting of the system SET EXACT if nFlag with bit 2 is not set. If SET EXACT is ON, an element must match the search expression character for character and have the same length. If SET EXACT is OFF, and an element and search expression match until the end of the expression is reached, the match is successful. For more information on match criteria for character strings, see the string comparison table in the <span class="linkTerms"><a href="/html/5ac68f23-c330-42c4-a4a3-c38f7278b22a.htm">SET EXACT Command</a></span> topic.</p>
      <p>In Visual FoxPro 6.0, the <span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span> parameters are optional. The <span class="parameter">nStartElement</span> must be &gt; 0 while <span class="parameter">nElementsSearched</span> can be any value. In order to accommodate the <span class="parameter">nSearchColumn</span> parameter, you will need to bypass these parameters by passing a value of -1.</p>
      <p>The <span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span> parameters take on special meaning if the value of <span class="parameter">nSearchColumn</span> is greater than 0. In Visual FoxPro 6.0, they are always referenced to the entire array. Beginning with Visual FoxPro 7.0, if a positive <span class="parameter">nSearchColumn</span> is passed, the values of <span class="parameter">nStartElement</span> and <span class="parameter">nElementsSearched</span> are referenced to the single one-dimensional array represented by the <span class="parameter">nSearchColumn</span>. For example, the following would only search the third and fourth elements of column 2, and not the entire array:</p>
      <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>? ASCAN(abc,"M",3,2,2)</pre></td></tr></table></span></div>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      
        <p xmlns="">The following example creates and fills an array with company names, and then uses ASCAN( ) to search for a particular company name. If the company name is found, it is removed from the array.</p>
      
    </description>
    <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CLOSE DATABASES
OPEN DATABASE (HOME(2) + 'Data\testdata')
USE customer     &amp;&amp; Open customer table
SELECT company FROM customer ;
   WHERE country = 'UK' ;
   INTO ARRAY gaCompanies
gnCount = _TALLY
gcName = 'Seven Seas Imports'
CLEAR
DISPLAY MEMORY LIKE gaCompanies*
gnPos = ASCAN(gaCompanies, gcName) &amp;&amp; Search for company
IF gnPos != 0
   *** Company found, remove it from the array ***
   = ADEL(gaCompanies, gnPos)
   gnCount = gnCount - 1
ENDIF
DISPLAY MEMORY LIKE gaCompanies</pre></td></tr></table></span></div>
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/4cfd7044-d4e6-46ee-a6f0-98b5c8d8ffca.htm">ACOPY( ) Function</a></span><br /><span class="linkTerms"><a href="/html/281f8451-8f91-4ea4-a750-b6484cb4c148.htm">ADEL( ) Function</a></span><br /><span class="linkTerms"><a href="/html/77958569-651d-46c5-86e3-935dc7ec6486.htm">ADIR( ) Function</a></span><br /><span class="linkTerms"><a href="/html/8593614e-fdfa-46da-bae8-ea7e85e3c412.htm">AELEMENT( ) Function</a></span><br /><span class="linkTerms"><a href="/html/c576b477-4cf5-4ad4-a115-6963867dd548.htm">AFIELDS( ) Function</a></span><br /><span class="linkTerms"><a href="/html/58867a98-4899-4436-abae-6ee6a07c7a52.htm">AINS( ) Function</a></span><br /><span class="linkTerms"><a href="/html/db40f7c1-ce9b-4bd4-92b4-b584733f1bef.htm">ASORT( ) Function</a></span><br /><span class="linkTerms"><a href="/html/76044ae8-3278-4aad-82ce-47f7eaaf23fe.htm">ASUBSCRIPT( ) Function</a></span><br /><span class="linkTerms"><a href="/html/17270153-1977-40bc-9f17-ab0132b20e90.htm">DIMENSION Command</a></span><br /><span class="linkTerms"><a href="/html/5ac68f23-c330-42c4-a4a3-c38f7278b22a.htm">SET EXACT Command</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/da6b864f-f7c6-43a3-8218-20d56c7a4764.htm">Functions</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="ASCAN( ) Function">
<param name="ALink Name" value="ASCAN">
</OBJECT>
