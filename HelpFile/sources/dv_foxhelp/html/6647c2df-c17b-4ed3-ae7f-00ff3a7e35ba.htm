<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Regular Expressions and Operators</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">Regular Expressions and Operators</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Regular expressions are sets of symbols that you can use to create searches for finding and replacing patterns of text. Regular expressions provide a concise and flexible way to specify more complex search and filter criteria against a selection of text than the wildcard character pattern searching available in the Find dialog box. </p>
  <div id="sectionSection0" class="seeAlsoNoToggleSection">
      <p>The following table describes the behavior of regular expression operators in a query.</p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              Operator
            </th>
            <th>
              Behavior
            </th>
          </tr><tr>
          <td>
            <p>.</p>
          </td>
          <td>
            <p>Matches any single character except the newline (\n) character. </p>
          </td>
        </tr><tr>
          <td>
            <p>*</p>
          </td>
          <td>
            <p>Matches the preceding character zero or more times. You can also use a question mark (?). </p>
            <p>
              <b>Example</b>   "zo*" matches either "z" or "zoo". The expression "a?ve?" matches the "ve" in "never".</p>
          </td>
        </tr><tr>
          <td>
            <p>+</p>
          </td>
          <td>
            <p>Matches the preceding character one or more times. </p>
            <p>
              <b>Example</b>    "zo+" matches "zoo" but not "z".</p>
          </td>
        </tr><tr>
          <td>
            <p>^</p>
          </td>
          <td>
            <p>Matches the beginning of the input string.</p>
          </td>
        </tr><tr>
          <td>
            <p>$</p>
          </td>
          <td>
            <p>Matches the end of the input string.</p>
          </td>
        </tr><tr>
          <td>
            <p>[<i>xyz</i>]</p>
          </td>
          <td>
            <p>Matches any one character in the set. Both opening and closing brackets are required.</p>
            <p>
              <b>Example</b>    "[abc]" matches the "a" in "plain". </p>
          </td>
        </tr><tr>
          <td>
            <p>[^<i>xyz</i>]</p>
          </td>
          <td>
            <p>Matches any one character not in the set. Both opening and closing brackets are required.</p>
            <p>
              <b>Example</b>    "[^abc]" matches the "p" in "plain". </p>
          </td>
        </tr><tr>
          <td>
            <p>[<i>a</i>-<i>z</i>]</p>
          </td>
          <td>
            <p>Matches any character in the specified range.</p>
            <p>
              <b>Example</b>   "[a-z]" matches any lowercase alphabetic character in the range of "a" through "z".</p>
          </td>
        </tr><tr>
          <td>
            <p>[^<i>a</i>-<i>z</i>]</p>
          </td>
          <td>
            <p>Matches any character not in the specified range.</p>
            <p>
              <b>Example</b>   "[^m-z]" matches any character not in the range of "m" through "z".</p>
          </td>
        </tr><tr>
          <td>
            <p>\</p>
          </td>
          <td>
            <p>Marks the next character as either a special character such as an escape character or a literal. </p>
            <p>
              <b>Example</b>   "\\" matches "\", and "\(" matches "(".</p>
          </td>
        </tr><tr>
          <td>
            <p>(<i>pattern</i>)</p>
          </td>
          <td>
            <p>Matches a <i>pattern</i> group. Both the opening and closing parentheses are required. </p>
            <p>
              <b>Example</b>    "(tress)" matches "mattress" but not "mattres". To match parenthesis characters, use "\(" or "\)".</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <i>x</i>|<i>y</i></p>
          </td>
          <td>
            <p>Matches either <i>x</i> or <i>y</i>. </p>
            <p>
              <b>Example</b>    "z|wood" matches "z" or "wood". The expression "(z|w)ood" matches "zood" or "wood".</p>
          </td>
        </tr><tr>
          <td>
            <p>{<i>m</i>}</p>
          </td>
          <td>
            <p>Matches the preceding character exactly <i>m</i> number of times, where <i>m</i> is nonnegative. Both opening and closing braces are required.</p>
            <p>
              <b>Example</b>    "o{2}" does not match the "o" in "Bob" but matches the first two letter o's in "food" or "foooood". </p>
          </td>
        </tr><tr>
          <td>
            <p>{<i>m</i>,}</p>
          </td>
          <td>
            <p>Matches the preceding character at least <i>m</i> number of times, where <i>m</i> is nonnegative. </p>
            <p>
              <b>Example</b>    "o{2,}" does not match the "o" in "Bob" but matches all the o's in "fooooood". In addition, the expression "o{1,}" is equivalent to "o+", and "o{0,}" is equivalent to "o*".</p>
          </td>
        </tr><tr>
          <td>
            <p>{<i>m</i>,<i>n</i>}</p>
          </td>
          <td>
            <p>Matches the preceding character at least <i>m</i> and at most <i>n</i> number of times, where both <i>m</i> and <i>n</i> are nonnegative.</p>
            <p>
              <b>Example</b>   "o{1,3}" matches the first three o's in "foooooood". In addition, the expression "o{0,1}" is equivalent to "o?".</p>
          </td>
        </tr><tr>
          <td>
            <p>All else</p>
          </td>
          <td>
            <p>Matches itself.</p>
          </td>
        </tr></table></div>
      <p>The following rules apply when you use regular expression operators:
</p>
      <ul><li>
          <p>You can enclose regular expressions in matching quotation marks (" "). You must enclose regular expressions in quotation marks if the expression contains a space or a closing parenthesis ()).</p>
        </li></ul>
      <p>The Regular Expressions Foundation Class provides access to routines for using regular expressions in your applications. For more information, see <a href="/html/b67c926a-6f2b-4509-ac16-7a0c376c904d.htm">Regular Expressions Foundation Class</a>. </p>
      <p>Visual FoxPro provides a regular expressions sample that you can use to determine how to incorporate regular expression text searching in your application. For more information, see <a href="/html/fc2f413d-291f-4291-98ca-75d6b90e7084.htm">Search Text Using Regular Expressions</a>. </p>
      <p>You can refer to MSDN for general details about regular expressions and pattern property matching.</p>
    </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/9f838440-5a4b-4502-a89a-8b40c8059357.htm">Look Up Reference Dialog Box</a></span><br /><span class="linkTerms"><a href="/html/c1e8e033-4fbd-44fa-9064-d88646781b12.htm">Find Dialog Box (Visual FoxPro)</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/e2e80200-9767-4204-a73b-082286a5571a.htm">General Reference</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="Regular Expressions and Operators">
<param name="Alink Name" value="vfp.1231103">
</OBJECT>
