<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>CURSORSETPROP( ) Function</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">CURSORSETPROP( ) Function</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Specifies property settings for a Visual FoxPro table or a cursor.</p>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
CURSORSETPROP( <span class="parameter">cProperty</span> [, <span class="parameter">eExpression</span>] [,<span class="parameter">cTableAlias</span> | <span class="parameter">nWorkArea</span>])</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">
          <span class="parameter">cProperty</span>
        </span></dt><dd>
          <p>Specifies the table or cursor property to set. Buffering is the only property you can specify for a Visual FoxPro table.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">eExpression</span>
        </span></dt><dd>
          <p>Specifies the value for the property you specify with <span class="parameter">cProperty</span>. If you omit <span class="parameter">eExpression</span>, the property is set to its default value.</p>
          <p>The following table lists the properties you can specify for <span class="parameter">cProperty</span> and a description of the values <span class="parameter">eExpression</span> can assume.</p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  Property
                </th>
                <th>
                  
                    <span class="parameter">eExpression </span>values
                </th>
              </tr><tr>
              <td>
                <p>AllowSimultaneousFetch</p>
              </td>
              <td>
                <p>Applies when using remote views, a shared connection, and to cursors created using ODBC. </p>
                <p>.T. - Permit similarly configured cursors sharing the connection to fetch rows simultaneously. </p>
                <p>.F. - Do not permit similarly configured cursors sharing the connection to fetch rows simultaneously.</p>
              </td>
            </tr><tr>
              <td>
                <p>AutoIncError</p>
              </td>
              <td>
                <p>.T. - Generate an error message when attempting to insert or update values in a field that uses automatically incrementing field values. </p>
                <p>.F. - Does not generate an error message but does not use the value specified when attempting to insert or update the value in a field that uses automatically incrementing field values, which uses the appropriate incremented value.</p>
                <p>Applies to cursors and sessions.</p>
              </td>
            </tr><tr>
              <td>
                <p>BatchUpdateCount*</p>
              </td>
              <td>
                <p>Specifies the number of update statements to send to the remote data source for buffered tables. The default value is 1. Adjusting this value can greatly increase update performance when using automatic updating.</p>
              </td>
            </tr><tr>
              <td>
                <p>Buffering</p>
              </td>
              <td>
                <p>1 – Sets row and table buffering off. Record locking and data writing are identical to earlier FoxPro versions. (Default)</p>
                <p>2 – Sets pessimistic row buffering on.</p>
                <p>3 – Sets optimistic row buffering on.</p>
                <p>4 – Sets pessimistic table buffering on.</p>
                <p>5 – Sets optimistic table buffering on. <b>SET MULTILOCKS</b> must be <b>ON</b> for all Buffering modes except 1 (off).</p>
              </td>
            </tr><tr>
              <td>
                <p>CompareMemo</p>
              </td>
              <td>
                <p>.T. - Include memo fields of type Memo, General, or Picture in the <b>WHERE</b> clause for updates. </p>
                <p>.F. – Do not include memo fields in the WHERE clause for updates.</p>
                <p>Applies when automatic updating is used.</p>
              </td>
            </tr><tr>
              <td>
                <p>FetchAsNeeded</p>
              </td>
              <td>
                <p>.T. – Fetch records only when needed, such as when record pointer moves to a row that has not been fetched.</p>
                <p>.F. – Fetch additional data during idle time.</p>
                <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
                  <p>FetchAsNeeded does not apply when progressive fetching is disabled (FetchSize is -1).</p>
                </td></tr></table></div>
              </td>
            </tr><tr>
              <td>
                <p>FetchMemo*</p>
              </td>
              <td>
                <p>.T. – Fetch memo fields with the view results. </p>
                <p>.F. – Do not fetch memo fields with the view results.</p>
              </td>
            </tr><tr>
              <td>
                <p>FetchSize*</p>
              </td>
              <td>
                <p>Specifies the number of rows progressively fetched from the remote table result set. The default value is 100 rows. Setting FetchSize to –1 retrieves the complete result set, limited by the MaxRecords setting.</p>
                <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
                  <p>Progressive fetching holds the connection until all rows are retrieved. Use caution coding with FetchSize if ShareConnection is True (.T.).</p>
                </td></tr></table></div>
              </td>
            </tr><tr>
              <td>
                <p>KeyFieldList</p>
              </td>
              <td>
                <p>Specifies a comma-delimited list of primary fields for the cursor. No default. You must include a list of field names for updates to work when using automatic updating.</p>
              </td>
            </tr><tr>
              <td>
                <p>MapBinary</p>
              </td>
              <td>
                <p>.T. - At the session level, SQL Pass-Through maps SQL_BINARY, SQL_VARBINARY, and SQL_LONGVARBINARY ODBC types to <b>Varbinary</b> or <b>Blob</b> data type.</p>
                <p>For remote views, the <b>CREATE SQL VIEW</b> command maps the SQL_LONGVARBINARY ODBC data source type to <b>Blob</b> type, and it maps SQL_BINARY and SQL_VARBINARY ODBC data source types to <b>Varbinary</b> type when the precision of the corresponding column in the data source is less than or equal to 254 bytes. When precision is greater than 254 bytes, these types map to <b>Blob</b> type. </p>
                <p>.F. - SQL Pass-Through maps SQL_BINARY and SQL_VARBINARY ODBC types to <b>Character</b> type. (Default)</p>
                <p>For remote views, the <b>CREATE SQL VIEW</b> command maps SQL_BINARY and SQL_VARBINARY ODBC data source types to <b>Memo</b> type.</p>
                <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
                  <p><b>MapBinary</b> is read/write for <span class="parameter">nWorkArea</span> set to 0, read-only for SQL Pass-Through cursors, and invalid for table cursors (<span class="parameter">nWorkArea</span> equal to or greater than 1).</p>
                </td></tr></table></div>
              </td>
            </tr><tr>
              <td>
                <p>MapVarchar</p>
              </td>
              <td>
                <p>.T. - At the session level, SQL Pass-Through maps SQL_WVARCHAR and SQL_VARCHAR ODBC types to <b>Varchar</b> type. </p>
                <p>For remote views, <b>CREATE SQL VIEW</b> command maps SQL_WVARCHAR and SQL_VARCHAR ODBC data source types to <b>Varchar</b> type.</p>
                <p>.F. - SQL Pass-Through maps SQL_WVARCHAR and SQL_VARCHAR ODBC types to <b>Character</b> type. (Default)</p>
                <p>For remote views, <b>CREATE SQL VIEW</b> command maps SQL_WVARCHAR and SQL_VARCHAR ODBC data source types to <b>Character</b> type.</p>
                <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
                  <p><b>MapVarchar</b> is read/write for <span class="parameter">nWorkArea</span> set to 0, read-only for SQL Pass-Through cursors, and invalid for table cursors (<span class="parameter">nWorkArea</span> equal to or greater than 1).</p>
                </td></tr></table></div>
              </td>
            </tr><tr>
              <td>
                <p>MaxRecords*</p>
              </td>
              <td>
                <p>Specifies the maximum number of rows fetched when returning result sets. The default value is – 1, and all rows are returned. A value of 0 specifies that the view is executed but no results are fetched.</p>
              </td>
            </tr><tr>
              <td>
                <p>ParameterList</p>
              </td>
              <td>
                <p>Specifies a semi-colon delimited list of view parameters and parameter types. For views only.</p>
              </td>
            </tr><tr>
              <td>
                <p>Prepared</p>
              </td>
              <td>
                <p>.T. - Prepare SQL statements for subsequent <b>REQUERY( )</b> function calls. </p>
                <p>.F. - Do not prepare SQL statements for subsequent <b>REQUERY( )</b> calls. (Default).</p>
                <p>
                  <b>REQUERY( )</b> is used to retrieve data again for a SQL view. For additional information about preparing SQL statements, see <a href="/html/5103290a-daf3-4a43-8481-e50f54ef5f8d.htm">SQLPREPARE( ) Function</a>.</p>
              </td>
            </tr><tr>
              <td>
                <p>Refresh</p>
              </td>
              <td>
                <p>Specifies a numeric refresh value for an individual cursor in the current data session or an initial refresh value for newly opened cursors in the current data session.</p>
                <p>Use the <span class="linkTerms"><a href="/html/650419ee-d0c5-439a-b452-87b694f1024e.htm">SET DATASESSION Command</a></span> to select a specific data session, and use the cTableAlias or nWorkArea parameter to specify a specific cursor. Use nWorkArea = 0 to change the initial refresh value for all newly opened cursors. Any cursors that are already open will not be affected by the new refresh setting.</p>
                <p>
                  <span class="linkTerms"><a href="/html/f90c43b8-a72d-40ed-8832-85eb7e07dd9b.htm">SET REFRESH Command</a></span> allows you to specify a global refresh value. By default, the CURSORSETPROP( ) Refresh setting is -2, which indicates that the current global SET REFRESH value is used. The global SET REFRESH value is specified with its second parameter, <span class="parameter">nSeconds2</span>.</p>
                <p>You can set the CURSORSETPROP( ) Refresh setting to the same values as the <span class="parameter">nSeconds2</span> parameter in SET REFRESH.</p>
                <p>
                  <b>Note</b>   The  CURSORSETPROP( ) Refresh setting will be ignored if the <span class="parameter">nSeconds2</span> parameter is currently set to zero in the SET REFRESH command.</p>
              </td>
            </tr><tr>
              <td>
                <p>SendUpdates</p>
              </td>
              <td>
                <p>.T. – Specifies that a SQL update query is sent to update tables when an update is made using the view.</p>
                <p>.F. – Specifies that a SQL update query is not sent to update tables.</p>
              </td>
            </tr><tr>
              <td>
                <p>Tables</p>
              </td>
              <td>
                <p>Specifies a comma-delimited list of the names of remote tables. No default. You must include a list of table names for updates to work when using automatic updating.</p>
              </td>
            </tr><tr>
              <td>
                <p>UpdatableFieldList</p>
              </td>
              <td>
                <p>Specifies a comma-delimited list of fields in the view. This list can include fields from local and remote tables. You must include a list of fields for updates to work when using automatic updating.</p>
              </td>
            </tr><tr>
              <td>
                <p>UpdateNameList</p>
              </td>
              <td>
                <p>Specifies a comma-delimited list of remote field names and the local field names assigned to the cursor. Use this option to specify valid Visual FoxPro names for fields in the cursor that have invalid Visual FoxPro field names.</p>
              </td>
            </tr><tr>
              <td>
                <p>UpdateType</p>
              </td>
              <td>
                <p>1 – Update old data with new data. (Default)</p>
                <p>2 – Update by deleting old data and inserting new data.</p>
              </td>
            </tr><tr>
              <td>
                <p>UseMemoSize*</p>
              </td>
              <td>
                <p>Specifies the minimum size in bytes for result columns to return in memo fields. For example, if the width of a column result is greater than the value of UseMemoSize, the column result is stored in a memo field. UseMemoSize can vary from 1 to 255 bytes. The default value is 255 bytes.</p>
              </td>
            </tr><tr>
              <td>
                <p>WhereType</p>
              </td>
              <td>
                <p>The <b>WHERE</b> clause for updates to remote tables. WhereType can assume the following values:</p>
                <p>1 or <b>DB_KEY</b> (from FOXPRO.H). The WHERE clause used to update remote tables consists of only the primary fields specified with the KeyFieldList property.</p>
                <p>2 or <b>DB_KEYANDUPDATABLE</b> (from FOXPRO.H). The WHERE clause used to update remote tables consists of the primary fields specified with the KeyFieldList property and any updatable fields.</p>
                <p>3 or <b>DB_KEYANDMODIFIED</b> (from FOXPRO.H). The WHERE clause used to update remote tables consists of the primary fields specified with the KeyFieldList property and any other fields that are modified. (Default)</p>
                <p>4 or <b>DB_KEYANDTIMESTAMP</b> (from FOXPRO.H). The <b>WHERE</b> clause used to update remote tables consists of the primary fields specified with the KeyFieldList property and a comparison of the time stamps.</p>
              </td>
            </tr></table></div>
          <p>* This property is primarily used for remote views; setting it has no effect on local views. However, you can preset this property for local views that will be upsized.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">cTableAlias</span>
        </span></dt><dd>
          <p>Specifies the alias of the table or cursor for which the property is set.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">nWorkArea</span>
        </span></dt><dd>
          <p>Specifies the work area of the table or cursor for which the property is set. If you specify 0 for <span class="parameter">nWorkArea</span>, <b>CURSORSETPROP( )</b> sets the environment setting used for all subsequent tables or cursors.</p>
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
            <p>Buffering is not applied to tables that are opened implicitly, for example, using SQL INSERT/UPDATE/DELETE commands.</p>
          </td></tr></table></div>
        </dd></dl>
    
  <h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Logical data type. <b>CURSORSETPROP( )</b> returns True (.T.) if Visual FoxPro successfully sets the property you specify. Visual FoxPro generates an error if the property you specify cannot be set.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>The setting of the Buffering property for <b>CURSORSETPROP( )</b> determines how Visual FoxPro performs record locking and update buffering. For additional information about record locking and update buffering, see <a href="/html/c94d4b30-e6aa-408c-a29d-6b27eb93674d.htm">How to: Buffer Data</a>.</p>
      <p>The setting of the WhereType property for <b>CURSORSETPROP( )</b> determines how updates are performed on remote tables. For additional information about remote table updates, see <a href="/html/acbcbb01-6290-4201-b378-fabfbcbcd644.htm">Developing Databases</a>.</p>
      <p>You can use <b>CURSORSETPROP( )</b> to override the FetchSize property in the <b>SQLSETPROP( )</b> function for a cursor. This property is inherited from the cursor's connection handle by default. </p>
      <p>Use <b>CURSORGETPROP( )</b> to return the current property settings for a Visual FoxPro table or a cursor created for a table.</p>
      <p>If <b>CURSORSETPROP( )</b> is issued without the optional <span class="parameter">cTableAlias</span> or <span class="parameter">nWorkArea</span> arguments, the property setting is specified for the open table or cursor in the currently selected work area.</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    
      
        <p>When a cursor is opened, the default value for the AutoIncError property is read from the session default value, which is the current default data session setting. The following example shows how you can set the default AutoIncError value for each session by specifying 0 (default session) as the last parameter:</p>
        <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CURSORSETPROP("AutoIncError", .T., 0) </pre></td></tr></table></span></div>
        <p>The default session is used when opening a new private data session or cursor. The following example shows how you can set the cursor or table AutoIncError setting for each table by using the <span class="parameter">cTableAlias </span>or <span class="parameter">nWorkArea</span> parameter as the last parameter:</p>
        <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CURSORSETPROP("AutoIncError", .F. , cTableAlias | nWorkArea )</pre></td></tr></table></span></div>
        <p>The following example demonstrates how you can enable optimistic table buffering with <b>CURSORSETPROP( )</b>. <b>MULTILOCKS</b> is set to <b>ON</b>, a requirement for table buffering. The "Customer" table in the "testdata" database is opened, and <b>CURSORSETPROP( )</b> is used to set the buffering mode to optimistic table buffering (5). A message box is displayed showing the result of the operation.</p>
        <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>CLOSE DATABASES
CLEAR
SET MULTILOCKS ON
OPEN DATABASE (HOME(2) + 'data\testdata')
USE Customer     &amp;&amp; Open Customer table.
* Set buffering mode and store logical result
lSuccess=CURSORSETPROP("Buffering", 5, "Customer")
IF lSuccess = .T.
   =MESSAGEBOX("Operation successful!",0,"Operation Status")
ELSE
   =MESSAGEBOX("Operation NOT successful!",0,"Operation Status")
ENDIF</pre></td></tr></table></span></div>
      
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/4b2168d1-6e9f-4dc4-aaec-ab25b49383ce.htm">CURSORGETPROP( ) Function</a></span><br /><span class="linkTerms"><a href="/html/6f017b16-28bb-4fcb-93b1-ca08e674f7ac.htm">SET MULTILOCKS Command</a></span><br /><span class="linkTerms"><a href="/html/f90c43b8-a72d-40ed-8832-85eb7e07dd9b.htm">SET REFRESH Command</a></span><br /><span class="linkTerms"><a href="/html/92c91971-57fb-4ca5-9712-b00dc0457a4b.htm">SQLGETPROP( ) Function</a></span><br /><span class="linkTerms"><a href="/html/2b537f41-5c04-41a7-9e8c-eb3513e2c626.htm">SQLSETPROP( ) Function</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/da6b864f-f7c6-43a3-8218-20d56c7a4764.htm">Functions</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="CURSORSETPROP( ) Function">
<param name="ALink Name" value="CURSORSETPROP">
</OBJECT>
