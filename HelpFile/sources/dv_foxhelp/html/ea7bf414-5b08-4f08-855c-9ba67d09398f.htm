<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Databases in Visual FoxPro</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">Databases in Visual FoxPro</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Databases provide an architecture and working environment for associating, organizing, and working with tables and views. You can use databases independently or include them in an application project. When you create a database, Visual FoxPro creates and opens a database (.dbc) file exclusively. The database file, which is a table, stores all the information about the database including the names of files and items associated with it. The database file does not physically contain top-level items such as tables or fields. Instead, the database file stores file path pointers to tables associated with the database.</p>
    <p>Databases provide additional benefits such as the following:  </p>
    <ul><li>
        <p>Associate tables with a database.</p>
      </li><li>
        <p>Create persistent relationships between tables.</p>
      </li><li>
        <p>Make it possible for you to create field and record-level validation rules without writing code.</p>
      </li><li>
        <p>Create rules to preserve the relationships between database tables when adding, updating, or deleting records.</p>
      </li><li>
        <p>Create stored procedures.</p>
      </li><li>
        <p>Create views from local and remote tables.</p>
      </li><li>
        <p>Access connections to remote data sources.</p>
      </li></ul>
    <p>To view the structure of a sample database, open the NorthWind.dbc file located in the Visual FoxPro ...\Samples\Northwind directory. For more information, see <a href="/html/8ff74d7d-30c5-412b-a23a-f3d62261dca3.htm">How to: Open Databases</a>.</p>
  <a name="focondatabasesinvisualfoxproanchor1"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0)" tabindex="0"><img id="sectionToggle0" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Data Dictionary Features of Databases</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style="display: none;">
      <p>Creating a database by associating tables as a group provides the benefits of the data dictionary features in Visual FoxPro. A data dictionary provides greater flexibility in designing and modifying the database and frees you from writing code to create field and row-level validation or to ensure the uniqueness of values in primary key fields. More specifically, the Visual FoxPro data dictionary makes it possible for you to create or specify the following items:  </p>
      <ul><li>
          <p>Primary and candidate keys.</p>
        </li><li>
          <p>Persistent relationships between database tables.</p>
        </li><li>
          <p>Long names for tables and fields.</p>
        </li><li>
          <p>Captions on fields that display in browse windows and grid columns as headers.</p>
        </li><li>
          <p>Default values in fields.</p>
        </li><li>
          <p>The default control class used in forms.</p>
        </li><li>
          <p>Input masks and display formats for fields.</p>
        </li><li>
          <p>Field-level rules and record-level rules.</p>
        </li><li>
          <p>Triggers.</p>
        </li><li>
          <p>Stored procedures.</p>
        </li><li>
          <p>Connections to remote data sources.</p>
        </li><li>
          <p>Local and remote views.</p>
        </li><li>
          <p>Comments for each field, table, and database.</p>
        </li></ul>
      <p>Some data dictionary features, such as long field names, primary and candidate keys, default values, field-level and record-level rules, and triggers, are stored with the database (.dbc) file but can also be created by creating a table or view. For more information, see <a href="/html/e72c1fd6-0b60-4dbd-9000-0ffecfb637fa.htm">Working with Tables</a> and <a href="/html/b50aba8f-aeef-42e3-b10a-3dff09aca6b7.htm">How to: Create Views</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor2"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1)" tabindex="0"><img id="sectionToggle1" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Tables in Databases</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style="display: none;">
      <p>You can associate tables with a database by creating them or adding them to a database. Tables in Visual FoxPro can exist as a free table or as a database table. A free table is a table (.dbf) file that is not associated with any database. A database table is a table file that is associated with a database. Database tables can have properties that free tables do not have, such as field-level and record-level rules, triggers, and persistent relationships. For more information, see <a href="/html/e72c1fd6-0b60-4dbd-9000-0ffecfb637fa.htm">Working with Tables</a> and <a href="/html/9306c39f-0eb7-42b7-9051-55ecae2af6fd.htm">How to: Associate Tables with a Database</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor6"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle2)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle2)" tabindex="0"><img id="sectionToggle2" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Links Between Tables and the Database</span></h1><div id="sectionSection2" class="section" name="collapseableSection" style="display: none;">
      <p>Adding a table to the database creates links between the table file and the database. Information for these links is stored in the database (.dbc) file and the table (.dbf) file. The link information stored in the database file about a table it contains is called a forward link. Forward link information consists of the relative path and file name for each associated table file and is stored in the database file.</p>
      <p>The link information stored in the table file about the database that contains it is called a back link. Back link information consists of the relative path and file name for the database associated with the table and is stored in the header of the table file. For more information, see <a href="/html/67c064a6-5408-48e9-9314-d3c2deb094d4.htm">How to: Update Table and Database Links</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor3"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle3)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle3)" tabindex="0"><img id="sectionToggle3" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Persistent Relationships Between Database Tables</span></h1><div id="sectionSection3" class="section" name="collapseableSection" style="display: none;">
      <p>Creating persistent relationships between database tables in a database make it possible for you to relate tables based on a simple or complex index expression or their indexes so you can access the exact records you want. </p>
      <div class="labelheading"><b><caption xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:cs="urn:the-xml-files:xslt-cs"><caption xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Indexes provide the basis for persistent relationships</caption></caption></b><br></br></div><img src="../local/Local_-309604806_afd06003.gif" alt="FoxPro Database Designer Testdata"></img>
      <p>Unlike temporary relationships created with the <b>SET RELATION</b> command, you do not need to recreate persistent relationships each time you use the tables. However, persistent relationships do not control the relationship between record pointers in tables, so you need to set temporary relationships using the <b>SET RELATION</b> command relationships as well as persistent relationships when developing Visual FoxPro applications. For more information, see <a href="/html/dd0c045b-9749-405d-9d60-0169bede1b3d.htm">SET RELATION Command</a>.</p>
      <p>Persistent relationships are stored in the database (.dbc) file. The following also apply to persistent relationships:   </p>
      <ul><li>
          <p>They are used automatically as the default join conditions in the Query and View designers. For more information, see <a href="/html/d9f7a435-663d-4523-9511-c847be4311ca.htm">Query and View Designers</a>. </p>
        </li><li>
          <p>They appear in the Database Designer as lines joining table indexes. For more information, see <a href="/html/316676c8-1232-4756-b385-fa7af6528835.htm">Database Designer</a>.</p>
        </li><li>
          <p>They are used to store referential integrity information.</p>
        </li><li>
          <p>They are used as the default relationships for forms and reports in a data environment and appear in the Data Environment Designer. For more information, see <a href="/html/35e6ce25-9da0-4754-90e2-f5c70aaa6d79.htm">Data Environment Designer</a>.</p>
        </li></ul>
      <p>For more information, see <a href="/html/79e46b49-14cd-4fb1-8a9b-b2d24ca86d32.htm">How to: Create Persistent Relationships Between Tables</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor4"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle4)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle4)" tabindex="0"><img id="sectionToggle4" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Referential Integrity Between Database Tables</span></h1><div id="sectionSection4" class="section" name="collapseableSection" style="display: none;">
      <p>You can create a set of rules to preserve relationship definitions between database tables when adding, updating, or deleting records. The process of creating these rules is called building referential integrity. When you create rules to enforce referential integrity, Visual FoxPro prevents the following actions:  </p>
      <ul><li>
          <p>Adding records to a related table when no associated record exists in the primary table.</p>
        </li><li>
          <p>Changing values in a primary table that result in orphan records in a related table.</p>
        </li><li>
          <p>Deleting records from a primary table when there are matching related records.</p>
        </li></ul>
      <p>You can write triggers and stored procedure code to enforce referential integrity. A trigger is an expression that is bound to a table and is invoked when any of the table's records are modified using a one of the specified data manipulating commands. However, you can use the Visual FoxPro Referential Integrity (RI) Builder to build referential integrity rules. </p>
      <p>The RI Builder makes it easier for you to determine the types of rules you want to enforce, the tables to enforce the rules with, and the system events that cause Visual FoxPro to check referential integrity rules. The RI Builder can also handle multiple levels of cascading for cascaded deletes and updates. When you use the RI Builder, Visual FoxPro generates the code for enforcing relational integrity rules and saves it as triggers that reference stored procedures. For more information, see <a href="/html/6b6883f7-0524-4441-8493-4ec4cc42b315.htm">How to: Build Referential Integrity Between Tables</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor5"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle5)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle5)" tabindex="0"><img id="sectionToggle5" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Stored Procedures in Databases</span></h1><div id="sectionSection5" class="section" name="collapseableSection" style="display: none;">
      <p>A stored procedure is Visual FoxPro procedure code that operates specifically on the data in a database and is stored in the database (.dbc) file. Stored procedures can improve performance because they are loaded into memory when a database opens. Stored procedures also make your application more portable because you do not have to manage code files separate from the database file.</p>
      <p>For example, you can use stored procedures for creating user-defined functions that you reference in validation rules at the field and record level. When you save a user-defined function as a stored procedure in a database, the function code is saved in the database file and moves with the database automatically if you relocate the database. For more information, see <a href="/html/3f7655ec-253a-4989-82c9-141c309a5141.htm">How to: Create and Manage Stored Procedures</a>.</p>
    </div><a name="focondatabasesinvisualfoxproanchor7"></a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle6)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle6)" tabindex="0"><img id="sectionToggle6" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Multiple Databases for Multiple User Environments</span></h1><div id="sectionSection6" class="section" name="collapseableSection" style="display: none;">
      <p>To meet organizational needs in a multiple user environment, you might need more than one database on your system. Multiple databases offer the following advantages:  </p>
      <ul><li>
          <p>Controlling user access to a subset of tables in the overall system.</p>
        </li><li>
          <p>Organizing data to meet diverse informational needs efficiently for various user groups.</p>
        </li><li>
          <p>Making it possible to use a subset of tables exclusively for creating local and remote views at run time.</p>
        </li></ul>
      <p>For example, suppose you have a database with sales information that is used primarily by a sales force working with customers and another database that maintains inventory information that is used primarily by buyers working with suppliers. Sometimes, the informational needs for these groups overlap. Multiple databases can be opened and accessed at the same time; yet they contain different information.</p>
      <div class="labelheading"><b><caption xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:cs="urn:the-xml-files:xslt-cs"><caption xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">Multiple databases can add flexibility to your system</caption></caption></b><br></br></div><img src="../local/Local_-309604804_afd06005.gif" alt="FoxPro Sales Inventory"></img>
    </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/e92a93ce-b885-41ab-93fc-1b849dfba4c4.htm">Designing Databases</a></span><br /><span class="linkTerms"><a href="/html/f69c91ac-86af-4f78-9f04-5b7464635a8c.htm">Creating Databases</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="Databases in Visual FoxPro">
</OBJECT>
