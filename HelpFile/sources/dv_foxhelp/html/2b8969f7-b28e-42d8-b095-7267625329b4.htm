<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>GDI Plus Image Foundation Class</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">GDI Plus Image Foundation Class</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>The <b>gpImage</b> class encapsulates a GDI+ image, and serves as the base class for specific image types (for example, the <b>gpBitmap</b> class).</p>
    <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
          <th>
            
              <b>Category</b>
            
          </th>
          <th>
            
              <b>Reporting</b>
            
          </th>
        </tr><tr>
        <td>
          <p>Default Catalog</p>
        </td>
        <td>
          <p>Visual FoxPro Catalog\Foundation Classes\Output\GDIplus</p>
        </td>
      </tr><tr>
        <td>
          <p>Class</p>
        </td>
        <td>
          <p>gpImage</p>
        </td>
      </tr><tr>
        <td>
          <p>Base Class</p>
        </td>
        <td>
          <p>Custom</p>
        </td>
      </tr><tr>
        <td>
          <p>Class Library</p>
        </td>
        <td>
          <p>_GDIPLUS.vcx</p>
        </td>
      </tr><tr>
        <td>
          <p>Parent Class</p>
        </td>
        <td>
          <p>gpObject (<span class="linkTerms"><a href="/html/5f92e093-7044-407b-9b5b-ab9297c74c8d.htm">GDI Plus Object Foundation Class</a></span>)</p>
        </td>
      </tr></table></div>
  <h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>The following table lists public properties and methods added by this class to its parent class, <b>gpObject</b>.  This class also implements the <b>Init</b> and <b>Clone</b> methods. </p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              
                <b>Properties and methods</b>
              
            </th>
            <th>
              
                <b>Description</b>
              
            </th>
          </tr><tr>
          <td>
            <p>
              <b>Clone</b> Method</p>
          </td>
          <td>
            <p>Clones an image object.</p>
            <p>
              <b>Syntax:</b>
              <code> THIS.Clone(toGpImage)</code>
            </p>
            <p>
              <b>Return Values:</b> Logical, representing success or failure.  </p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">toGpImage</span>, required, the <b>gpImage</b>-based object to clone.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>CreateFromFile</b> Method</p>
          </td>
          <td>
            <p>Creates an image object from a file.</p>
            <p>
              <b>Syntax:</b>
              <code> THIS.CreateFromFile(tcFileName [, tlUseEmbeddedColorMgmt])</code>
            </p>
            <p>
              <b>Return Values:</b> Logical, representing success or failure.  </p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tcFileName</span>, required, the image file from which to create the image object.</p>
            <p>
              <span class="parameter">tlUseEmbeddedColorMgmt</span>, optional, whether to use embedded color management.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Flags</b> Property</p>
          </td>
          <td>
            <p>Specifies attribute flags for this image as an integer computed as a combination of bit values, using the GDIPLUS_ImageFlags_* defined constants.</p>
            <p>
              <b>Default:</b> Empty.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetBounds</b> Method</p>
          </td>
          <td>
            <p>Gets a bounding rectangle in the specified units.</p>
            <p>
              <b>Syntax:</b>
              <code> THIS.GetBounds(tnUnits)</code>
            </p>
            <p>
              <b>Return Values:</b> an object of type <b>gpRectangle</b>, or null (<code>.NULL.</code>) on error.</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tnUnits</span>, required, specified according to the GDIPLUS_Unit_* set of constants.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetDecoderCLSID</b> Method</p>
          </td>
          <td>
            <p>Gets the CLSID for the Decoder for a specific image format (for example, "<code>image/jpeg</code>"). </p>
            <p>
              <b>Syntax:</b>
              <code> qCLSID = THIS.GetDecoderCSLID(tvSearchValue)</code>
            </p>
            <p>
              <b>Return Values:</b> Varbinary, CLSID of Decoder. Returns null (<code>.NULL.</code>) on error.</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tvSearchValue</span>, required. A string containing MIME type of image (eg <code>"image/jpeg"</code>), or a varbinary GUID of image format, as specified in GDIPLUS_IMAGEFORMAT_* constants.</p>
            <p>
              <b>Remarks:</b> If no decoder is found for the specified image type, or if the image format MIME type or GUID supplied in <span class="parameter">tvSearchValue</span> is invalid, then this function returns <code>.NULL.</code> and the <b>GetStatus()</b> method returns <code>0</code> ("no error").</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetEncoderCLSID</b> Method</p>
          </td>
          <td>
            <p>Gets the CLSID for the encoder for a specific image format (for example, "<code>image/jpeg</code>"). </p>
            <p>
              <b>Syntax:</b>
              <code> qCLSID = THIS.GetEncoderCSLID(tvSearchValue)</code>
            </p>
            <p>
              <b>Return Values:</b> Varbinary, CLSID of encoder suitable for passing to <b>SaveToFile()</b> method. Returns null (<code>.NULL.</code>) on error.</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tvSearchValue</span>, required. A string containing MIME type of image (eg <code>"image/jpeg"</code>), or a varbinary GUID of image format, as specified in GDIPLUS_IMAGEFORMAT_* constants.</p>
            <p>
              <b>Remarks:</b> If no encoder is found for the specified image type, or if the image format MIME type or GUID supplied in <span class="parameter">tvSearchValue</span> is invalid, then this function returns <code>.NULL.</code> and the <b>GetStatus()</b> method returns <code>0</code> ("no error").</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetPropertyCount</b> Method</p>
          </td>
          <td>
            <p>Gets the number of properties stored in the metadata of this image object.</p>
            <p>
              <b>Syntax:</b>
              <code> nCount = THIS.GetPropertyCount()</code>
            </p>
            <p>
              <b>Return Values</b>: Integer, number of meta data properties (which could be zero). Returns null (<code>.NULL.</code>) on error.</p>
            <p>
              <b>Parameters: </b>
              <span class="parameter">none</span>.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetPropertyIdList</b> Method</p>
          </td>
          <td>
            <p>Gets a list of all the properties stored in the image metadata, as a Visual FoxPro array.</p>
            <p>
              <b>Syntax:</b>
              <code> nCount = THIS.GetPropertyIdList(@raPropIDList)</code>
            </p>
            <p>
              <b>Return Values</b>: Integer, number of meta data properties (which could be zero). Returns null (<code>.NULL.</code>) on error.  The property ID values are returned in the <span class="parameter">raPropIDList</span> parameter array.</p>
            <p>
              <b>Parameters:</b>
            </p>
            <p>
              <span class="parameter">raPropIDList</span>, required, array passed by reference. On return, this array is dimensioned to a 1-dimensional array, and each element of the array contains an integer property ID value.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetPropertyItem</b> Method</p>
          </td>
          <td>
            <p>Retrieves the specified property from the image metadata.</p>
            <p>
              <b>Syntax:</b>
              <code> vPropertyValue = THIS.GetPropertyItem(tnPropID)</code>
            </p>
            <p>
              <b>Returns:</b>
              <code> </code>Property value, or null (<code>.NULL.</code>) if the property is not found or an error occurs. The data type depends on the property tag type, as follows:</p>
            <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                  <th>
                    
                      <b>Property types:</b>
                    
                  </th>
                  <th>
                    
                      <b>Returned in Visual FoxPro as:</b>
                    
                  </th>
                </tr><tr>
                <td>
                  <p>byte, short, long, signed long</p>
                </td>
                <td>
                  <p>Numeric</p>
                </td>
              </tr><tr>
                <td>
                  <p>String</p>
                </td>
                <td>
                  <p>ANSI string</p>
                </td>
              </tr><tr>
                <td>
                  <p>rational, signed rational</p>
                </td>
                <td>
                  <p>String containing two numbers separated by a slash character.  For example, one-third would be <code>"1/3"</code>.</p>
                </td>
              </tr></table></div>
            <p>Property types not shown here are not supported.</p>
            <p>
              <b>Parameters:</b>
            </p>
            <p>
              <span class="parameter">tnPropID</span>, required, integer, a property item ID as returned by <b>GetPropertyIDList</b>.  </p>
            <p>
              <b>Remarks:</b> If the requested property is not defined, this method returns null (<code>.NULL.</code>) and the <b>GetStatus()</b> method returns <code>19</code> (GDIPLUS_STATUS_PropertyNotFound).</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>GetThumbnailImage</b> Method</p>
          </td>
          <td>
            <p>Gets a thumbnail image from the image object, returned as a new <b>gpImage</b> object.</p>
            <p>
              <b>Syntax:</b>
              <code> oImage= THIS.GetThumbnailImage(tnWidth, tnHeight)</code>
            </p>
            <p>
              <b>Return Values:</b> <b>gpImage</b> object containing a thumbnail. Returns null (<code>.NULL.</code>) if an error occurs.</p>
            <p>
              <b>Parameters:</b>
            </p>
            <p>
              <span class="parameter">tnWidth</span>, integer, required, desired width of thumbnail in pixels.</p>
            <p>
              <span class="parameter">tnHeight</span>, integer, required, desired width of thumbnail in pixels.</p>
            <p>
              <b>Remarks:</b> Some image files have a thumbnail image embedded in the file. In such cases, this method retrieves the embedded thumbnail image and the <span class="parameter">tnWidth</span> and <span class="parameter">tnHeight</span> parameter values are ignored. If there is no embedded thumbnail image, this method creates a thumbnail image by scaling the main image to the size specified in the <span class="parameter">tnWidth</span> and <span class="parameter">tnHeight</span> parameters. If both of those parameters are <code>0</code>, a system-defined size is used.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>HorizontalResolution</b> Property</p>
          </td>
          <td>
            <p>Numeric, horizontal resolution in pixels-per-inch. Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>ImageHeight</b> Property</p>
          </td>
          <td>
            <p>Height of this Image object. Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>ImageWidth</b> Property</p>
          </td>
          <td>
            <p>Width of this Image object. Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>Init</b> Method</p>
          </td>
          <td>
            <p>Constructs an Image object during initialization if passed appropriate arguments.</p>
            <p>
              <b>Syntax:</b>
              <code> CREATEOBJECT("gpImage" [,tnHandle|tcFileName[, tlParam]])</code>
            </p>
            <p>
              <b>Return Values:</b> Logical, representing success or failure.  If the method fails, the object does not instantiate.</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tnHandle | tcFilename,</span> required if immediate creation of the object is requested, a graphics handle or filename from which the image will be created.</p>
            <p>
              <span class="parameter">tlParam</span>, optional, indicates whether the class owns the graphics handle (if the first parameter is <span class="parameter">tnHandle</span>) or whether color management should be used (if the first parameter is <span class="parameter">tcFileName</span>).</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>PhysicalDimension</b> Property</p>
          </td>
          <td>
            <p>Provides the width and height of this image object, as an object of type <b>gpSize</b>. Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
            <p>
              <b>Remarks:</b> If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>PixelFormat</b> Property</p>
          </td>
          <td>
            <p>Pixel format, according to the values specified in GP_PIXELFORMAT_* constants. Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
            <p>
              <b>Remarks:</b> May not apply to some image objects, such as vector-format images.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>RawFormat</b> Property</p>
          </td>
          <td>
            <p>Get the format of this image as a GUID of varbinary type.  Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>RotateFlip</b> Method</p>
          </td>
          <td>
            <p>Rotates and/or flips (mirrors) the image object.</p>
            <p>
              <b>Syntax:</b>
              <code> THIS.RotateFlip(tnRotateFlipType)</code>
            </p>
            <p>
              <b>Return Values:</b> Logical, representing success or failure.  </p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tnRotateFlipType</span>, required, integer. Specifies angle of rotation and/or type of flip, according to the values specified in the GDIPLUS_ROTATEFLIPTYPE_* defined constants.</p>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>SaveToFile</b> Method</p>
          </td>
          <td>
            <p>Saves the image object to a disk file, using specified encoder or image format and optional parameters.</p>
            <p>
              <b>Syntax:</b>
              <code> THIS.SaveToFile(tcFilename, tvCLSIDEncoder[, rvEncoderParams])</code>
            </p>
            <p>
              <b>Return Values:</b> Logical, representing success or failure.  </p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">tcFilename</span>, required, string, the file name to which the image should be saved.</p>
            <p>
              <span class="parameter">tvCLSIDEncoder</span>, required, string or varbinary. The CLSID of the encoder to use, or a MIME type (eg "<code>image/jpeg</code>").  If a MIME type is specified, then the method dynamically looks up the CLSID of the appropriate Encoder.</p>
            <p>
              <span class="parameter">rvEncoderParams</span>, optional, parameters for the encoder. Either a comma-separated string in the form "<code>param1=value1,param2=value2</code>", or a two-column array (passed by reference) of encoder parameters and values.</p>
            <p>
              <b>Remarks:</b> The encoder parameters are defined internally by globally unique IDs (GUIDS). This function understands a limited set of parameters by name:</p>
            <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                  <th>
                    
                      <b>Image type</b>
                    
                  </th>
                  <th>
                    
                      <b>Available parameters</b>
                    
                  </th>
                </tr><tr>
                <td>
                  <p>JPEG</p>
                </td>
                <td>
                  <p>quality, transformation</p>
                </td>
              </tr><tr>
                <td>
                  <p>TIFF</p>
                </td>
                <td>
                  <p>compression, colordepth, saveflag</p>
                </td>
              </tr></table></div>
            <p>To pass other parameters, use the array form of rvEncoderParams with the GUID of the parameter in the first column.</p>
            <p>The following example saves an image to a JPEG file, using a quality of 80%.</p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>lSuccess = oImage.SaveToFile( "example.jpg", ;
           "image/jpeg", "quality=80" )</pre></td></tr></table></span></div>
          </td>
        </tr><tr>
          <td>
            <p>
              <b>VerticalResolution</b> Property</p>
          </td>
          <td>
            <p>Numeric, vertical resolution in pixels-per-inch.  Read-only.</p>
            <p>
              <b>Default:</b> none.</p>
          </td>
        </tr></table></div>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/bc9c384e-280d-4c04-abe0-7f7c7c5fea4f.htm">Visual FoxPro Foundation Classes A-Z</a></span><br /><span class="linkTerms"><a href="/html/a8a60a3e-43d2-4f80-bdd0-89f5f68578ae.htm">GDI Plus API Wrapper Foundation Classes</a></span><br /><h4 class="subHeading">Concepts</h4><span class="linkTerms"><a href="/html/005682e4-5892-4e65-bcc3-2b64213e3fcc.htm">Guidelines for Using Visual FoxPro Foundation Classes</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="GDI Plus Image Foundation Class">
</OBJECT>
