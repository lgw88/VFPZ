<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Class Browser Methods</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">Class Browser Methods</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>The following methods are associated with the Class Browser. For more information, see <a href="/html/afc75739-4829-4b5d-ae1b-99e28c909b1a.htm">How to: Customize the Class Browser</a> and <a href="/html/5bfd4f8d-0324-4a75-904c-330eea767a3d.htm">Class Browser Window</a>.  </p>
  <div id="sectionSection0" class="seeAlsoNoToggleSection">
      <dl><dt><span class="nonLinkTerms">
          <b>AddClass( )</b>
        </span></dt><dd>
          <p>Copies a class from one class library (.vcx) file to another. Used after a drag-and-drop operation between instances of the Class Browser and dependent on the oSource property. If the specified class does not exist, a class is created.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>AddFile(</b>[ <span class="parameter">cFileName</span>][, <span class="parameter">lIgnoreRefresh</span>] <b>)</b></span></dt><dd>
          <p>Adds a class library (.vcx) or form (.scx) file to the Class Browser class list. If no parameters are passed, an AddFile dialog box appears by using the Class Browser GetFile( ) method. If <span class="parameter">lIgnoreRefr</span><i>esh</i> is True (.T.), the Class Browser class list is not refreshed. If you are adding multiple files, you can wait until all classes are added before refreshing the list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>AddIn(</b>
          <span class="parameter">cName</span>[, <span class="parameter">cProgram</span>] [, <span class="parameter">cMethod</span>] [, <span class="parameter">cFileFilter</span>] [, <span class="parameter">cPlatform</span>] [, <span class="parameter">cComment</span>] <b>)</b></span></dt><dd>
          <p>Installs or removes the specified add-in to the Browser.dbf registration table.</p>
          <p>The following list describes the parameters available for this method:   </p>
          <ul><li>
              <p>
                <span class="parameter">cName</span> Specifies the name of the add-in. Not case-sensitive; however, when displayed on a menu, the value appears as entered.</p>
            </li><li>
              <p>
                <span class="parameter">cProgram</span> Specifies the name of a program (.PRG), form (.scx), application (.APP), executable file (.EXE), or compiled program (.FXP) to run. If no extension is provided, the extension .PRG is assumed. </p>
              <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
                <p>If this argument is .NULL., the add-in is marked for deletion in Browser.dbf and disabled in the add-in shortcut menu.</p>
              </td></tr></table></div>
            </li><li>
              <p>
                <span class="parameter">cMethod</span> Specifies a method name to use as an event hook. If empty, the add-in appears on the menu.</p>
            </li><li>
              <p>
                <span class="parameter">cFileFilter</span> Specifies a list of class libraries and forms that enable the add-in. If empty, the add-in is available for all class libraries (.vcx) and forms (.scx).</p>
            </li><li>
              <p>
                <span class="parameter">cPlatform</span> Specifies the platform the add-in is available on. If empty, the add-in is available on all platforms supported by Visual FoxPro.</p>
            </li><li>
              <p>
                <span class="parameter">cComment</span> Specifies text stored in a memo field in the Browser.dbf.</p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>AddInMenu( )</b>
        </span></dt><dd>
          <p>Expands the menu that displays the registered add-ins.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>AddInMethod(</b>
          <span class="parameter">cObjMethod</span>
          <b>)</b>
        </span></dt><dd>
          <p>Executes any registered add-in for the specified object method.</p>
          <p>
            <b>Example: </b>To change the default behavior of the Help button in the Class Browser, use the following code:   </p>
          <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>_OBROWSER.AddInMethod("cmdHelp.click")</pre></td></tr></table></span></div>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>AutoRefresh( )</b>
        </span></dt><dd>
          <p>Determines whether to refresh the display by checking for updated class library (.vcx) information in the selected class in the class list, and by checking the total number of records in the class library (.vcx) file being edited. This method runs when the Class Browser form is activated.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>BinToInt(</b>[ <span class="parameter">cBinaryValue</span>] <b>)</b></span></dt><dd>
          <p>Returns the integer equivalent of a string representing a binary value. For example, passing this method a <span class="parameter">cBinaryValue</span> of "11001" would return 25. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>CleanUpFile( )</b>
        </span></dt><dd>
          <p>Removes records from the class library (.vcx) file associated with the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ClearBrowser( )</b>
        </span></dt><dd>
          <p>Internal use only.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ClearClass(</b>[ <span class="parameter">lClearAll</span>] <b>)</b></span></dt><dd>
          <p>Clears the class cache from memory with the CLEAR CLASS command for a specific class, or all classes displayed if <span class="parameter">lClearAll</span> is set to True (.T.).</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>NewClass( )</b>
        </span></dt><dd>
          <p>Creates a subclass of the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>DeactivateMenu( )</b>
        </span></dt><dd>
          <p>Deactivates the add-in popup menu.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>DisplayMenu(</b>
          <span class="parameter">tnMenuMode</span>
          <b>)</b>
        </span></dt><dd>
          <p>Displays the shortcut menu at the current mouse pointer location. If <span class="parameter">tnMenuMode</span> is 0, the Class Browser form shortcut menu is displayed; if 1, the Class list shortcut menu; if 2, the Member list shortcut menu.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>DoAddIn(</b>[ <span class="parameter">cAddInName</span>] <b>)</b></span></dt><dd>
          <p>Executes the specified add-in of the current or specific record of the table with the BROWSER alias. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>FileMatch(</b>
          <span class="parameter">cFileName</span>, <span class="parameter">cFileList</span><b>)</b></span></dt><dd>
          <p>Compares the specified file against the specified file list to determine if the file is one associated with the add-in.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ExportClass(</b>[ <span class="parameter">lShow</span>] [, <span class="parameter">tcExportToFileName</span>] <b>)</b></span></dt><dd>
          <p>Generates and displays the definition source code of the selected class or the selected file in the class list. </p>
          <p>The following list describes the parameters available for this method:   </p>
          <ul><li>
              <p>
                <span class="parameter">lShow </span>Specifies whether to display the code. If the parameter <span class="parameter">lShow</span> is True (.T.), the Class Browser window displays the code.</p>
            </li><li>
              <p>
                <span class="parameter">tcExportToFileName</span> Specifies the name of the file to receive the code.</p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>FindClass(</b>[ <span class="parameter">cFind</span>] <b>)</b></span></dt><dd>
          <p>Finds class text within a class.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>FormAddObject(</b>
          <span class="parameter">oObject</span>[, <span class="parameter">nXCoord</span>] [, <span class="parameter">nYCoord</span>] [, <span class="parameter">lActivateForm</span>] [, <span class="parameter">lDesignMode</span>][, <span class="parameter">lNoShow</span>] [, <span class="parameter">lNoErrors</span>] [, <span class="parameter">lBuilder</span>] [, <span class="parameter">oForm</span>] <b>)</b></span></dt><dd>
          <p>Adds an instance of the selected class in the class list to an external form.</p>
          <p>The following list describes the parameters available for this method:   </p>
          <ul><li>
              <p>
                <span class="parameter">oObject</span> Specifies a reference to the destination container. The values can be either "command" for the Command window, "screen" for the Visual FoxPro desktop, or "new". You can implement these options with the following commands: </p>
              <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>_oBrowser.FormAddObject("command")
_oBrowser.FormAddObject("-screen")
_oBrowser.FormAddObject("new")</pre></td></tr></table></span></div>
            </li><li>
              <p>
                <span class="parameter">nXCoord</span> Specifies the horizontal position of the object inside the container. If no value is passed, the current mouse position is used.</p>
            </li><li>
              <p>
                <span class="parameter">nYCoord</span> Specifies the vertical position of the object inside the container. If no value is passed, the current mouse position is used.</p>
            </li><li>
              <p>
                <span class="parameter">lActivateForm</span> If True (.T.), the destination form is activated when the object is added to it; if False (.F.), the Class Browser remains active.</p>
            </li><li>
              <p>
                <span class="parameter">lDesignMode</span> If True (.T.), the object reference is an object currently in the Form Designer or class designer.</p>
            </li><li>
              <p>
                <span class="parameter">lNoShow</span> If True (.T.), the object reference is an object currently in the Form Designer or class designer.</p>
            </li><li>
              <p>
                <span class="parameter">lNoErrors </span>Specifies whether errors generated at instantiation are ignored. If False (.F.), errors are displayed in the Class Browser. </p>
            </li><li>
              <p>
                <span class="parameter">lBuilder </span>Specifies whether a custom builder is launched after the object is added to a container.</p>
            </li><li>
              <p>
                <span class="parameter">oForm </span>Specifies the container to which an object is added. <span class="parameter">oForm</span>, an optional parameter, is primarily used to contain the host object in design mode.</p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>FormatMethods(</b>
          <span class="parameter">cMethods</span>
          <b>)</b>
        </span></dt><dd>
          <p>Formats the text of generated methods in the display of the class definition code.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>FormatProperties(</b>
          <span class="parameter">cProperties</span>[, <span class="parameter">lAddObjectMode</span>] <b>)</b></span></dt><dd>
          <p>Formats the text of generated properties in the display of the class definition source code.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>GetFile(</b>[ <span class="parameter">cFileExt</span>] <b>)</b></span></dt><dd>
          <p>Opens the Class Browser GetFile( ) dialog box. The GetFile( ) method is used internally by the Open or Add buttons in the Class Browser. Whenever the Class Browser prompts for a class library (.vcx) or form (.scx), the GetFile( ) method is called internally.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>GetTimeStamp(</b>[ <span class="parameter">ntimestamp</span>] <b>)</b></span></dt><dd>
          <p>Returns the character equivalent of a timestamp value. If no parameter is passed, returns the timestamp string of the currently selected file.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>IndentText(</b>
          <span class="parameter">cCode</span>
          <b>)</b>
        </span></dt><dd>
          <p>Indents a block of text one tab.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>IntToBin(</b>[ <span class="parameter">nInteger</span>] <b>)</b></span></dt><dd>
          <p>Returns a string representing a binary value that is the equivalent of an integer value. For example, passing this method a <span class="parameter">n</span><i>Integer</i> of 25 would return "11001".</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ModifyClass( )</b>
        </span></dt><dd>
          <p>Opens the selected class in the Class Designer.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>MsgBox(</b>
          <span class="parameter">cMessage</span>[, <span class="parameter">nType</span>] [, <span class="parameter">cTitle</span>] <b>)</b></span></dt><dd>
          <p>Displays the Class Browser message box. Similar to the Visual FoxPro <a href="/html/09f87252-c201-4402-93f0-b204468955ef.htm">MESSAGEBOX( )</a> function.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>NewFile(</b>[ <span class="parameter">cFileName</span>] [, <span class="parameter">lOpenFile</span>] <b>)</b></span></dt><dd>
          <p>Creates a new class library (.vcx) file. If no parameters are passed, the Open dialog box is displayed. If parameters are provided, a new class library (.vcx) is created and added to the class list in Class Browser.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>OpenFile(</b>[ <span class="parameter">cFileName</span>] <b>)</b></span></dt><dd>
          <p>Opens an existing class library (.vcx) or form (.scx) file. If a file name is not provided, the Open dialog box appears.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ProperBaseClass(</b>
          <span class="parameter">cBaseClass</span>
          <b>)</b>
        </span></dt><dd>
          <p>Returns the base class name in the proper case. For example, "combobox" would return as "ComboBox".</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RedefineClass(</b>[ <span class="parameter">cAsClass</span>] [, <span class="parameter">cClassLoc</span>] <b>)</b></span></dt><dd>
          <p>Changes the parent class of the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshButtons( )</b>
        </span></dt><dd>
          <p>Refreshes the Class Browser command buttons based on the file type.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshClassIcon( )</b>
        </span></dt><dd>
          <p>Reloads the class icon from the icon file. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshClassList(</b>[ <span class="parameter">cDefaultClass</span>] [, <span class="parameter">lIgnoreTable</span>] <b>)</b></span></dt><dd>
          <p>Refreshes the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshClassListSubclass( )</b>
        </span></dt><dd>
          <p>For internal use only.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshFileAttrib( )</b>
        </span></dt><dd>
          <p>Refreshes the file attribute status of the file name associated with the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshCaption( )</b>
        </span></dt><dd>
          <p>Refreshes the Class Browser caption of a form.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshDescriptions( )</b>
        </span></dt><dd>
          <p>Internal use only. Refreshes the descriptions of classes and members.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshMembers(</b>[ <span class="parameter">tcDefaultMember</span>] <b>)</b></span></dt><dd>
          <p>Refreshes the Member tabs to display information associated with the selected class in the class list and, if provided, the specified member.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshParentClassBrowser( )</b>
        </span></dt><dd>
          <p>Refreshes the state of the ParentClass Browser toolbar.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshPrefRecNo( )</b>
        </span></dt><dd>
          <p>Refreshes the Browser.dbf preference record pointer for the class library (.vcx) or form (.scx) file being edited.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RefreshRecNo( )</b>
        </span></dt><dd>
          <p>Refreshes the current record pointer of the class library (.vcx) or form (.scx) table for the file of the selected class.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RemoveClass(</b>[ <span class="parameter">lConfirm</span>] <b>)</b></span></dt><dd>
          <p>Removes the selected class in the class list from its associated class library (.vcx) file.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>RenameClass(</b>[ <span class="parameter">cToClass</span>] <b>)</b></span></dt><dd>
          <p>Changes the class name of the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ResetDefaults( )</b>
        </span></dt><dd>
          <p>Restores original display settings. This method is called when you choose Restore Defaults from the shortcut menu. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SavePreferences( )</b>
        </span></dt><dd>
          <p>Saves current preference settings to the Browser.dbf registration table.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ScaleResize( )</b>
        </span></dt><dd>
          <p>Scales the controls on the Class Browser form to fit after the form is resized using the Resize( ) event.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SeekClass(</b>[ <span class="parameter">cClass</span>][, cClassLibrary] <b>)</b></span></dt><dd>
          <p>Moves the class list pointer to a specific class or index in the class list. Can use the numeric value of the visual position in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SeekMember(</b>
          <span class="parameter">tcMember</span>
          <b>)</b>
        </span></dt><dd>
          <p>Moves the member list pointer to a specific member.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SeekParentClass( )</b>
        </span></dt><dd>
          <p>Displays the parent class of the selected class in the class list.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SetBusyState(</b>
          <span class="parameter">lBusyState</span>
          <b>)</b>
        </span></dt><dd>
          <p>Sets the lBusyStatus property to True (.T.) or False (.F.) based on the parameter received; also sets the mouse pointer shape to an arrow or hourglass.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>SetFont(</b>[ <span class="parameter">cFontName</span>][, <span class="parameter">nFontSize</span>][, <span class="parameter">lFontBold</span>][, <span class="parameter">lFontItalic</span>] <b>)</b></span></dt><dd>
          <p>Sets the font and font size used by the Class Browser for its form, controls, and dialog boxes. If you don't specify a font name or size, SetFont( ) opens the Get Font dialog box.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ShowMenu(</b>
          <span class="parameter">aMenu</span>[, <span class="parameter">cOnS</span><i>election</i>] <b>)</b></span></dt><dd>
          <p>Displays a menu based on an array. If a menu is a single-dimension array, this method displays a list of all items in your menu. If the array is two-dimensional with an item and an action, it displays the menu items and when the item is selected, it executes the associated action.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>TrimExt(</b>
          <span class="parameter">cFileName</span>[, <span class="parameter">lPlatformType</span>] <b>)</b></span></dt><dd>
          <p>Truncates the file name extension.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>TrimFile(</b>
          <span class="parameter">cFileName</span>[, <span class="parameter">lPlatformType</span>] <b>)</b></span></dt><dd>
          <p>Truncates the file name and returns only the file name and path.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>TrimPath(</b>
          <span class="parameter">cFileName</span>[, <span class="parameter">lTrimExt</span>] [, <span class="parameter">lPlatformType</span>] <b>)</b></span></dt><dd>
          <p>Truncates the path name.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>UpdateReferences(</b>
          <span class="parameter">tcOldClassLoc, tcOldClass, tcNewClassLoc, tcNewClass </span>[, <span class="parameter">tlAllInstances</span>] <b>)</b></span></dt><dd>
          <p>Used to update references of classes (subclasses and object members) when renaming a class and when moving a class from one class browser to another.</p>
          <p>The following list describes the parameters available for this method:   </p>
          <ul><li>
              <p>
                <span class="parameter">tcOldClassLoc</span> Specifies the original contents of the ClassLoc field in the .vcx or .scx file.</p>
            </li><li>
              <p>
                <span class="parameter">tcOldClass</span> Specifies the original contents of the Class field in the .vcx or .scx file.</p>
            </li><li>
              <p>
                <span class="parameter">tcNewClassLoc</span> Specifies the new contents of the ClassLoc field in the .vcx or .scx file..</p>
            </li><li>
              <p>
                <span class="parameter">tcNewClass</span> Specifies the new contents of the Class field in the .vcx or .scx file.</p>
            </li><li>
              <p>
                <span class="parameter">tlAllInstances</span> If True (.T.) all files in all Class Browser windows are updated. If False (.F.) only the files in the current Class Browser window are updated.</p>
            </li></ul>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>VersionCheck(</b>[ <span class="parameter">lShowErrorMsg</span>] <b>)</b></span></dt><dd>
          <p>Validates the open class library (.vcx) or form (.scx) file.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>ViewProperty(</b>
          <span class="parameter">cProperty</span>
          <b>)</b>
        </span></dt><dd>
          <p>Displays the value of a specific property of the selected class.</p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <b>WildcardMatch(</b>
          <span class="parameter">cMatchExpList</span>, <span class="parameter">cExpressionSearched</span><b>)</b></span></dt><dd>
          <p>Compares strings for a wildcard match with the filters specified in the Type box.</p>
        </dd></dl>
    </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/55103006-10e5-4610-b749-d7b9beb8f0d5.htm">Class Browser Object Members</a></span><br /><span class="linkTerms"><a href="/html/ed9c65f5-d306-40d8-8d13-78f2fdc5d1d7.htm">Class Browser Properties</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/ca97d4ab-ef98-482f-aeb0-a3840f1d96d5.htm">Methods (Visual FoxPro)</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="Class Browser Methods">
</OBJECT>
