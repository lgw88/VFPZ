<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>@ ... GET - Spinners Command</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">@ ... GET - Spinners Command</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p> </p>
  <div id="sectionSection0" class="seeAlsoNoToggleSection">
      <p>Included for backward compatibility. Use the <a href="/html/f0867563-6b6a-45a9-8fd7-d0199b5d50f5.htm">Spinner Control</a> instead.</p>
    </div>
<!-- VFPX FPW2.6 begin -->
	<p class="vfpx">This command is undocumented in the original VFP9 help file, <br />but the following documentation was found in the FoxPro for Windows 2.6 help, and may still be valid:<br /></p>
	<p />
	<p>Creates a spinner.</p>
	<div id="syntaxSection" class="section">
		<div id="syntaxCodeBlocks" class="code">
			<span codeLanguage="other">
				<table width="100%" cellspacing="0" cellpadding="0">
				<tr>
					<th align="left"></th>
				</tr>
				<tr>
					<td>
					<pre>@ <span class="parameter">row, column</span> 
GET <span class="parameter">memvar</span> | <span class="parameter">field</span>
SPINNER <span class="parameter">expN1</span> [, <span class="parameter">expN2</span>
[, <span class="parameter">expN3</span>]]
	[FUNCTION <span class="parameter">expC1</span>]
	[PICTURE <span class="parameter">expC2</span>]
	[FONT <span class="parameter">expC3</span> [, <span class="parameter">expN4</span>]]
	[STYLE <span class="parameter">expC4</span>]
	[DEFAULT <span class="parameter">expN5</span>]
	[SIZE <span class="parameter">expN6</span>, <span class="parameter">expN7</span>]
	[ENABLE | DISABLE]
	[MESSAGE <span class="parameter">expC5</span>]
	[RANGE [<span class="parameter">expN8</span>] [, <span class="parameter">expN9</span>]]
	[VALID <span class="parameter">expL1</span> | <span class="parameter">expN10</span>
		[ERROR <span class="parameter">expC6</span>]]
	[WHEN <span class="parameter">expL2</span>]
	[COLOR SCHEME <span class="parameter">expN11</span> 
	| COLOR <span class="parameter">color pair list</span>]</pre>
					</td>
				<tr>
				</table>
			</span>
		</div>
	</div>
	<p />
	<h4 class="subHeading">Parameters</h4>
<span class="nonLinkTerms"><span class="parameter">row, column</span></span><br />
&nbsp;Row and column are numeric expressions with values of 0 or greater that determine where the spinner appears. <br />
<br />
&nbsp;The first row is number 0 in the main FoxPro window or a user-defined window. Rows are numbered from top to bottom. In FoxPro for Windows, row 0 is the row immediately under the FoxPro system menu bar. In FoxPro for Macintosh, row 0 is the row immediately under the FoxPro title bar. <br />
<br />
&nbsp;The first column is number 0 in the main FoxPro window or a user-defined window. Columns are numbered from left to right. <br />
<br />
&nbsp;When the spinner is directed to a user-defined window, the row and column coordinates are relative to the user-defined window, not the main FoxPro window. <br />
<br />
&nbsp;A position in the main FoxPro window or in a user-defined window is determined by the font of the main FoxPro window or the user-defined window. Most fonts can be displayed in a wide variety of sizes, and some are proportionally spaced. A row corresponds to the height of the current font; a column corresponds to the average width of a letter in the current font. <br />
<br />
&nbsp;You can position the spinner in a window with decimal fractions for row and column coordinates.<br />
<br />
GET <span class="parameter">memvar</span> | <span class="parameter">field</span> <br />
<br />
&nbsp;The numeric value contained in <span class="parameter">memvar</span> or <span class="parameter">field</span> is the initial value displayed in the spinner before READ or READ CYCLE is issued.<br />
<br />
&nbsp;When you choose a value in the spinner, your choice is stored to the numeric memory variable or array element <span class="parameter">memvar</span> or to the numeric field <span class="parameter">field</span>. <br />
<br />
SPINNER <span class="parameter">expN1</span> [, <span class="parameter">expN2</span> [, <span class="parameter">expN3</span>]]<br />
&nbsp;The values displayed in the spinner are specified with <span class="parameter">expN1</span>, <span class="parameter">expN2</span> and <span class="parameter">expN3</span>. <br />
<br />
&nbsp;The value displayed in the spinner text box is incremented or decremented by the value specified with <span class="parameter">expN1</span>. For example, if <span class="parameter">expN1</span> is 2 and you click the up or down arrow, the value in the text box increases or decreases by 2.<br />
<br />
&nbsp;The following example defines a spinner for the memory variable MCHOICE. The spinner increments by 1 with a lower limit of -5 and an upper limit of 24. The initial value displayed is 3.<br />
<br />
&nbsp;@ 2,2 GET mchoice SPINNER 1, -5, 24 DEFAULT 3<br />
<br />
&nbsp;The minimum value that can be displayed in the spinner is specified with <span class="parameter">expN2</span>, and the maximum value that can be displayed is specified with <span class="parameter">expN3</span>. However, using the keyboard you can enter a value in the text box that lies outside the range specified with <span class="parameter">expN2</span> and <span class="parameter">expN3</span>. Use VALID or RANGE to control what values can be entered in the text box with the keyboard.<br />
<br />
[FUNCTION <span class="parameter">expC1</span>]<br />
[PICTURE <span class="parameter">expC2</span>]<br />
&nbsp;When creating spinners, you can include the FUNCTION clause, the PICTURE clause or both. There is no advantage to any of the three methods. The FUNCTION and PICTURE clauses control how <span class="parameter">memvar</span> or <span class="parameter">field</span> appears and edited in the text box. <br />
<br />
&nbsp;The following table shows how the FUNCTION clause <span class="parameter">expC1</span> determines how values are displayed in the spinner text box.<br />
<br />
&nbsp;<span class="parameter">expC1</span>&nbsp;Purpose<br />
&nbsp;-------&nbsp;-------<br />
<br />
&nbsp;   B&nbsp;Left-justifies the value in the text box.<br />
<br />
&nbsp;   I&nbsp;Centers the value in the text box.<br />
<br />
&nbsp;   J&nbsp;Right-justifies the value in the text box.<br />
<br />
&nbsp;   K&nbsp;Selects the entire value for editing when the cursor is moved to the spinner.<br />
<br />
&nbsp;   L&nbsp;Displays leading zeros before the value.<br />
<br />
&nbsp;   Z&nbsp;Displays the value as blank if it is 0. <br />
<br />
&nbsp;   ^&nbsp;Displays the value using scientific notation. <br />
<br />
&nbsp;   $&nbsp;Displays the value in a currency format. The currency symbol appears to the left or right of the value depending on the setting of SET CURRENCY. <br />
<br />
&nbsp;The PICTURE clause character expression <span class="parameter">expC2</span> determines what values can be entered in the text box, how values are displayed and the appearance of the spinner. The PICTURE clause expression <span class="parameter">expC2</span> operates on individual characters in the spinner. You should include enough mask characters to allow entry of the highest value you anticipate in addition to any signs or symbols.<br />
<br />
&nbsp;The 2 (two-dimensional) and 3 (three-dimensional) specification codes are only available in FoxPro for Macintosh.<br />
<br />
&nbsp;<span class="parameter">expC2</span>&nbsp;Purpose<br />
&nbsp;-------&nbsp;-------<br />
<br />
&nbsp;   9&nbsp;Allows you to enter digits and signs ().<br />
<br />
&nbsp;   #&nbsp;Allows you to enter digits, blanks and signs ().<br />
<br />
&nbsp;   $&nbsp;Displays the current currency symbol (specified with SET CURRENCY). <br />
<br />
&nbsp;   *&nbsp;Asterisks are displayed to the left of the value. <br />
<br />
&nbsp;   .&nbsp;A period specifies the decimal point position.<br />
<br />
&nbsp;   ,&nbsp;Commas can be included to separate digits to the left of the decimal point.<br />
<br />
&nbsp;   2&nbsp;Creates a flat (two-dimensional) spinner identical to spinners in Macintosh dialogs. This is the default spinner type in FoxPro for Macintosh.<br />
<br />
&nbsp;   3&nbsp;Creates a three-dimensional spinner identical to spinners in FoxPro for Macintosh dialogs.<br />
<br />
FONT <span class="parameter">expC3</span> [, <span class="parameter">expN4</span>]<br />
&nbsp;The character expression <span class="parameter">expC3</span> is the name of the font, and the numeric expression <span class="parameter">expN4</span> is the font size. For example, the following command displays the text in the spinner in 16-point Courier font:<br />
<br />
&nbsp;@ 2, 2 GET mchoice SPINNER 1, 1, 10 DEFAULT 3 FONT 'Courier', 16 <br />
<br />
&nbsp;If you include the FONT clause but omit the font size <span class="parameter">expN4</span>, a 10-point font is used.<br />
<br />
&nbsp;If the FONT clause is omitted and the spinner is placed in the main FoxPro window, the main FoxPro window font is used. If the FONT clause is omitted and the spinner is placed in a user-defined window, the user-defined window font is used.  <br />
<br />
&nbsp;If the font you specify is not available, a font with similar font characteristics is substituted.<br />
<br />
STYLE <span class="parameter">expC4</span><br />
&nbsp;In FoxPro for Windows and FoxPro for Macintosh, include the STYLE clause to specify a font style for the spinner. If the font style you specify is not available, a font style with similar characteristics is substituted.<br />
<br />
The font style is specified with <span class="parameter">expC4</span>. If the STYLE clause is omitted, the standard font style is used.<br />
<br />
&nbsp;Character&nbsp;Font Style<br />
&nbsp;---------&nbsp;----------<br />
&nbsp;<br />
&nbsp;&nbsp;B&nbsp;&nbsp;Bold<br />
<br />
&nbsp;&nbsp;C&nbsp;&nbsp;Condense*<br />
<br />
&nbsp;&nbsp;E&nbsp;&nbsp;Extend*<br />
<br />
&nbsp;&nbsp;I&nbsp;&nbsp;Italic<br />
<br />
&nbsp;&nbsp;N&nbsp;&nbsp;Normal<br />
<br />
&nbsp;&nbsp;O&nbsp;&nbsp;Outline<br />
<br />
&nbsp;&nbsp;Q&nbsp;&nbsp;Opaque<br />
<br />
&nbsp;&nbsp;S&nbsp;&nbsp;Shadow<br />
<br />
&nbsp;&nbsp;-&nbsp;&nbsp;Strikeout*<br />
<br />
&nbsp;&nbsp;T&nbsp;&nbsp;Transparent<br />
<br />
&nbsp;&nbsp;U&nbsp;&nbsp;Underline<br />
<br />
&nbsp;* The Condense and Extend styles are only available in FoxPro for Macintosh. The Strikeout style is only available in FoxPro for Windows.<br />
<br />
&nbsp;You can include more than one character to specify a combination of font styles. For example, the following command displays the text in the spinner in Bold Italic:<br />
<br />
&nbsp;@ 2, 2 GET mchoice SPINNER 1, 1, 10 DEFAULT 3 STYLE 'BI'<br />
<br />
DEFAULT <span class="parameter">expN5</span><br />
&nbsp;When you exit a spinner, the value in the spinner is saved to the memory variable, array element or field you specify. If you specify a memory variable that doesn't exist, it is automatically created and initialized to <span class="parameter">expN5</span> if you include DEFAULT. However, an array element isn't created if you specify an array element in a DEFAULT clause. The DEFAULT clause is ignored if the memory variable already exists or you specify a field.<br />
<br />
&nbsp;-------------------------------<br />
&nbsp;Note - If the DEFAULT clause isn't included and <span class="parameter">memvar</span> doesn't exist, the error message "Variable not found" appears.<br />
&nbsp;-------------------------------<br />
<br />
SIZE <span class="parameter">expN6</span>, <span class="parameter">expN7</span><br />
&nbsp;The SIZE <span class="parameter">expN6</span> expression specifies the height of the spinner. The height of the spinner is a multiple of the height of the current font or the font you specify when you create the spinner. For example, if <span class="parameter">expN6</span> is 2, the height of the spinner is twice the height of the current font or the font you specify.<br />
<br />
&nbsp;The numeric expression <span class="parameter">expN7</span> specifies the width of the spinner. The width of the spinner is a multiple of the average width of a letter in the current font or the font you specify when you create the spinner. For example, if <span class="parameter">expN7</span> is 2, the width of the spinner is twice the width of the average width of a letter in the current font or the font you specify.<br />
<br />
&nbsp;The spinner font determines the size of the spinner. The spinner font is specified with the FONT clause. If the FONT clause is omitted, the spinner uses the font of its parent window (the main FoxPro window or a user-defined window). <br />
<br />
ENABLE | DISABLE<br />
&nbsp;Spinners are enabled when READ or READ CYCLE is issued. You can prevent a spinner from being selected by including DISABLE. The spinner is disabled when READ or READ CYCLE is issued.<br />
<br />
&nbsp;Disabled spinners cannot be selected and are displayed in the disabled colors. Use SHOW GET ENABLE to enable a disabled spinner. <br />
<br />
MESSAGE <span class="parameter">expC5</span><br />
&nbsp;The optional MESSAGE clause character expression <span class="parameter">expC5</span> appears when the spinner is selected. The message is placed in the graphics-based status bar. If the graphics-based status bar has been turned off with SET STATUS BAR OFF, the message is placed on the last line of the main FoxPro window.<br />
<br />
RANGE [<span class="parameter">expN8</span>] [, <span class="parameter">expN9</span>] <br />
&nbsp;Use the RANGE clause to specify a range of acceptable spinner values. If the value entered in the spinner text box isn't within the specified range, a message showing the correct range appears. To override the default range message, create a routine using ON READERROR.<br />
<br />
&nbsp;The lower boundary of the range is specified with <span class="parameter">expN8</span>, the upper boundary with <span class="parameter">expN9</span>. Either <span class="parameter">expN8</span> or <span class="parameter">expN9</span> can be omitted, but not both. If one bound is omitted, that end of the range isn't checked. <br />
<br />
&nbsp;The range isn't checked if you press Enter without changing the initial spinner value.<br />
<br />
VALID <span class="parameter">expL1</span> | <span class="parameter">expN10</span> [ERROR <span class="parameter">expC6</span>] <br />
&nbsp;You can include an optional VALID expression <span class="parameter">expL1</span> or <span class="parameter">expN10</span> that is evaluated when you attempt to exit the spinner.<br />
<br />
&nbsp;-------------------------------<br />
&nbsp;Note - Unlike the RANGE check, the VALID check is always performed when you attempt to exit the spinner, unless you exit by pressing Esc. The RANGE check is only performed when a change is made to the initial spinner value.<br />
&nbsp;-------------------------------<br />
<br />
&nbsp;Typically, <span class="parameter">expL1</span> or <span class="parameter">expN10</span> is a user-defined function. With a user-defined function you can select, enable or disable other objects, open a Browse window, open another data-entry screen or move to a new record. CLEAR READ can be included in the user-defined function to terminate the READ.<br />
<br />
&nbsp;<span class="parameter">expL1</span><br />
&nbsp;&nbsp;If <span class="parameter">expL1</span> evaluates to a logical true (.T.), the value in the spinner is considered correct and the spinner is exited. <br />
<br />
&nbsp;If <span class="parameter">expL1</span> evaluates false (.F.), the value entered in the spinner is considered incorrect and the spinner remains the active control. A message appears in the graphics-based status bar directing you to reenter the data after pressing the Spacebar. <br />
<br />
&nbsp;<span class="parameter">expN10</span><br />
<br />
&nbsp;A VALID clause that includes a numeric expression is used to specify which object is activated after a spinner is chosen. Objects include @ ... GET input fields, check boxes, lists, popups, spinners, text-editing regions and each individual button in a set of push, radio and invisible buttons.<br />
<br />
&nbsp;&nbsp;When <span class="parameter">expN10</span> = 0, the spinner remains the active object and the MESSAGE <span class="parameter">expC5</span> and ERROR <span class="parameter">expC6</span> messages are suppressed. A special error message routine can be written as part of a user-defined function called by the VALID clause.<br />
<br />
&nbsp;&nbsp;When <span class="parameter">expN10</span> is positive, <span class="parameter">expN10</span> specifies the number of objects to advance. For example, when the spinner is selected and VALID returns 1, the next object is activated. If <span class="parameter">expN10</span> is greater than the number of remaining objects, the READ is terminated (unless READ CYCLE is issued to activate the objects).<br />
<br />
&nbsp;&nbsp;When <span class="parameter">expN10</span> is negative, <span class="parameter">expN10</span> specifies the number of objects to move back. For example, when the spinner is selected and VALID returns -1, the previous object is activated. If <span class="parameter">expN10</span> moves back past the first object, the READ is terminated (unless READ CYCLE is issued to activate the objects).<br />
<br />
ERROR <span class="parameter">expC6</span><br />
&nbsp;The ERROR clause lets you specify a custom error message that appears when the VALID clause evaluates to false (.F.). <span class="parameter">expC6</span> appears in place of the default error message.<br />
<br />
WHEN <span class="parameter">expL2</span><br />
&nbsp;The optional WHEN clause allows or prohibits the selection of a spinner based on the logical value of <span class="parameter">expL2</span>, which must evaluate to a logical true (.T.) before the spinner can be selected. If <span class="parameter">expL2</span> evaluates to a logical false (.F.), the spinner cannot be selected and is skipped over if placed between other objects.<br />
<br />
COLOR SCHEME <span class="parameter">expN11</span> | COLOR <span class="parameter">color pair list</span><br />
&nbsp;If you do not include a COLOR clause, spinner colors are determined by the color scheme for the main FoxPro window; if a spinner is placed in a user-defined window, the window's color scheme determines the spinner's colors. <br />
<br />
&nbsp;The colors of a spinner can be specified by including the number of an existing color scheme in the COLOR SCHEME clause or a set of color pairs in the COLOR clause. <br />
<br />
&nbsp;A color scheme is a set of 10 predefined color pairs. The color pairs in a color scheme can be changed with SET COLOR OF SCHEME.<br />
<br />
&nbsp;A color pair is a set of two letters separated by a forward slash. The first letter specifies the foreground color and the second letter specifies the background color.<br />
<br />
&nbsp;For example, this color pair specifies a red foreground on a white background:<br />
<br />
&nbsp;R/W<br />
<br />
&nbsp;For a list of colors and their corresponding color letters, see SET COLOR Commands Overview or Color Table by Color Pair.<br />
<br />
&nbsp;A color pair can also be specified with a set of six RGB (Red Green Blue) color values separated by commas. The first three color values specify the foreground color and the second three color values specify the background color. The color values can range from 0 through 255. <br />
<br />
&nbsp;The R/W color pair in the example above can also be specified with this RGB color pair:<br />
<br />
&nbsp;RGB(255,0,0,255,255,255)<br />
<br />
	<h1 class="heading">
	<span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1>
	<div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
<p><br />
@ ... GET Spinners is supported in FoxPro for Windows and FoxPro for Macintosh.<br />
<br />
A spinner is a control that lets you "spin" through a set of numeric values displayed in a text box.<br />
<br />
If you use the Screen Builder to create your data-entry screens, you might not have to use this command at all. The Screen Builder automatically generates the commands that create spinners. <br />
<br />
Clicking the up and down arrows changes the numeric value. You can also enter a value directly into the spinner text box. When the value you want appears in the text box, press Enter or Tab to move to the next object.<br />
<br />
Using the spinner syntax in FoxPro for MS-DOS creates a numeric @ ... GET editing region. You must enter a numeric value into the editing region with the keyboard. The increment value (<span class="parameter">expN1</span>), the lower and upper limit values (<span class="parameter">expN2</span>, <span class="parameter">expN3</span>) and the FONT and STYLE clauses are ignored.<br />
<br />
</p>
</div>
<!-- VFPX FPW2.6 end -->
<h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1>
<div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;">
<!-- VFPX FPW2.6 Footer begin -->
<h4 class="subHeading">Other Resources</h4>
<span class="linkTerms"><a href="/html/672125e7-29a8-4d49-b89d-de87f4db5f79.htm">Backward-Compatible Language Elements</a><img class="vfpxmark" src="../local/vfpXmark.gif"/></span><br />
<span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br />
<br />
<!-- VFPX FPW2.6 Footer end -->
</div>
</div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="@ ... GET - Spinners Command">
<param name="ALink Name" value="@ ... GET - Spinners">
</OBJECT>
