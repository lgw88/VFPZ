<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>CommandClauses Property</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">CommandClauses Property</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Provides a list of the options specified for a <b>REPORT FORM</b> or <b>LABEL</b> command.</p>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
ReportListener.CommandClauses</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>An object of <b>Empty</b> class, during or after the execution of a <b>REPORT FORM</b> or <b>LABEL</b> command.  </p>
      <p>The default value when you first create an instance of the ReportListener object is null (.NULL.)</p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Applies To: <span class="linkTerms"><a href="/html/5709df40-166a-439b-8d9a-9504c1f631c1.htm">ReportListener Object</a></span>.</p>
      <p>The Report Engine provides a CommandClauses object to the ReportListener during a report run, so the ReportListener can take action based on any options you specified on the command.  This object is similar to the CommandClauses object that the Report Designer provides to the Report Builder Application during a design session.  See <span class="linkTerms"><a href="/html/3c88c403-7559-4001-9cae-3e2ad5f39090.htm">Understanding Report Builder Events</a></span> for more information.</p>
      <p>Not every member of the CommandClauses object for ReportListeners exactly matches a REPORT FORM command keyword, and not all members are available for the same period of time.  For example, the RecordTotal member is provided as a convenience to ReportListeners by the Engine when the Engine evaluates the <b>REPORT FORM</b> scope. This evaluation occurs between the LoadReport and BeforeReport event, so you cannot use RecordTotal during LoadReport.</p>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Tip </th></tr><tr><td>
        <p>You can use the <span class="linkTerms"><a href="/html/4f9bb713-9055-4778-9649-a3cf64216b05.htm">ReportListener Debug Foundation Class</a></span> to compare the CommandClauses members during the LoadReport and BeforeReport events.</p>
      </td></tr></table></div>
      <p>The following table lists the CommandClauses members and discusses their contents and availability.  Unless otherwise specified, the member and correct value is available from LoadReport through UnloadReport during a report run.  Also, unless otherwise specified, neither the Report Engine nor the ReportListener base class uses these values; they are provided for the use of code in classes derived from ReportListener.</p>
      <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
        <p>All references to <b>REPORT FORM</b> commands should be understood as referring equally to <b>LABEL</b> commands, unless explicitly mentioned.</p>
      </td></tr></table></div>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              
                <b>CommandClauses member</b>
              
            </th>
            <th>
              
                <b>Remarks</b>
              
            </th>
          </tr><tr>
          <td>
            <p>.ASCII</p>
          </td>
          <td>
            <p>Logical value, indicates whether the ASCII keyword appeared on the <b>REPORT FORM</b> command. </p>
            <p>
              <b>ASCII</b> is not supported by the ReportListener baseclass, and the keyword is ignored by default.  However, your derived class can choose to take action based on this keyword.</p>
          </td>
        </tr><tr>
          <td>
            <p>.DE_NAME</p>
          </td>
          <td>
            <p>Character data value, represents the <b>NAME</b> clause of the <b>REPORT FORM</b> command.  Although the value of .DE_NAME is correct from LoadReport on, the DataEnvironment reference is not available until BeforeReport.</p>
            <p>This value is always present, providing the name of the object reference to the report's DataEnvironment, whether or not you specified <b>NAME</b> on the command. As with <b>DO FORM</b>, Visual FoxPro provides a default public variable with the same name as the report or label file when you do not specify <b>NAME</b>.</p>
          </td>
        </tr><tr>
          <td>
            <p>.ENVIRONMENT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>ENVIRONMENT</b> keyword appeared on the REPORT FORM command.  </p>
            <p>This keyword is not often used on Visual FoxPro report runs; it is allowed for backward compatibility.  You can use the reference specified in .DE_NAME to check the AutoOpenTables property of the DataEnvironment, instead.</p>
          </td>
        </tr><tr>
          <td>
            <p>.FILE</p>
          </td>
          <td>
            <p>Character data type value, provides the fully-pathed name of the report or label file (frx or lbx).</p>
          </td>
        </tr><tr>
          <td>
            <p>.HEADING</p>
          </td>
          <td>
            <p>Character data type, providing the contents of the <b>HEADING</b> text if you use the <b>HEADING</b> &lt;<span class="parameter">cText</span>&gt;<span class="parameter"> </span>clause on the <b>REPORT FORM</b> command.</p>
          </td>
        </tr><tr>
          <td>
            <p>.INSCREEN</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>REPORT FORM</b> command included the <b>IN SCREEN</b> clause.</p>
          </td>
        </tr><tr>
          <td>
            <p>.INWINDOW </p>
          </td>
          <td>
            <p>Character data type, provides the name of the window if you used the <b>IN WINDOW</b> &lt;<span class="parameter">cText</span>&gt; on the <b>REPORT FORM</b> command.  This value is an empty string if you do not use the <b>IN WINDOW</b> clause.</p>
          </td>
        </tr><tr>
          <td>
            <p>.ISDESIGNERLOADED</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>REPORT FORM</b> command was invoked during a Report Designer or Label Designer session.</p>
          </td>
        </tr><tr>
          <td>
            <p>.ISDESIGNERPROTECTED</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>REPORT FORM</b> command was invoked with the <b>PROTECTED</b> keyword during a Report Designer or Label Designer session.</p>
          </td>
        </tr><tr>
          <td>
            <p>.ISREPORT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the command was <b>REPORT FORM</b> <code>(.T.</code>) or <b>LABEL</b> (<code>.F.</code>).</p>
          </td>
        </tr><tr>
          <td>
            <p>.NOCONSOLE</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NOCONSOLE</b> keyword appeared on the <b>REPORT FORM</b> command. </p>
            <p>
              <b>NOCONSOLE</b> is not directly supported by the ReportListener baseclass, because the object-assisted output is not echoed to the current Visual FoxPro output window.  However, your derived class can choose to take action based on this keyword.  For example, you could draw the output to an output window, or provide a text version of the report contents, during the report run, but omit this action when the command included <b>NOCONSOLE</b>.</p>
          </td>
        </tr><tr>
          <td>
            <p>.NODIALOG</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NODIALOG</b> keyword appeared on the <b>REPORT FORM</b> command. </p>
            <p>The ReportListener baseclass supports <b>NODIALOG</b> by temporarily adjusting its QuietMode property value for the duration of the report run.  See <span class="linkTerms"><a href="/html/2e63fc3d-36e2-4f7d-a689-c31062e5dd27.htm">QuietMode Property</a></span> for more information.</p>
          </td>
        </tr><tr>
          <td>
            <p>.NOEJECT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NOEJECT</b> keyword appeared on the <b>REPORT FORM</b> command. </p>
          </td>
        </tr><tr>
          <td>
            <p>.NOPAGEEJECT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NOPAGEEJECT</b> keyword appeared on the <b>REPORT FORM</b> command.</p>
            <p>The ReportListener baseclass provides more functionality than non-object-assisted Visual FoxPro reporting when you use <b>NOPAGEEJECT</b>. This property provides the ability to chain reports when you set the ReportListener's ListenerType property to the value <code>1</code> (preview).  You can use it to chain reports in other report results you create.  The <span class="linkTerms"><a href="/html/ad251059-3de1-4928-992c-ddb8be50fce8.htm">ReportListener Base Foundation Class</a></span> topic provides an example of two report runs being added to a single XML output document, using the <b>NOPAGEJECT</b> keyword.</p>
          </td>
        </tr><tr>
          <td>
            <p>.NORESET</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NORESET</b> keyword appeared on the <b>REPORT FORM</b> command.</p>
          </td>
        </tr><tr>
          <td>
            <p>.NOWAIT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>NOWAIT</b> keyword appeared on the <b>REPORT FORM</b> command.</p>
            <p>The ReportListener base class uses this value to evaluate how to call the Show method of the Preview Container.  See <span class="linkTerms"><a href="/html/66975043-814c-4886-901c-53d3924ca1bb.htm">The Preview Container API</a></span> for more information. </p>
          </td>
        </tr><tr>
          <td>
            <p>.OFF</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>OFF</b> keyword appeared on the <b>REPORT FORM</b> command. </p>
            <p>This keyword was not previously documented for the <b>REPORT FORM</b> command.  It serves the same function as <b>NOCONSOLE</b> in the ReportListener baseclass.  Your derived classes can opt to treat it the same way as <b>NOCONSOLE</b> or differently. </p>
          </td>
        </tr><tr>
          <td>
            <p>.OUTPUTTO</p>
          </td>
          <td>
            <p>Integer value, representing the various possibilities of the <b>TO</b> clause, which can be either <b>TO PRINT</b> or <b>TO [FILE] &lt;</b><span class="parameter">Filename</span><b>&gt;</b>.  If OUTPUTTO = <code>1</code>, the <b>TO</b> clause indicates that output goes to the printer.  If <b>OUTPUTTO</b> = <code>2</code>, the <b>TO</b> clause indicates that output goes to a file.  In the latter case, the CommandClauses.TOFILE member provides the filename.  </p>
            <p>If there was no <b>TO</b> clause on the REPORT FORM command, this member has the value <code>0</code>.</p>
            <p>You can adjust the <b>OUTPUTTO</b> and <b>TOFILE</b> values dynamically in the LoadReport event or when choosing to print from preview, as described in the <b>PROMPT</b> entry below.  Your changes to these values are respected when the ReportListener begins its print run. </p>
          </td>
        </tr><tr>
          <td>
            <p>.PDSETUP</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>PDSETUP</b> keyword appeared on the <b>REPORT FORM</b> command. As with other backward compatibility clauses on the REPORT FORM command, your derived classes are free to use this value for any purpose.</p>
          </td>
        </tr><tr>
          <td>
            <p>.PLAIN</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>PLAIN</b> keyword appeared on the <b>REPORT FORM</b> command.</p>
          </td>
        </tr><tr>
          <td>
            <p>.PREVIEW</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>PREVIEW</b> keyword appeared on the <b>REPORT FORM</b> command.</p>
          </td>
        </tr><tr>
          <td>
            <p>.PRINTPAGECURRENT</p>
          </td>
          <td>
            <p>Integer value, defaults to <code>0</code>, provides a way for a PreviewContainer to give information to a ReportListener about what page was currently displayed when the PreviewContainer invoked the ReportListener's OnPreviewClose method.  </p>
            <p>When the PreviewContainer uses OnPreviewClose's argument of <code>.T.</code> to request printing after preview, and if .PRINTPAGECURRENT is not <code>0</code>, the ReportListener can enable the "Current Page" feature in any dialog preceding printing, such as the native <b>PROMPT</b> dialog.  </p>
            <p>See <span class="linkTerms"><a href="/html/481b543d-7a57-4a98-91ed-96ec3bac29ca.htm">OnPreviewClose Method</a></span> for more information.</p>
          </td>
        </tr><tr>
          <td>
            <p>.PRINTRANGEFROM, .PRINTRANGETO</p>
          </td>
          <td>
            <p>Integer values, work together to indicate a subset of the output page range when printing after preview.   .PRINTRANGEFROM defaults to <code>1</code> and .PRINTRANGETO defaults to <code>-1</code>.  The maximum print range is always <code>1</code> to ReportListener.OutputPageCount.  See <span class="linkTerms"><a href="/html/03726feb-d818-4008-83b7-74f6662b1578.htm">OutputPageCount Property</a></span> for more information.</p>
          </td>
        </tr><tr>
          <td>
            <p>.PROMPT</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>PROMPT</b> keyword appeared on the <b>REPORT FORM</b> command. The ReportDesigner adds a PROMPT clause when you choose to preview during a design session.</p>
            <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" alt="Note" src="../local/note.gif"></img>Note </th></tr><tr><td>
              <p>You can adjust the .PROMPT member dynamically when previewing, for example in the OnPreviewClose(<code>.T.</code>) event.  The <code>.T.</code> argument to OnPreviewClause indicates that you wish to Print when the preview ends. You can also change this value in the LoadReport event. Your change to the value is respected when the ReportListener begins its print run. </p>
            </td></tr></table></div>
            <p>You can chain multiple reports together, using <b>NOPAGEEJECT</b>, and the various reports may not all have had different values for CommandClauses.PROMPT.  In this scenario, the only significant value for PROMPT the one on the last report in the chained set (the report without <b>NOPAGEEJECT</b>).</p>
          </td>
        </tr><tr>
          <td>
            <p>.RANGEFROM</p>
          </td>
          <td>
            <p>Integer value, indicates the first argument to the <b>RANGE</b> clause when you use this clause on the <b>REPORT FORM</b> command.  If you do not use the RANGE clause on your command, this member has the value <code>1</code>.  The value can change between the LoadReport event and BeforeReport event, based on changed made by a user from a <b>PROMPT</b> dialog.</p>
            <p>
              <b>RANGEFROM</b> and <b>RANGETO</b> are evaluated by the base class ReportListener when you call the <span class="linkTerms"><a href="/html/708514e4-041a-4db4-aa55-6935b110dfc6.htm">IncludePageInOutput Method</a></span>. </p>
          </td>
        </tr><tr>
          <td>
            <p>.RANGETO</p>
          </td>
          <td>
            <p>Integer value, indicates the second (optional) argument to the <b>RANGE</b> clause when you use this clause on the <b>REPORT FORM</b> command.  If you do not use the RANGE clause on your command, or if you do not specify its second argument, this member has the value -<code>1</code>. The value can change between the LoadReport event and BeforeReport event, based on changed made by a user from a <b>PROMPT</b> dialog.</p>
            <p>
              <b>RANGEFROM</b> and <b>RANGETO</b> are evaluated by the base class ReportListener when you call the <span class="linkTerms"><a href="/html/708514e4-041a-4db4-aa55-6935b110dfc6.htm">IncludePageInOutput Method</a></span>.</p>
          </td>
        </tr><tr>
          <td>
            <p>.RECORDTOTAL</p>
          </td>
          <td>
            <p>Integer value, indicates the full scope of records in the currently-selected alias that will be processed.  Scope is based on the <b>REPORT FORM</b> command clauses and any other limiting conditions you may have set (such as a <b>SET FILTER</b> command).</p>
            <p>This value is <code>0</code> in LoadReport and contains the correct value beginning in BeforeReport.  It is reset to <code>0</code> after UnloadReport.</p>
          </td>
        </tr><tr>
          <td>
            <p>.SAMPLE</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>SAMPLE</b> keyword appeared on the <b>LABEL</b> command. </p>
            <p>This keyword is not available for the <b>REPORT FORM</b> command.  Therefore, this value is always <code>.F.</code> unless you use the <b>LABEL</b> command. </p>
          </td>
        </tr><tr>
          <td>
            <p>.STARTDATASESSION</p>
          </td>
          <td>
            <p>Numeric value, indicates the data session in which you issued the <b>REPORT FORM</b> or <b>LABEL</b> command.  For more information, see <span class="linkTerms"><a href="/html/223a5d97-3d68-4e70-8bde-9c15b8f9ce62.htm">Understanding Visual FoxPro Object-Assisted Reporting</a></span>.</p>
          </td>
        </tr><tr>
          <td>
            <p>.SUMMARY</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>SUMMARY</b> keyword appeared on the <b>REPORT FORM</b> command.  This value is always <code>.F.</code> for a <b>LABEL</b> command; it is significant only to <b>REPORT FORM</b> commands.</p>
          </td>
        </tr><tr>
          <td>
            <p>.TOFILE</p>
          </td>
          <td>
            <p>Character data type, indicates the target output filename when you use the <b>TO [FILE] &lt;</b><span class="parameter">Filename</span><b>&gt;</b> clause on the <b>REPORT FORM</b> command.  You can adjust this member dynamically, as discussed above under OUTPUTTO.</p>
          </td>
        </tr><tr>
          <td>
            <p>.TOFILEADDITIVE</p>
          </td>
          <td>
            <p>Logical value, indicates whether the <b>ADDITIVE</b> keyword appeared on the <b>REPORT FORM</b> command as part of <b>TO [FILE] &lt;</b><span class="parameter">Filename</span><b>&gt; ASCII</b>. </p>
            <p>This keyword applies only to <b>ASCII</b> and, as such, is ignored by the ReportListener baseclass. </p>
          </td>
        </tr><tr>
          <td>
            <p>.WINDOW</p>
          </td>
          <td>
            <p>Character data type, provides the name of the window if you used the <b>WINDOW</b> &lt;<span class="parameter">cText</span>&gt; on the <b>REPORT FORM</b> command.  This value is an empty string if you do not use the <b>WINDOW</b> clause.</p>
          </td>
        </tr></table></div>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      
        <p xmlns="">The following example is taken from the <span class="linkTerms"><a href="/html/6ddf0bcf-901f-47b1-a2be-6ad8afaa1541.htm">ReportListener User Feedback Foundation Class</a></span>. The UpdateListener class uses its CommandClauses.FILE member to determine an appropriate caption for its feedback window, in cases where the user has not specified a value for the PrintJobName property.</p>
      
    </description>
    <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>IF EMPTY(THIS.PrintJobName)
   cName = PROPER(JUSTFNAME(THIS.CommandClauses.FILE))
ELSE
   cName = THIS.PrintJobName
ENDIF   
THIS.ThermForm.Caption = ;
   cName + ": " + OUTPUTCLASS_CANCEL_INSTRUCTIONS_LOC</pre></td></tr></table></span></div>
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/a713cbaf-16a7-4d6c-8478-3822006a1d69.htm">ReportListener Object Properties, Methods, and Events</a></span><br /><span class="linkTerms"><a href="/html/fdcc3a57-94e0-40f8-aea1-47931c4b8449.htm">REPORT FORM Command</a></span><br /><span class="linkTerms"><a href="/html/e713cf33-6b27-4bea-84c1-3cf7898cdd31.htm">Empty Class</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/ee3cb1dc-11b6-434d-8d4d-7a91daa5097a.htm">Properties (Visual FoxPro)</a></span><br /><span class="linkTerms"><a href="/html/6dcddc3f-9944-4ad8-be2f-003610af616a.htm">Language Reference (Visual FoxPro)</a></span><br /><span class="linkTerms"><a href="/html/e4d499d5-c520-42eb-ab32-d2531e784e84.htm">Extending Report Output Functionality</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="CommandClauses Property">
<param name="ALink Name" value="CommandClauses">
<param name="Alink Name" value="vfp.50000947">
</OBJECT>
