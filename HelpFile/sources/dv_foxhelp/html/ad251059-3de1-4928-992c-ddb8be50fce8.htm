<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>ReportListener Base Foundation Class</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">ReportListener Base Foundation Class</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>The _ReportListener class serves as the superclass for the other classes in _REPORTLISTENER.VCX, similar to the superclasses for other Visual FoxPro base classes available in _BASE.VCX. </p>
    <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
          <th>
            
              <b>Category</b>
            
          </th>
          <th>
            
              <b>Reporting</b>
            
          </th>
        </tr><tr>
        <td>
          <p>Default Catalog</p>
        </td>
        <td>
          <p>Visual FoxPro Catalog\Foundation Classes\Output\Report Listeners</p>
        </td>
      </tr><tr>
        <td>
          <p>Class</p>
        </td>
        <td>
          <p>_ReportListener</p>
        </td>
      </tr><tr>
        <td>
          <p>Base Class</p>
        </td>
        <td>
          <p>ReportListener</p>
        </td>
      </tr><tr>
        <td>
          <p>Class Library</p>
        </td>
        <td>
          <p>_REPORTLISTENER.vcx</p>
        </td>
      </tr><tr>
        <td>
          <p>Parent Class</p>
        </td>
        <td>
          <p>ReportListener (<span class="linkTerms"><a href="/html/5709df40-166a-439b-8d9a-9504c1f631c1.htm">ReportListener Object</a></span>)</p>
        </td>
      </tr></table></div>
  <h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>_ReportListener adds error handling similar to the _BASE classes and includes other core features specific to the responsibilities of ReportListener objects assisting the Report Engine during execution of a <b>REPORT FORM</b> or <b>LABEL FORM</b> command.  </p>
      <p>These responsibilities include:</p>
      <ul><li>
          <p>
            <b>DataSession handling</b>. Object-Assisted Reporting requires potential manipulation of several different datasessions.</p>
        </li><li>
          <p>
            <b>Assessment of report state</b>.  _ReportListener gives its descendant classes the ability to determine whether certain operations are safe to perform at a given moment.  For example, during a report run, it is not safe to switch between different printers.</p>
        </li><li>
          <p>
            <b>Chain of responsibility.</b>  _ReportListener implements a Chain of Responsibility pattern, also known as <i>successorship</i>, to allow multiple output formats during one report run.</p>
        </li><li>
          <p>
            <b>Management of multiple reports</b>.  You can use _ReportListener as an object oriented wrapper for a REPORT FORM command or a collection of REPORT FORM commands in a sequence.</p>
        </li></ul>
      <p>The following table lists public properties and methods added by this class to its parent class, ReportListener.</p>
      <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
            <th>
              
                <b>Properties and methods</b>
              
            </th>
            <th>
              
                <b>Description</b>
              
            </th>
          </tr><tr>
          <td>
            <p>addReport Method</p>
          </td>
          <td>
            <p>Adds to the class's collection of ReportFileNames, optionally associating REPORT FORM clauses and a ReportListener for the specified report. </p>
            <p>
              <b>Syntax:</b>
              <code> addReport(cFRXName [, cClauses[, toListener]]</code>)</p>
            <p>
              <b>Return Values:</b> None</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">cFRXName </span>provides the name of the report or label file to run.</p>
            <p>
              <span class="parameter">cClauses</span> provides the optional clauses for this report run, including scope, range, and windowing instructions.</p>
            <p>
              <span class="parameter">oListener</span> provides an optional reference to be added by _ReportListener when executing this specific report.</p>
          </td>
        </tr><tr>
          <td>
            <p>appName Property</p>
          </td>
          <td>
            <p>Holds an application name string for use in user feedback. </p>
            <p>
              <b>Default </b>
              <code>"VFP Report Listener"</code>
            </p>
            <p>
              <b>Remarks</b>:  See REPORTLISTENERS_LOCS.H, which provides the localizable value to which this property is set in the class' <b>Init</b> method.  Descendent classes in _REPORTLISTENERS.vcx override this setting with additional #DEFINEd values in REPORTLISTENERS_LOCS.H.</p>
          </td>
        </tr><tr>
          <td>
            <p>clearErrors Method</p>
          </td>
          <td>
            <p>Resets the class's error status.</p>
            <p>
              <b>Syntax:</b>
              <code> clearErrors()</code>
            </p>
            <p>
              <b>Return Values:</b> None</p>
            <p>
              <b>Parameters: </b>
              <span class="parameter">None.</span>
            </p>
            <p>
              <b>Remarks: </b>Some subclasses may not function normally after a report run fails. This method is useful for re-setting the state of _ReportListener before a subsequent report run.</p>
          </td>
        </tr><tr>
          <td>
            <p>getLastErrorMessage Method</p>
          </td>
          <td>
            <p>Provides information about the last error that occurred.</p>
            <p>
              <b>Syntax:</b>
              <code> getLastErrorMessage()</code>
            </p>
            <p>
              <b>Return Values:</b> cErrorMessage</p>
            <p>
              <b>Parameters: </b>
              <span class="parameter">None.</span>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>isSuccessor Property</p>
          </td>
          <td>
            <p>Indicates whether this ReportListener is chained to one or more others to provide output during a report run. When .T., this ReportListener was not the object referenced in the REPORT FORM command OBJECT clauses. </p>
            <p>
              <b>Default </b>
              <code>.F.</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>lIgnoreErrors Property</p>
          </td>
          <td>
            <p>Provides a flag to determine how this class handles activities subsequent to an error.</p>
            <p>
              <b>Default </b>
              <code>.F.</code>
            </p>
            <p>
              <b>Remarks:</b>   This property ensures that _ReportListener and its descendant classes follow the _BASE error handling model.</p>
          </td>
        </tr><tr>
          <td>
            <p>prepareErrorMessage Method</p>
          </td>
          <td>
            <p>Organizes common error information values (nError, cMethod, nLine, cName, cMessage, cCodeLine) into a coherent string for presentation to the user.</p>
            <p>
              <b>Syntax:</b>
              <code> prepareErrorMessage(nError, cMethod, nLine, cName, cMessage, cCodeLine)</code>
            </p>
            <p>
              <b>Return Values:</b> cErrorMessage</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>You can derive all the parameters to this method except <span class="parameter">cName</span> from native Visual FoxPro error-handling functions or the equivalent properties of an object of <span class="linkTerms"><a href="/html/e819e843-2d98-4bf8-8680-8526733cb38b.htm">Exception Class (Visual FoxPro)</a></span>.  The cName parameter represents the name you would like to present in the error message string as identifying your application. </p>
            <p>For example:</p>
            <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>LOCAL oListener, oError
oListener = ;
NEWOBJECT("_ReportListener", ;
   "_REPORTLISTENER")
TRY
 * … run some commands here
CATCH TO oError
   IF NOT (ISNULL(oError))
      oListener.DoMessage(;
        oListener.PrepareErrorMessage(;
            oListener.ErrorNo, ;
            oListener.Procedure, ;
            oListener.LineNo, ;
            "My application", ;
            oError.Message, ;
            oError.LineContents))
   ENDIF
FINALLY
   * more commands here
ENDTRY</pre></td></tr></table></span></div>
          </td>
        </tr><tr>
          <td>
            <p>removeReports Method</p>
          </td>
          <td>
            <p>Removes report filenames as well as associated clauses and ReportListener references from this class's various collections.</p>
            <p>
              <b>Syntax:</b>
              <code> removeReports()</code>
            </p>
            <p>
              <b>Return Values:</b> None</p>
            <p>
              <b>Parameters: </b>
              <span class="parameter">None.</span>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>reportUsesPrivateDataSession Property</p>
          </td>
          <td>
            <p>Provides a flag to indicate whether this report shares the data session from which it was executed or maintains a private data session.</p>
            <p>
              <b>Default </b>
              <code>.F.</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>runReports Method</p>
          </td>
          <td>
            <p>Executes a series of REPORT FORM commands according to the instructions in the internal ReportFileNames, ReportClauses, and ReportListeners collections. Optionally clears collection after run and issues the REPORT FORM commands without OBJECT references. <b>Syntax:</b>.<code>runReports([lRemoveReportsAfterRun[, lOmitListenerReferences]])</code></p>
            <p>
              <b>Return Values:</b> None</p>
            <p>
              <b>Parameters: </b>
            </p>
            <p>
              <span class="parameter">lRemoveReportsAfterRun </span>determines whether the class's internal collection of reports is cleared after the runReports method executes its sequence of <b>REPORT FORM</b> commands.</p>
            <p>
              <span class="parameter">lOmitReferences</span> determines whether the method includes OBJECT references on each <b>REPORT FORM</b> command.</p>
            <p>
              <b>Remarks:  </b>Specifying <code>.T.</code> as the second argument to this method takes precedence over any ReportListener reference the method might otherwise add to your REPORT FORM commands unilaterally.  However, it does not necessarily mean your reports will run without ReportListener assistance.  If you have used the command <code>SET REPORTBEHAVIOR 90</code> before using this method, the Report Engine will still get a reference to a ReportListener of the appropriate type from Report Output Application and add it to your <b>REPORT FORM</b> commands.  You may also have specified the <code>OBJECT</code> clause for one or more <b>REPORT FORM</b> commands when you added these commands into _ReportListener's collection of reports to run.</p>
            <p>If you did not specify <span class="parameter">tlOmitReferences</span> as <code>.T.</code>, _ReportListener checks each <b>REPORT FORM</b> command before executing it to see if you have already included an <b>OBJECT</b> clause in your command.  If you have done so, your <b>OBJECT</b> clause takes effect; ReportListener you have specified will be the object reference used for this command.  </p>
            <p>If you have not included an <b>OBJECT</b> clause, you may have stored in its internal ReportListener collection when you added this <b>REPORT FORM</b> command to its internal collection.  _ReportListener adds this reference to your <b>REPORT FORM</b> command if necessary. </p>
            <p>If you have not specified a ReportListener when adding the report, and have not specified <span class="parameter">lOmitReferences</span> as <code>.T.</code>,<code> </code>_ReportListener adds a reference to itself in an <b>OBJECT</b> &lt;ref&gt; clause in the <b>REPORT FORM</b> command.</p>
          </td>
        </tr><tr>
          <td>
            <p>setSuccessorDynamicProperties Method</p>
          </td>
          <td>
            <p>Provides a hook for the class to share information changed by the Report Engine with a succession of ReportListeners during a report run.</p>
            <p>
              <b>Syntax:</b>
              <code> setSuccessorDynamicProperties()</code>
            </p>
            <p>
              <b>Return Values:</b> None</p>
            <p>
              <b>Parameters: </b>
              <span class="parameter">None.</span>
            </p>
            <p>
              <b>Remarks:</b> Abstract at this class level.</p>
          </td>
        </tr><tr>
          <td>
            <p>sharedGdiplusGraphics Property</p>
          </td>
          <td>
            <p>Provides a read/write copy of the Engine's GDIPlusGraphics handle which the ReportListener can share with a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>sharedOutputPageCount Property</p>
          </td>
          <td>
            <p>Provides a read/write copy of the Engine's OutputPageCount property which the ReportListener can share with a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>sharedPageHeight Property</p>
          </td>
          <td>
            <p>Shares information gathered by the GetPageHeight method with other ReportListeners linked in a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>sharedPageNo Property</p>
          </td>
          <td>
            <p>Provides a read/write copy of the Engine's PageNo property which the ReportListener can share with a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>sharedPageTotal Property</p>
          </td>
          <td>
            <p>Provides a read/write copy of the Engine's PageTotal property which the ReportListener can share with a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>sharedPageWidth Property</p>
          </td>
          <td>
            <p>Shares information gathered by the GetPageWidth method with other ReportListeners linked in a succession chain.</p>
            <p>
              <b>Default </b>
              <code>0</code>
            </p>
          </td>
        </tr><tr>
          <td>
            <p>successor Property</p>
          </td>
          <td>
            <p>Stores an object reference to the next ReportListener in a succession chain.</p>
            <p>
              <b>Default </b>
              <code>.NULL.</code>
            </p>
            <p>
              <b>Remarks:</b> See the topic on UpdateListener (<span class="linkTerms"><a href="/html/6ddf0bcf-901f-47b1-a2be-6ad8afaa1541.htm">ReportListener User Feedback Foundation Class</a></span>) for an example of ReportListeners in a succession chain.</p>
          </td>
        </tr></table></div>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      
        <p xmlns="">The following code example shows how you can use _ReportListener to manage a collection of REPORT FORM commands.  XmlListener is a subclass of _ReportListener, so it can use this capability.  In this example, you chain two reports together to generate a single XML document.</p>
      
    </description>
    <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>LOCAL ox
ox = NEWOBJECT("XmlListener","_ReportListener")
ox.AddReport(GETFILE("frx"),"NOPAGEEJECT")
ox.AddReport(GETFILE("frx")
ox.RunReports(.T.)</pre></td></tr></table></span></div>
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/bc9c384e-280d-4c04-abe0-7f7c7c5fea4f.htm">Visual FoxPro Foundation Classes A-Z</a></span><br /><span class="linkTerms"><a href="/html/5709df40-166a-439b-8d9a-9504c1f631c1.htm">ReportListener Object</a></span><br /><h4 class="subHeading">Concepts</h4><span class="linkTerms"><a href="/html/005682e4-5892-4e65-bcc3-2b64213e3fcc.htm">Guidelines for Using Visual FoxPro Foundation Classes</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="ReportListener Base Foundation Class">
</OBJECT>
