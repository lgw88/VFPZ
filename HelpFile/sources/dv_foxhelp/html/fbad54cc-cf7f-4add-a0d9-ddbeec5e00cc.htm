<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>Index File Structure (.idx)</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">Index File Structure (.idx)</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									</td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>Index files contain one header record and one or many node records. The header record contains information about the root node, the current file size, the length of the key, index options and signature, and printable ASCII representations of the key1 and FOR expressions. The header record starts at file position zero.</p>
    <p>The remaining node records contain an attribute, number of keys present, and pointers to nodes on the left and right (on the same level) of the current node. They also contain a group of characters encompassing the key value and either a pointer to a lower level node or an actual table record number. The size of each record that is output to a file is 512 bytes.</p>
    <div class="labelheading"><b>Index Header Record</b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
          <th>
            Byte offset
          </th>
          <th>
            Description
          </th>
        </tr><tr>
        <td>
          <p>00 – 03</p>
        </td>
        <td>
          <p>Pointer to the root node</p>
        </td>
      </tr><tr>
        <td>
          <p>04 – 07</p>
        </td>
        <td>
          <p>Pointer to the free node list ( -1 if not present)</p>
        </td>
      </tr><tr>
        <td>
          <p>08 – 11</p>
        </td>
        <td>
          <p>Pointer to the end of file (file size)</p>
        </td>
      </tr><tr>
        <td>
          <p>12 – 13</p>
        </td>
        <td>
          <p>Length of key</p>
        </td>
      </tr><tr>
        <td>
          <p>14 </p>
        </td>
        <td>
          <p>Index options (any of the following numeric values or their sums):
1 – a unique index 
8 – index has FOR clause</p>
        </td>
      </tr><tr>
        <td>
          <p>15</p>
        </td>
        <td>
          <p>Index signature (for future use)</p>
        </td>
      </tr><tr>
        <td>
          <p>16 – 235</p>
        </td>
        <td>
          <p>Key expression (uncompiled; up to 220 characters)1,3</p>
        </td>
      </tr><tr>
        <td>
          <p>236 – 455</p>
        </td>
        <td>
          <p>FOR expression (uncompiled; up to 220 characters ending with a null value byte)</p>
        </td>
      </tr><tr>
        <td>
          <p>456 – 511</p>
        </td>
        <td>
          <p>Unused</p>
        </td>
      </tr></table></div>
    <div class="labelheading"><b>Index Node Record</b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
          <th>
            Byte offset
          </th>
          <th>
            Description
          </th>
        </tr><tr>
        <td>
          <p>00 – 01</p>
        </td>
        <td>
          <p>Node attributes (any of the following numeric values or their sums):
0 – index node 
1 – root node 
2 – leaf node</p>
        </td>
      </tr><tr>
        <td>
          <p>02 – 03</p>
        </td>
        <td>
          <p>Number of keys present (0, 1 or many)</p>
        </td>
      </tr><tr>
        <td>
          <p>04 – 07</p>
        </td>
        <td>
          <p>Pointer to the node directly to left of the current node (on same level; -1 if not present)</p>
        </td>
      </tr><tr>
        <td>
          <p>08 – 11</p>
        </td>
        <td>
          <p>Pointer to the node directly to right of the current node (on same level; -1 if not present)</p>
        </td>
      </tr><tr>
        <td>
          <p>12 – 511</p>
        </td>
        <td>
          <p>Up to 500 characters containing the key value for the length of the key with a four-byte hexadecimal number stored in normal left-to-right format:
If the node is a leaf (attribute = 02 or 03) then the four bytes contain an actual table number in hexadecimal format; otherwise, the 4 bytes contain an intra-index pointer.2</p>
          <p>The key/four-byte hexadecimal number combinations will occur the number of times indicated in bytes 02 – 03.</p>
        </td>
      </tr></table></div>
    <p>1 The type of the key is not stored in the index. It must be determined by the key expression.
2 Anything other than character strings, numbers used as key values, and the four-byte numbers in the leaf node are represented in reversed bytes (Intel 8086 format).
3 Numbers are a special case when used as a key. They are converted through the following algorithm so they can be sorted using the same ASCII collating sequence as characters:</p>
    <ul><li>
        <p>Convert the number to IEEE floating point format. For details, see <a href="/html/6e27027b-806b-4f96-b7e5-5f24af2901e0.htm">Visual FoxPro System Capacities</a>.</p>
      </li><li>
        <p>Swap the order of the bytes from Intel 8086 order to left-to-right order.</p>
      </li><li>
        <p>If the number was negative, take the logical complement of the number (swap all 64 bits, 1 to 0 and 0 to 1); otherwise, invert only the leftmost bit.</p>
      </li></ul>
  <h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0)" tabindex="0"><img id="sectionToggle0" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example of an Ordered Tree Structure</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style="display: none;">
      <p>Finding a key in the structure below requires searching a single path between the root and leaf nodes. Nodes at the lowest level are leaf nodes. Because the keys are sorted, all keys in the sub-tree are less than or equal to the parent node.</p>
      <img src="../local/Local_-1266761250_oh036.gif" alt="FoxPro Nodes"></img>
      <p>In the illustration above, the letters are used as the key values. Each key would also have a four-byte hexadecimal number. The numbers associated with the keys in the <i>leaf</i> nodes would be actual table numbers — all keys in other nodes would have intra-index pointers associated with them.</p>
      <p>Bytes 12-511 in the index node record could be viewed as follows:</p>
      <img src="../local/Local_-1266761249_oh037.gif" alt="FoxPro Key Values"></img>
      <p>The key value/hexadecimal number combination occurs in bytes 12 – 511 n times where n is the number of keys present.</p>
    </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/80436e86-f457-4d02-8362-47cf599182da.htm">Compact Index File Structure (.idx)</a></span><br /><span class="linkTerms"><a href="/html/c97ab80a-f978-4944-87bd-2f0dceb44227.htm">Compound Index File Structure (.cdx)</a></span><br /><span class="linkTerms"><a href="/html/465e7a94-51b7-4e0c-98f9-432864fe5bcc.htm">Table File Structure (.dbc, .dbf, .frx, .lbx, .mnx, .pjx, .scx, .vcx)</a></span><br /><span class="linkTerms"><a href="/html/b9fde125-b9df-4688-bae7-7ae28ebd99ee.htm">Table Structures of Table Files (.dbc, .frx, .lbx, .mnx, .pjx, .scx, .vcx)</a></span><br /><span class="linkTerms"><a href="/html/74f53aef-fd56-4f1a-a413-4f045922db21.htm">Memo File Structure (.FPT)</a></span><br /><span class="linkTerms"><a href="/html/73aa289e-ad48-42ef-9c1a-b177014ca607.htm">Macro File Format (.fky)</a></span><br /><span class="linkTerms"><a href="/html/71acd830-031d-40ee-bc2b-a8d9452d0efc.htm">File Extensions and File Types</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/c591bd07-e952-4330-b59b-135f0bef2926.htm">File Structures</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2017 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="Index File Structure (.idx)">
</OBJECT>
