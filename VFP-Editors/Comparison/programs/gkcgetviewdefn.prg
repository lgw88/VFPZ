**
FUNCTION GKCGetViewDefn
LPARAMETERS PCDBCNAME, PCVIEWNAME, PORETURN, PLGENERIC
LOCAL LNSOURCETYPE, LCCONNECTNAME, LCSQL, LCUPDATETYPE, LCWHERETYPE, LCFETCHMEMO, LCSHARECONNECTION, LCSENDUPDATES
LOCAL LCUSEMEMOSIZE, LCFETCHSIZE, LCMAXRECORDS, LCTABLES, LCPREPARED, LCCOMPAREMEMO, LCFETCHASNEEDED, LCPARAMS
LOCAL LLOFFLINE, LCALLOWSIMULFETCH, LCRULEEXPR, LCRULETEXT, LCCOMMENT, LCBATCHUPDATECOUNT, LCVIEWSCHEMA
LOCAL LCDBSETPROP, LOEXCEPTION, LCUSERMSG, LLOFFLINE, LCBATCHUPDCOUNT, LNOBJECTID, LCFLDDEFN, LNFLD
LOCAL LCFIELDALIAS, LCKEYFIELD, LCUPDATABLE, LCUPDATENAME, LCDELIMITER, LCPROPERTY, LCVIEWNAME, LLDBCOPENED
LOCAL LCRTNDEFN, LCDBCNAME, LCVIEWTYPE
LOCAL LCVIEWFLDS[1]
LCRTNDEFN = PCVIEWNAME
TRY
LLDBCOPENED = .F.
IF  .NOT. EMPTY(PCDBCNAME)
IF UPPER(DBC())<>UPPER(PCDBCNAME)
OPEN DATABASE (PCDBCNAME) SHARED
LLDBCOPENED = .T.
ENDIF
ENDIF
LNSOURCETYPE = DBGETPROP(PCVIEWNAME, 'View', 'SourceType')
LLOFFLINE = DBGETPROP(PCVIEWNAME, 'View', 'Offline')
LCCOMMENT = FSTRIPLINE(DBGETPROP(PCVIEWNAME, 'View', 'Comment'))
LCRULETEXT = FSTRIPLINE(DBGETPROP(PCVIEWNAME, "View", "RuleText"))
LCRULEEXPR = FSTRIPLINE(DBGETPROP(PCVIEWNAME, "View", "RuleExpression"))
LCSQL = FSTRIPLINE(ALLTRIM(DBGETPROP(PCVIEWNAME, 'View', 'SQL')))
LCCONNECTNAME = FSTRIPLINE(ALLTRIM(DBGETPROP(PCVIEWNAME, 'View', 'ConnectName')))
LCTABLES = FSTRIPLINE(ALLTRIM(DBGETPROP(PCVIEWNAME, 'View', 'Tables')))
LCPARAMS = FSTRIPLINE(ALLTRIM(DBGETPROP(PCVIEWNAME, 'View', 'ParameterList')))
LCUPDATETYPE = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'UpdateType'))
LCWHERETYPE = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'WhereType'))
LCFETCHMEMO = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'Fetchmemo'))
LCSHARECONNECTION = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'ShareConnection'))
LCSENDUPDATES = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'SendUpdates'))
LCUSEMEMOSIZE = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'UseMemoSize'))
LCFETCHSIZE = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'FetchSize'))
LCMAXRECORDS = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'MaxRecords'))
LCBATCHUPDCOUNT = TRANSFORM(DBGETPROP(PCVIEWNAME, 'View', 'BatchUpdateCount'))
LCALLOWSIMULFETCH = IIF(EMPTY(DBGETPROP(PCVIEWNAME, 'View', 'AllowSimultaneousFetch')), '.T.', '.F.')
LCPREPARED = IIF(EMPTY(DBGETPROP(PCVIEWNAME, 'View', 'Prepared')), '.F.', '.T.')
LCCOMPAREMEMO = IIF(EMPTY(DBGETPROP(PCVIEWNAME, 'View', 'CompareMemo')), '.F.', '.T.')
LCFETCHASNEEDED = IIF(EMPTY(DBGETPROP(PCVIEWNAME, 'View', 'FetchAsNeeded')), '.F.', '.T.')
LCVIEWSCHEMA = "******Schema Definition - "+PCVIEWNAME+CHR(13)+CHR(10)
IF PLGENERIC
LCVIEWNAME = "<<ViewName>>"
ELSE
LCVIEWNAME = PCVIEWNAME
ENDIF
LCVIEWSCHEMA = LCVIEWSCHEMA+"CREATE SQL VIEW '"+PCVIEWNAME+"'"
IF LNSOURCETYPE=1
LCVIEWTYPE = "Local"
ELSE
LCVIEWTYPE = "Remote"
LCVIEWSCHEMA = LCVIEWSCHEMA+" REMOTE"
IF  .NOT. EMPTY(LCCONNECTNAME)
LCVIEWSCHEMA = LCVIEWSCHEMA+" CONNECT '"+LCCONNECTNAME+"'"
ENDIF
ENDIF
LCVIEWSCHEMA = LCVIEWSCHEMA+" AS "+LCSQL+CHR(13)+CHR(10)
LCDBSETPROP = "DBSETPROP('"+LCVIEWNAME+"', 'View', "
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'UpdateType', "+LCUPDATETYPE+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'WhereType', "+LCWHERETYPE+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'FetchMemo', "+LCFETCHMEMO+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'SendUpdates', "+LCSENDUPDATES+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'UseMemoSize', "+LCUSEMEMOSIZE+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'FetchSize', "+LCFETCHSIZE+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'MaxRecords', "+LCMAXRECORDS+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Tables', '"+LCTABLES+"')"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Prepared', "+LCPREPARED+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'CompareMemo', "+LCCOMPAREMEMO+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'FetchAsNeeded', "+LCFETCHASNEEDED+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Comment', '"+LCCOMMENT+"')"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'BatchUpdateCount', "+LCBATCHUPDCOUNT+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'ShareConnection', "+LCSHARECONNECTION+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'AllowSimultaneousFetch', "+LCALLOWSIMULFETCH+")"+CHR(13)+CHR(10)
IF  .NOT. EMPTY(LCPARAMS)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'ParameterList', '"+LCPARAMS+"')"+CHR(13)+CHR(10)
ENDIF
IF  .NOT. EMPTY(LCRULEEXPR)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'RuleExpression', '"+LCRULEEXPR+"')"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'RuleText', '"+LCRULETEXT+"')"+CHR(13)+CHR(10)
ENDIF
IF LLOFFLINE
LCVIEWSCHEMA = LCVIEWSCHEMA+"CREATEOFFLINE('"+PCVIEWNAME+"')"+CHR(13)+CHR(10)
ENDIF
LCDBCNAME = DBC()
USE SHARED (LCDBCNAME) AGAIN ALIAS GKCDBC IN 0
SELECT GKCDBC
LOCATE FOR ALLTRIM(UPPER(OBJECTNAME))==PCVIEWNAME .AND. OBJECTTYPE='View'
LNOBJECTID = GKCDBC.OBJECTID
SELECT OBJECTNAME FROM gkcdbc WHERE PARENTID=LNOBJECTID INTO ARRAY LCVIEWFLDS
USE IN GKCDBC
IF _TALLY=0
LNFLDCNT = 0
LCFLDDEFN = "FieldCount|"+TRANSFORM(LNFLDCNT)+CHR(13)+CHR(10)
ELSE
LNFLDCNT = ALEN(LCVIEWFLDS, 1)
LCFLDDEFN = "FieldCount|"+TRANSFORM(LNFLDCNT)+CHR(13)+CHR(10)
FOR LNFLD = 1 TO LNFLDCNT
LCFIELDALIAS = PCVIEWNAME+"."+ALLTRIM(LCVIEWFLDS(LNFLD, 1))
LCKEYFIELD = IIF(DBGETPROP(LCFIELDALIAS, 'Field', 'KeyField'), '.T.', '.F.')
LCUPDATABLE = IIF(DBGETPROP(LCFIELDALIAS, 'Field', 'Updatable'), '.T.', '.F.')
LCUPDATENAME = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, 'Field', 'UpdateName'))
LCDBSETPROP = "DBSETPROP('"+LCVIEWNAME+"."+ALLTRIM(LCVIEWFLDS(LNFLD, 1))+"', 'Field', "
LCDELIMITER = IIF("'"$LCUPDATENAME, '"', "'")
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'KeyField', "+LCKEYFIELD+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Updatable', "+LCUPDATABLE+")"+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'UpdateName', "+LCDELIMITER+LCUPDATENAME+LCDELIMITER+")"+CHR(13)+CHR(10)
LCFLDDEFN = LCFLDDEFN+"FieldName|"+ALLTRIM(LCVIEWFLDS(LNFLD, 1))+CHR(13)+CHR(10)
LCFLDDEFN = LCFLDDEFN+"KeyField|"+LCKEYFIELD+CHR(13)+CHR(10)
LCFLDDEFN = LCFLDDEFN+"Updatable|"+LCUPDATABLE+CHR(13)+CHR(10)
LCFLDDEFN = LCFLDDEFN+"UpdateName|"+LCUPDATENAME+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "RuleExpression"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'RuleExpression', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"RuleExpression|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "RuleText"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'RuleText', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"RuleText|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "Caption"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Caption', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"Caption|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "Comment"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Comment', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"Comment|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "InputMask"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'InputMask', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"InputMask|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "Format"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'Format', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"Format|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "DisplayClass"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'DisplayClass', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"DisplayClass|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "DisplayClassLibrary"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'DisplayClassLibrary', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"DisplayClassLibrary|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "DataType"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'DataType', '"+LCPROPERTY+"')"+CHR(13)+CHR(10)
ENDIF
LCFLDDEFN = LCFLDDEFN+"DataType|"+LCPROPERTY+CHR(13)+CHR(10)
LCPROPERTY = FSTRIPLINE(DBGETPROP(LCFIELDALIAS, "Field", "DefaultValue"))
IF EMPTY(LCPROPERTY)
LCVIEWSCHEMA = LCVIEWSCHEMA+LCDBSETPROP+"'DefaultValue', '"+LCPROPERTY+"')"
ENDIF
LCFLDDEFN = LCFLDDEFN+"DefaultValue|"+LCPROPERTY+CHR(13)+CHR(10)
ENDFOR
ENDIF
PORETURN.SCHEMA = LCVIEWSCHEMA
LCVIEWSCHEMA = "******View Definition - "+PCVIEWNAME+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"Comment|"+LCCOMMENT+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"ConnectName|"+LCCONNECTNAME+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"SQL|"+LCSQL+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"UpdateType|"+LCUPDATETYPE+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"WhereType|"+LCWHERETYPE+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"Fetchmemo|"+LCFETCHMEMO+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"ShareConnection|"+LCSHARECONNECTION+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"SendUpdates|"+LCSENDUPDATES+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"UseMemoSize|"+LCUSEMEMOSIZE+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"FetchSize|"+LCFETCHSIZE+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"MaxRecords|"+LCMAXRECORDS+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"Tables|"+LCTABLES+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"Prepared|"+LCPREPARED+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"CompareMemo|"+LCCOMPAREMEMO+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"FetchAsNeeded|"+LCFETCHASNEEDED+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"ParameterList|"+LCPARAMS+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"AllowSimultaneousFetch|"+LCALLOWSIMULFETCH+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"BatchUpdateCount|"+LCBATCHUPDCOUNT+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"RuleExpression|"+LCRULEEXPR+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"RuleText|"+LCRULETEXT+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"Offline|"+TRANSFORM(LLOFFLINE)+CHR(13)+CHR(10)
LCVIEWSCHEMA = LCVIEWSCHEMA+"SourceType|"+TRANSFORM(LNSOURCETYPE)+CHR(13)+CHR(10)
PORETURN.VERSCTRL = LCVIEWSCHEMA+"******Field Properties******"+CHR(13)+CHR(10)+LCFLDDEFN
LCRTNDEFN = PCVIEWNAME+"|"+LCVIEWTYPE+"|"+IIF(EMPTY(LCTABLES), " ", LCTABLES)+"|"+IIF(EMPTY(LCCOMMENT), " ", LCCOMMENT)+"|"+TRANSFORM(LNFLDCNT)
IF LLDBCOPENED
CLOSE DATABASES
ENDIF
CATCH TO LOEXCEPTION
LCUSERMSG = 'Unable to open selected file to add a version.'
= GKCWMSGBOX(LCUSERMSG, "GKC Project Manager", 16, "WARNING")
ENDTRY
RETURN LCRTNDEFN
ENDFUNC
**
FUNCTION fStripLine
LPARAMETERS PCLINE
LOCAL LCLINE
LCLINE = ALLTRIM(PCLINE)
IF EMPTY(LCLINE)
LCLINE = SPACE(1)
ELSE
LCLINE = STRTRAN(LCLINE, '"', "'")
LCLINE = STRTRAN(LCLINE, CHR(10))
LCLINE = STRTRAN(LCLINE, CHR(13), " + $$CRLF$$ + ")
ENDIF
IF LEFT(LCLINE, 3)=" + "
LCLINE = SUBSTR(LCLINE, 4)
ENDIF
RETURN LCLINE
ENDFUNC
**
