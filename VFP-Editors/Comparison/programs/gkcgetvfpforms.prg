**
FUNCTION GKCGetVFPForms
LPARAMETERS PNLEFT, PNTOP
LOCAL LLFOUND, LOWINDOW, LOFORM, LHDESKTOP, LHFIRSTCHILD, LHLASTCHILD, LHCURRENT, LCWINCAP
LLFOUND = .F.
IF PNLEFT>0 .AND. PNTOP>0
CREATE CURSOR c_wintext (WINHANDLE I, WINTITLE C (200))
LOWINDOW = CREATEOBJECT("Twindow", _VFP.HWND, 0)
LHDESKTOP = GETDESKTOPWINDOW()
LHFIRSTCHILD = GETWINDOW(LHDESKTOP, 5)
LHLASTCHILD = GETWINDOW(LHFIRSTCHILD, 1)
LHCURRENT = LHFIRSTCHILD
DO WHILE .T.
LCWINCAP = GETWINTEXT(LHCURRENT)
INSERT INTO c_wintext (WINHANDLE, WINTITLE) VALUES (LHCURRENT, LCWINCAP)
IF LHCURRENT=LHLASTCHILD
EXIT
ENDIF
LHCURRENT = GETWINDOW(LHCURRENT, 2)
ENDDO
SELECT C_WINTEXT
SCAN FOR  .NOT. EMPTY(WINTITLE)
LPRECT = REPLICATE(CHR(0), 16)
= GETWINDOWRECT(C_WINTEXT.WINHANDLE, @LPRECT)
LNLEFT = BUF2DWORD(SUBSTR(LPRECT, 1, 4))
LNTOP = BUF2DWORD(SUBSTR(LPRECT, 5, 4))
IF LNLEFT=PNLEFT .AND. LNTOP=PNTOP
LLFOUND = .T.
EXIT
ENDIF
ENDSCAN
USE
ENDIF
RETURN LLFOUND
ENDFUNC
**
FUNCTION Buf2Dword
LPARAMETERS LCBUFFER
RETURN ASC(SUBSTR(LCBUFFER, 1, 1))+BITLSHIFT(ASC(SUBSTR(LCBUFFER, 2, 1)), 8)+BITLSHIFT(ASC(SUBSTR(LCBUFFER, 3, 1)), 16)+BITLSHIFT(ASC(SUBSTR(LCBUFFER, 4, 1)), 24)
ENDFUNC
**
FUNCTION GetWinText
LPARAMETERS PHHDL
LOCAL LCBUFFER, LNRESULT
LCBUFFER = SPACE(200)
LNRESULT = GETWINDOWTEXT(PHHDL, @LCBUFFER, LEN(LCBUFFER))
RETURN UPPER(LEFT(LCBUFFER, LNRESULT))
ENDFUNC
**
DEFINE CLASS Twindow AS Custom
**
FUNCTION Init
LPARAMETERS PNHANDLE, PNPARENT
LOCAL LHCHILD, LOCHILD, LHNEXT, LONEXT, LCWINCAP
IF PNHANDLE=0
RETURN .F.
ENDIF
LCWINCAP = GETWINTEXT(PNHANDLE)
INSERT INTO c_wintext (WINHANDLE, WINTITLE) VALUES (PNHANDLE, LCWINCAP)
LHCHILD = GETWINDOW(PNHANDLE, 5)
LOCHILD = CREATEOBJECT("Twindow", LHCHILD, PNHANDLE)
IF PNPARENT<>0
LHNEXT = GETWINDOW(PNHANDLE, 2)
LONEXT = CREATEOBJECT("Twindow", LHNEXT, PNPARENT)
ENDIF
ENDFUNC
**
ENDDEFINE
**
