**
FUNCTION GKCGetObjMemberList
LPARAMETERS POMEMBER, PCCLASSLOC, PCOLE2, PCBASECLASS, PCCLASS
LOCAL LOOBJREF, LNNUMPEMS, LNNDX, LCOLEFILE, LOINTERFACE, LNMBR, LCNAME, LCCLASSLOC, LCSYSPATH, LCALIAS
LOCAL LNPOS, LNLEN, LCXML, LNNUMCUSTOM, LCFULLPATH, LOEXCEPTION, LOERROR, LLERROR, LCMETHNAME
LOCAL LCCUSTOM[1]
LNNUMPEMS = 0
DO CASE
CASE EMPTY(PCOLE2) .AND. EMPTY(PCCLASSLOC) .AND.  .NOT. EMPTY(PCBASECLASS)
LOOBJREF = ALLTRIM(PCBASECLASS)
LNNUMPEMS = AMEMBERS(POMEMBER.PEMLIST, LOOBJREF, 1)
FOR LNNDX = 1 TO LNNUMPEMS
LCMETHNAME = GKCGETSTOCKNAME(POMEMBER.PEMLIST(LNNDX, 1))
IF EMPTY(LCMETHNAME)
LCMETHNAME = PROPER(POMEMBER.PEMLIST(LNNDX, 1))
ENDIF
POMEMBER.PEMLIST[LNNDX, 1] = LCMETHNAME
ENDFOR
CASE EMPTY(PCOLE2) .AND.  .NOT. EMPTY(PCCLASSLOC)
LCCLASSLOC = GKCGETFILEFULLPATH(ALLTRIM(PCCLASSLOC), POMEMBER.BASEPATH)
LCCLASSLOC = GKCOPENASTABLE(LCCLASSLOC, "gkc_vcx", POMEMBER.MAINFORM)
IF USED("gkc_vcx")
SELECT GKC_VCX
USE
TRY
LOOBJREF = NEWOBJECT(ALLTRIM(PCCLASS), LCCLASSLOC, 0)
LNNUMPEMS = AMEMBERS(POMEMBER.PEMLIST, LOOBJREF, 1)
FOR LNNDX = 1 TO LNNUMPEMS
LCMETHNAME = GKCGETSTOCKNAME(POMEMBER.PEMLIST(LNNDX, 1))
IF EMPTY(LCMETHNAME)
LCMETHNAME = PROPER(POMEMBER.PEMLIST(LNNDX, 1))
ENDIF
POMEMBER.PEMLIST[LNNDX, 1] = LCMETHNAME
ENDFOR
LOOBJREF = .NULL.
CLEAR CLASSLIB (LCCLASSLOC)
CATCH TO LOEXCEPTION
LOERROR = CREATEOBJECT("Empty")
ADDPROPERTY(LOERROR, "ErrorNum", TRANSFORM(LOEXCEPTION.ERRORNO))
ADDPROPERTY(LOERROR, "LineNum", TRANSFORM(LOEXCEPTION.LINENO))
ADDPROPERTY(LOERROR, "CodeLine", LOEXCEPTION.LINECONTENTS)
ADDPROPERTY(LOERROR, "ErrMsg", LOEXCEPTION.MESSAGE)
ADDPROPERTY(LOERROR, "Method", "GetObjMemberList")
ADDPROPERTY(LOERROR, "ErrStack[1]")
= ASTACKINFO(LOERROR.ERRSTACK)
DO FORM GKCErrMsgBox WITH LOERROR
ENDTRY
ENDIF
CASE  .NOT. EMPTY(PCOLE2)
LCOLEFILE = ALLTRIM(SUBSTR(PCOLE2, ATC("=", PCOLE2)+1))
DO WHILE INLIST(ASC(RIGHT(LCOLEFILE, 1)), 10, 13, 12)
LCOLEFILE = LEFT(LCOLEFILE, LEN(LCOLEFILE)-1)
ENDDO
IF  .NOT. FILE(LCOLEFILE)
LCSYSPATH = SPACE(256)
GETSYSTEMDIRECTORY(@LCSYSPATH, 256)
LCSYSPATH = ALLTRIM(LCSYSPATH)
IF ASC(RIGHT(LCSYSPATH, 1))=0
LCSYSPATH = LEFT(LCSYSPATH, LEN(LCSYSPATH)-1)
ENDIF
LCOLEFILE = LCSYSPATH+SUBSTR(LCOLEFILE, RATC("\", LCOLEFILE))
IF  .NOT. FILE(LCOLEFILE)
RETURN LNNUMPEMS
ENDIF
ENDIF
LOOBJREF = CREATEOBJECT('TLI.TLIApplication')
IF VARTYPE(LOOBJREF)="O"
LOOBJREF = LOOBJREF.TYPELIBINFOFROMFILE(LCOLEFILE)
IF VARTYPE(LOOBJREF)="O"
FOR LNNDX = 1 TO LOOBJREF.INTERFACES.COUNT
LOINTERFACE = LOOBJREF.INTERFACES(LNNDX)
FOR LNMBR = 1 TO LOINTERFACE.MEMBERS.COUNT
LCNAME = LOINTERFACE.MEMBERS(LNMBR).NAME
IF LEFT(LCNAME, 1)<>"_" .AND. ASCAN(POMEMBER.PEMLIST, LCNAME)=0 .AND.  .NOT. FCHECKFLAG(LOINTERFACE.MEMBERS(LNMBR).ATTRIBUTEMASK, 64)
DO CASE
CASE INLIST(LOINTERFACE.MEMBERS(LNMBR).INVOKEKIND, 2, 4, 8) .OR. (LOINTERFACE.MEMBERS(LNMBR).INVOKEKIND=0 .AND. LOINTERFACE.MEMBERS(LNMBR).DESCKIND=2)
LNNUMPEMS = LNNUMPEMS+1
DIMENSION POMEMBER.PEMLIST[LNNUMPEMS, 2]
POMEMBER.PEMLIST[LNNUMPEMS, 1] = LCNAME
POMEMBER.PEMLIST[LNNUMPEMS, 2] = "Property"
CASE BITTEST(LOINTERFACE.MEMBERS(LNMBR).INVOKEKIND, 0)
LNNUMPEMS = LNNUMPEMS+1
DIMENSION POMEMBER.PEMLIST[LNNUMPEMS, 2]
POMEMBER.PEMLIST[LNNUMPEMS, 1] = LCNAME
POMEMBER.PEMLIST[LNNUMPEMS, 2] = "Method"
ENDCASE
ENDIF
ENDFOR
ENDFOR
ENDIF
LOOBJREF = .NULL.
ENDIF
IF  .NOT. EMPTY(PCCLASSLOC)
LCCLASSLOC = GKCGETFILEFULLPATH(ALLTRIM(PCCLASSLOC), POMEMBER.BASEPATH)
LCALIAS = STRTRAN(JUSTSTEM(LCCLASSLOC), " ", "")
= GKCOPENASTABLE(LCCLASSLOC, LCALIAS, "")
IF USED(LCALIAS)
SELECT &LCALIAS
LOCATE FOR UPPER(ALLTRIM(OBJNAME))==UPPER(ALLTRIM(PCCLASS)) .AND.  .NOT. DELETED()
IF FOUND()
LNPOS = ATC("<VFPData>",&LCALIAS..PROPERTIES)
IF LNPOS>0
LNLEN = ATC("</VFPData>",&LCALIAS..PROPERTIES)
IF LNLEN>0
LCXML = SUBSTR(&LCALIAS..PROPERTIES,LNPOS,LNLEN-LNPOS+10)
= XMLTOCURSOR(LCXML)
ENDIF
ENDIF
LNNUMCUSTOM = ALINES(LCCUSTOM,&LCALIAS..RESERVED3,.T.)
FOR LNNDX = 1 TO LNNUMCUSTOM
LCNAME = GETWORDNUM(LCCUSTOM(LNNDX), 1, " ")
DO CASE
CASE LEFT(LCNAME, 1)="*"
LLPROPERTY = .F.
LCNAME = SUBSTR(LCNAME, 2)
CASE LEFT(LCNAME, 1)="^"
LLPROPERTY = .T.
LCNAME = SUBSTR(LCNAME, 2)
LNPOS = ATC("(", LCNAME)
IF LNPOS>0
LCNAME = LEFT(LCNAME, LNPOS-1)
ELSE
LNPOS = ATC("[", LCNAME)
IF LNPOS>0
LCNAME = LEFT(LCNAME, LNPOS-1)
ENDIF
ENDIF
OTHERWISE
LLPROPERTY = .T.
ENDCASE
IF USED('xmlresult')
SELECT XMLRESULT
LOCATE FOR ALLTRIM(NAME)==LOWER(LCNAME)
IF FOUND()
LCNAME = ALLTRIM(XMLRESULT.DISPLAY)
ENDIF
ENDIF
LNNUMPEMS = LNNUMPEMS+1
DIMENSION POMEMBER.PEMLIST[LNNUMPEMS, 2]
POMEMBER.PEMLIST[LNNUMPEMS, 1] = LCNAME
POMEMBER.PEMLIST[LNNUMPEMS, 2] = IIF(LLPROPERTY, "Property", "Method")
ENDFOR
ENDIF
SELECT &LCALIAS
USE
IF USED('xmlresult')
SELECT XMLRESULT
USE
ENDIF
ENDIF
ENDIF
OTHERWISE
LNNUMPEMS = 0
ENDCASE
= ASORT(POMEMBER.PEMLIST)
RETURN LNNUMPEMS
ENDFUNC
**
FUNCTION fCheckFlag
LPARAMETERS PNVALUE, PNFLAG
LOCAL LNBIT, LNCOUNTER
LNBIT = 0
DO WHILE PNFLAG>1
LNBIT = LNBIT+1
PNFLAG = PNFLAG/2
ENDDO
RETURN BITTEST(PNVALUE, LNBIT)
ENDFUNC
**
