**
FUNCTION GKCBeautifyText
LPARAMETERS PCCODETEXT, POBEAUTIFY, PNTABSIZE
LOCAL LNNUMLINES, LNLINE, LCCODETEXT, LNTAB, LCCODEBEAUTIFY, LNTABINC, LLDOCASE, LNPOS, LNADJ, LNSPACE
LOCAL LNCHR, LCCONTINUE
LOCAL LCCODELINES[1]
LCCONTINUE = ""
LNNUMLINES = ALINES(LCCODELINES, PCCODETEXT, .T.)
LNTAB = 0
FOR LNLINE = 1 TO LNNUMLINES
LCCODETEXT = ALLTRIM(LCCODELINES(LNLINE), 1, CHR(9), " ")
DO CASE
CASE LEFT(LCCODETEXT, 1)="*"
IF POBEAUTIFY.COMMENTINDENT
LNTABINC = 0
ELSE
LCCODELINES[LNLINE] = LCCODETEXT
LOOP
ENDIF
CASE EMPTY(LCCODETEXT)
LCCODELINES[LNLINE] = LCCODETEXT
LOOP
CASE UPPER(LEFT(LCCODETEXT, 12))="DEFINE CLASS" .OR. UPPER(LEFT(LCCODETEXT, 9))="DEF CLASS"
IF POBEAUTIFY.INDENTDEFINE
LNTABINC = 1
ELSE
LNTABINC = 0
ENDIF
CASE INLIST(UPPER(LEFT(LCCODETEXT, 14)), "PROTECTED FUNC", "PROTECTED PROC") .OR. INLIST(UPPER(LEFT(LCCODETEXT, 9)), "PROT FUNC", "PROT PROC")
IF POBEAUTIFY.INDENTPROC
LNTABINC = 1
ELSE
LNTABINC = 0
ENDIF
CASE INLIST(UPPER(LEFT(LCCODETEXT, 8)), "FUNCTION", "PROCEDUR") .OR. INLIST(UPPER(LEFT(LCCODETEXT, 5)), "FUNC ", "PROC ")
IF POBEAUTIFY.INDENTPROC
LNTABINC = 1
ELSE
LNTABINC = 0
ENDIF
CASE INLIST(UPPER(LEFT(LCCODETEXT, 3)), "IF ", "TRY")
LNTABINC = 1
CASE INLIST(UPPER(LEFT(LCCODETEXT, 4)), "FOR ", "SCAN", "TEXT")
LNTABINC = 1
CASE UPPER(LEFT(LCCODETEXT, 5))="WITH "
LNTABINC = 1
CASE INLIST(UPPER(LEFT(LCCODETEXT, 7)), "DO WHIL", "PRINTJO")
IF POBEAUTIFY.INDENTCASE
LNTABINC = 1
ELSE
LNTABINC = 0
ENDIF
CASE UPPER(LEFT(LCCODETEXT, 4))="ELSE"
LNTABINC = 1
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 5))="CATCH"
LNTABINC = 1
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 7))="FINALLY"
LNTABINC = 1
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 7))="DO CASE"
IF POBEAUTIFY.INDENTCASE
LNTABINC = 1
ELSE
LNTABINC = 0
ENDIF
LLDOCASE = .F.
CASE UPPER(LEFT(LCCODETEXT, 4))="CASE"
LNTABINC = 1
IF LLDOCASE
LNTAB = LNTAB-1
ENDIF
LLDOCASE = .T.
CASE UPPER(LEFT(LCCODETEXT, 9))="OTHERWISE"
LNTABINC = 1
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 4))="NEXT"
LNTABINC = 0
LNTAB = LNTAB-1
CASE INLIST(UPPER(LEFT(LCCODETEXT, 5)), "ENDDO", "ENDIF")
LNTABINC = 0
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 11))="ENDPRINTJOB"
LNTABINC = 0
LNTAB = LNTAB-1
CASE INLIST(UPPER(LEFT(LCCODETEXT, 6)), "ENDTRY", "ENDFOR", "ENDDEF")
LNTABINC = 0
LNTAB = LNTAB-1
CASE UPPER(LEFT(LCCODETEXT, 7))="ENDCASE"
LNTABINC = 0
IF POBEAUTIFY.INDENTCASE
LNTAB = LNTAB-2
ELSE
LNTAB = LNTAB-1
ENDIF
CASE INLIST(UPPER(LEFT(LCCODETEXT, 7)), "ENDTEXT", "ENDSCAN", "ENDWITH")
LNTABINC = 0
LNTAB = LNTAB-1
CASE INLIST(UPPER(LEFT(LCCODETEXT, 7)), "ENDFUNC", "ENDPROC")
LNTABINC = 0
IF POBEAUTIFY.INDENTPROC
LNTAB = LNTAB-1
ENDIF
OTHERWISE
LNTABINC = 0
ENDCASE
IF LNTAB<0
LNTAB = 0
ENDIF
LCCODELINES[LNLINE] = REPLICATE(CHR(9), LNTAB)+LCCONTINUE+LCCODETEXT
LNTAB = LNTAB+LNTABINC
IF RIGHT(LCCODETEXT, 1)=";"
LCCONTINUE = CHR(9)
ELSE
LCCONTINUE = ""
ENDIF
ENDFOR
IF POBEAUTIFY.ALIGNCOMMENT
FOR LNLINE = 1 TO LNNUMLINES
LNPOS = ATC("&"+"&", LCCODELINES(LNLINE))
IF LNPOS>0
LNTAB = 0
LNCHR = 1
DO WHILE .T.
IF SUBSTR(LCCODELINES(LNLINE), LNCHR, 1)=CHR(9)
LNTAB = LNTAB+1
ENDIF
LNCHR = LNCHR+1
IF LNCHR>LEN(LCCODELINES(LNLINE)) .OR. LNCHR=POBEAUTIFY.ALIGNCOMMENTCOL
EXIT
ENDIF
ENDDO
LNADJ = POBEAUTIFY.ALIGNCOMMENTCOL-(LNPOS+LNTAB*(PNTABSIZE-1))
DO CASE
CASE LNADJ<0
LNADJ = ABS(LNADJ)
LNSPACE = 0
FOR LNCHR = LNPOS-1 TO 1 STEP -1
IF SUBSTR(LCCODELINES(LNLINE), LNCHR, 1)=SPACE(1)
LNSPACE = LNSPACE+1
ELSE
EXIT
ENDIF
ENDFOR
IF LNSPACE>3
IF LNSPACE>LNADJ+3
LCCODELINES[LNLINE] = STUFF(LCCODELINES(LNLINE), LNPOS-LNADJ, LNADJ, "")
ELSE
LNSPACE = LNSPACE-3
LCCODELINES[LNLINE] = STUFF(LCCODELINES(LNLINE), LNPOS-LNSPACE, LNSPACE, "")
ENDIF
ENDIF
CASE LNADJ>0
LCCODELINES[LNLINE] = STUFF(LCCODELINES(LNLINE), LNPOS-1, 0, REPLICATE(" ", LNADJ))
ENDCASE
ENDIF
ENDFOR
ENDIF
IF POBEAUTIFY.TABCHR=2
FOR LNLINE = 1 TO LNNUMLINES
LCCODELINES[LNLINE] = STRTRAN(LCCODELINES(LNLINE), CHR(9), REPLICATE(" ", POBEAUTIFY.TABSIZE))
ENDFOR
ENDIF
IF GKCOPENFDKEYWRD()
IF POBEAUTIFY.KEYWORDS<>5
FOR LNLINE = 1 TO LNNUMLINES
LCCODELINES[LNLINE] = FSETCASE(LCCODELINES(LNLINE), POBEAUTIFY.KEYWORDS, "KEYWORDS")
ENDFOR
ENDIF
IF POBEAUTIFY.SYMBOLS<>5
FOR LNLINE = 1 TO LNNUMLINES
LCCODELINES[LNLINE] = FSETCASE(LCCODELINES(LNLINE), POBEAUTIFY.SYMBOLS, "SYMBOLS")
ENDFOR
ENDIF
USE IN FDKEYWRD
ELSE
ENDIF
LCCODEBEAUTIFY = ""
FOR LNLINE = 1 TO LNNUMLINES-1
LCCODEBEAUTIFY = LCCODEBEAUTIFY+LCCODELINES(LNLINE)+CHR(13)+CHR(10)
ENDFOR
LCCODEBEAUTIFY = LCCODEBEAUTIFY+LCCODELINES(LNNUMLINES)
RETURN LCCODEBEAUTIFY
ENDFUNC
**
FUNCTION fSetCase
LPARAMETERS PCCODELINE, PNBEAUTIFY, PCMODE
LOCAL LNBEG, LNEND, LCTOKEN, LCBEGDELIMITER, LCENDDELIMITER
LCBEGDELIMITER = "!@#$%&*(-+={<,>.?/"+SPACE(1)+CHR(9)
LCENDDELIMITER = "!@#$%&*)-+=}<,>.?/;"+SPACE(1)+CHR(9)
LNBEG = 1
LNEND = 1
IF ALLTRIM(PCCODELINE, 1, CHR(9), " ")<>"*"
DO WHILE LNBEG<LEN(PCCODELINE)
IF SUBSTR(PCCODELINE, LNBEG, 2)="&"+"&"
EXIT
ENDIF
IF INLIST(SUBSTR(PCCODELINE, LNBEG, 1), '"', "'", "[")
DO WHILE LNBEG<LEN(PCCODELINE)
LNBEG = LNBEG+1
IF INLIST(SUBSTR(PCCODELINE, LNBEG, 1), '"', "'", "]")
LNBEG = LNBEG+1
EXIT
ENDIF
ENDDO
ENDIF
IF  .NOT. (SUBSTR(PCCODELINE, LNBEG, 1)$LCBEGDELIMITER)
LNEND = LNBEG+1
DO WHILE LNEND<=LEN(PCCODELINE)
IF SUBSTR(PCCODELINE, LNEND, 1)$LCENDDELIMITER
EXIT
ENDIF
LNEND = LNEND+1
ENDDO
LCTOKEN = SUBSTR(PCCODELINE, LNBEG, LNEND-LNBEG)
DO CASE
CASE PCMODE="KEYWORDS"
LOCATE FOR ALLTRIM(UPPER(FDKEYWRD.TOKEN))==ALLTRIM(UPPER(LCTOKEN)) .AND.  .NOT. INLIST(FDKEYWRD.CODE, "M", "P")
CASE PCMODE="SYMBOLS"
LOCATE FOR ALLTRIM(UPPER(FDKEYWRD.TOKEN))==ALLTRIM(UPPER(LCTOKEN)) .AND. INLIST(FDKEYWRD.CODE, "M", "P")
ENDCASE
IF FOUND()
DO CASE
CASE PNBEAUTIFY=1
LCTOKEN = UPPER(LCTOKEN)
CASE PNBEAUTIFY=2
LCTOKEN = LOWER(LCTOKEN)
CASE PNBEAUTIFY=3
LCTOKEN = ALLTRIM(FDKEYWRD.TOKEN)
CASE PNBEAUTIFY=4
LCTOKEN = PROPER(LCTOKEN)
ENDCASE
PCCODELINE = STUFF(PCCODELINE, LNBEG, LNEND-LNBEG, LCTOKEN)
ENDIF
LNBEG = LNEND+1
ELSE
LNBEG = LNBEG+1
ENDIF
ENDDO
ENDIF
RETURN PCCODELINE
ENDFUNC
**
