**
FUNCTION GKCCheckDebugOpen
LOCAL LLFOUND, LOWINDOW, LHDESKTOP, LHFIRSTCHILD, LHLASTCHILD, LHCURRENT
CREATE CURSOR c_wintext (WINHANDLE I, WINTITLE C (200))
LLFOUND = .F.
LOWINDOW = CREATEOBJECT("Twindow", _VFP.HWND, 0)
LHDESKTOP = GETDESKTOPWINDOW()
LHFIRSTCHILD = GETWINDOW(LHDESKTOP, 5)
LHLASTCHILD = GETWINDOW(LHFIRSTCHILD, 1)
LHCURRENT = LHFIRSTCHILD
DO WHILE .T.
	INSERT INTO c_wintext (WINHANDLE, WINTITLE) VALUES (LHCURRENT, GETWINTEXT(LHCURRENT))
	IF LHCURRENT=LHLASTCHILD
		EXIT
	ENDIF
	LHCURRENT = GETWINDOW(LHCURRENT, 2)
ENDDO
SELECT C_WINTEXT
SCAN FOR  .NOT. EMPTY(WINTITLE)
	IF C_WINTEXT.WINTITLE="VISUAL FOXPRO DEBUGGER"
		LLFOUND = .T.
		CLOSE DEBUGGER
		EXIT
	ENDIF
ENDSCAN
USE
RETURN LLFOUND
ENDFUNC
**
FUNCTION GetWinText
LPARAMETERS PHHDL
LOCAL LCBUFFER, LNRESULT
LCBUFFER = SPACE(200)
LNRESULT = GETWINDOWTEXT(PHHDL, @LCBUFFER, LEN(LCBUFFER))
RETURN UPPER(LEFT(LCBUFFER, LNRESULT))
ENDFUNC
**
DEFINE CLASS Twindow AS Custom
**
FUNCTION Init
LPARAMETERS PNHANDLE, PNPARENT
LOCAL LHCHILD, LOCHILD, LHNEXT, LONEXT, LCWINCAP
IF PNHANDLE=0
	RETURN .F.
ENDIF
LCWINCAP = GETWINTEXT(PNHANDLE)
INSERT INTO c_wintext (WINHANDLE, WINTITLE) VALUES (PNHANDLE, LCWINCAP)
LHCHILD = GETWINDOW(PNHANDLE, 5)
LOCHILD = CREATEOBJECT("Twindow", LHCHILD, PNHANDLE)
IF PNPARENT<>0
	LHNEXT = GETWINDOW(PNHANDLE, 2)
	LONEXT = CREATEOBJECT("Twindow", LHNEXT, PNPARENT)
ENDIF
ENDFUNC
**
ENDDEFINE
**
